// #################################################################################################
//  Documentation - ALox Logging Library
//
//  Copyright 2013-2017 A-Worx GmbH, Germany
//  Published under 'Boost Software License' (a free software license, see LICENSE.txt)
// #################################################################################################

/**
\page alox_cs_macros        Conditional Compilation Symbols

\tableofcontents

# Conditional Compilation Symbols #  {#alox_cs_macros_conditional_compile_symbols}

In section \ref alox_cs_setup we have learned about some conditional
compilation symbols already. The following gives the complete list of such symbols
introduced by ALox for C#:


- **ALIB_IDE_VSTUDIO**<br>
  Enables code that supports compiling/running \b %ALib in development environment
  [Microsoft Visual Studio](http://visualstudio.com).
  <p>

- **ALIB_IDE_RIDER**<br>
  Enables code that supports compiling/running \b %ALib in development environment
  [JetBrains Rider](https://www.jetbrains.com/rider/).
  <p>

- **ALIB_IDE_MONODEVELOP**<br>
  Enables code that supports compiling/running \b %ALib in development environment
  [MonoDevelop](http://www.monodevelop.com).
  <p>

- **ALOX_DBG_LOG**<br>
  Symbol to enable debug logging. This should be set only in the *debug configuration* of ALox
  enabled projects.
  If not set, no debug log output is generated, i.e. all invocations of methods of
  class [Log](@ref #cs::aworx::lox::Log) are pruned.
  <p>

- **ALOX_REL_LOG**<br>
  Symbol to enable release logging. This should be set in *debug and release configurations* of
  projects that are supposed to use ALox for release log output.
  If you do not use release logging features of ALox, not setting this symbol minimizes the code
  footprint of the ALox classes that are added to your executables.
  <p>

- **ALOX_WP71**<br>
  To compile ALox for Windows Phone 7.1 projects. This should be set in the Debug and Release
  configuration of your projects Windows Phone 7.1 projects.
  In addition to some compatibility changes in the code, this symbol also activates **ALOX_NO_REFLECTION**,
  hence the LogTools.Instance method is not available in Windows Phone projects. (This is due to security
  restrictions in the Windows Phone system architecture).
  <p>

- **ALOX_WP8**<br>
  To compile ALox for Windows Phone 8 projects. This should be set in the Debug and Release
  configuration of your projects Windows Phone 8.x projects.
  In addition to some compatibility changes in the code, this symbol also activates **ALOX_NO_REFLECTION**,
  hence the LogTools.Instance method is not available in Windows Phone projects. (This is due to security
  restrictions in the Windows Phone system architecture).
  <p>

- **ALOX_NO_REFLECTION**<br>
  This symbol deactivates the use of reflection in class [LogTools](@ref #cs::aworx::lox::tools::LogTools).
  This is useful for target platforms that do not allow instance inspection using reflection techniques.
  The method [LogTools.Instance](@ref #cs::aworx::lox::tools::LogTools::Instance) will be available
  but just convert your object into readable text using *ToString()*.
  <p>

- **ALOX_NO_XML**<br>
  This symbol deactivates the use of *System.Xml.Linq* library in class [LogTools](@ref #cs::aworx::lox::tools::LogTools).
  This is useful for target platforms that do not support this library.
  The method [LogTools.XML](@ref #cs::aworx::lox::tools::LogTools::XML) will not be available however.
  <p>
*/
