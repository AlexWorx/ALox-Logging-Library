// #################################################################################################
//  Documentation - ALox Logging Library
//
//  (c) 2013-2016 A-Worx GmbH, Germany
//  Published under MIT License (Open Source License, see LICENSE.txt)
// #################################################################################################


/**
\page man_intro         About ALox

## Introduction ##

ALox is a small and efficient software library that provides an ecosystem to support structured and
organized log output. ALox is available in C++, C# and JAVA on at least GNU/Linux, Windows,
Windows Phone and Android operating systems.

The library attempts to make __debug logging__ as easy and lightweight as possible. One of the goals
we want to achieve is that developers, once using  of the library, just stop to put any temporary
debug output statements into their code, but do it all with nice, readable, configurable, reusable
logging statements that can be temporarily or long-term switched off and that are furthermore
automatically pruned out of release versions of the application.

On the other end of the list, we want to enable __release logging__ for applications in production
systems (release versions) to collect mission critical metrics and data from *the field*.
Basic support for release logging is here today already. The introduction of new features and concepts
in the area of release logging will also support debug logging aspects of ALox. Therefore the natural path
of evolution for the ALox project is <em>"debug features first, release features next"</em>.

A lot of future features improvements are to come.
Stay tuned to find out if we got the time to publish it all.
If you do not want to wait, take the source, do it yourself and send us your code (of-course
with MIT license terms, otherwise please do not send anything)
We hope, the simple [Bauhaus Style](\ref faq_bauhaus)
architecture and code style  of the library allows users to easily extend ALox.

## Features and Limitations ##
Read through the list of \subpage man_features_and_limitations to learn what you will get and what not.

*/


