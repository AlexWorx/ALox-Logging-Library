<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>alib.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/</path>
    <filename>alib_8hpp</filename>
    <includes id="prepro_8hpp" name="prepro.hpp" local="yes" imported="no">alib/lang/prepro.hpp</includes>
    <includes id="assert_8hpp" name="assert.hpp" local="yes" imported="no">alib/debug/assert.hpp</includes>
    <includes id="rtti_8hpp" name="rtti.hpp" local="yes" imported="no">alib/lang/rtti.hpp</includes>
    <includes id="singleton_8hpp" name="singleton.hpp" local="yes" imported="no">alib/lang/singleton.hpp</includes>
    <includes id="types_8hpp" name="types.hpp" local="yes" imported="no">alib/lang/types.hpp</includes>
    <includes id="enums_8hpp" name="enums.hpp" local="yes" imported="no">alib/lang/enums.hpp</includes>
    <includes id="cstring_8hpp" name="cstring.hpp" local="yes" imported="no">alib/strings/cstring.hpp</includes>
    <includes id="string_8hpp" name="string.hpp" local="yes" imported="no">alib/strings/string.hpp</includes>
    <includes id="tstring_8hpp" name="tstring.hpp" local="yes" imported="no">alib/strings/tstring.hpp</includes>
    <includes id="stringliteral_8hpp" name="stringliteral.hpp" local="yes" imported="no">alib/strings/stringliteral.hpp</includes>
    <includes id="astring_8hpp" name="astring.hpp" local="yes" imported="no">alib/strings/astring.hpp</includes>
    <includes id="preallocatedstring_8hpp" name="preallocatedstring.hpp" local="yes" imported="no">alib/strings/preallocatedstring.hpp</includes>
    <includes id="resources_8hpp" name="resources.hpp" local="yes" imported="no">alib/lang/resources.hpp</includes>
    <includes id="library_8hpp" name="library.hpp" local="yes" imported="no">alib/lang/library.hpp</includes>
    <includes id="stringlib_8hpp" name="stringlib.hpp" local="yes" imported="no">alib/strings/stringlib.hpp</includes>
    <includes id="boxinglib_8hpp" name="boxinglib.hpp" local="yes" imported="no">alib/boxing/boxinglib.hpp</includes>
    <includes id="langlib_8hpp" name="langlib.hpp" local="yes" imported="no">alib/lang/langlib.hpp</includes>
    <includes id="stringboxing_8hpp" name="stringboxing.hpp" local="yes" imported="no">alib/strings/boxing/stringboxing.hpp</includes>
    <includes id="report_8hpp" name="report.hpp" local="yes" imported="no">alib/lang/report.hpp</includes>
    <includes id="enumbitwise_8hpp" name="enumbitwise.hpp" local="yes" imported="no">alib/lang/enumbitwise.hpp</includes>
    <includes id="enummetadata_8hpp" name="enummetadata.hpp" local="yes" imported="no">alib/lang/enummetadata.hpp</includes>
    <includes id="configlib_8hpp" name="configlib.hpp" local="yes" imported="no">alib/config/configlib.hpp</includes>
    <includes id="systemlib_8hpp" name="systemlib.hpp" local="yes" imported="no">alib/system/systemlib.hpp</includes>
    <includes id="applicables_8hpp" name="applicables.hpp" local="yes" imported="no">alib/strings/applicables.hpp</includes>
    <class kind="class">aworx::lib::ALib</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::config</namespace>
    <namespace>aworx::lib::detail</namespace>
    <namespace>aworx::lib::threads</namespace>
    <namespace>aworx::lib::time</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_VERSION</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga46e5b5269a15bdcf84fb574fb130ee28</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_REVISION</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga3b991aab7d2cf4ec1e78508e5ca8c285</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_COMPILATION_FLAGS</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gaac71b6511690f5af0abf5213b0434111</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_MODULE_BOXING</name>
      <anchorfile>group__GrpALibCodeSelectorSymbols.html</anchorfile>
      <anchor>ga687c54046eb8c2da084ad5850f3564bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_MODULE_STRINGS</name>
      <anchorfile>group__GrpALibCodeSelectorSymbols.html</anchorfile>
      <anchor>gaeb1ebdc8090c1bb6d3de7845f6b06e66</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_MODULE_CONFIGURATION</name>
      <anchorfile>group__GrpALibCodeSelectorSymbols.html</anchorfile>
      <anchor>gaf3a7c2b8c87bf604cc18de626d2c3d1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_MODULE_SYSTEM</name>
      <anchorfile>group__GrpALibCodeSelectorSymbols.html</anchorfile>
      <anchor>gabef85c7ee6f037d21186b117f700df07</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_MODULE_ALL</name>
      <anchorfile>group__GrpALibCodeSelectorSymbols.html</anchorfile>
      <anchor>gaa177515d128ddf5d8cc4649313e1abe0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::ALib</type>
      <name>ALib</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a64f75e0bd4cad92e475ad9a92812ecf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Variables</name>
      <anchorfile>namespaceaworx_1_1lib.html</anchorfile>
      <anchor>a382a38852335f58a53739d455c7d67c9</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib.html" anchor="a382a38852335f58a53739d455c7d67c9a175d5afd5eed05a9553f94bbecd80a19">LOCALE</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib.html" anchor="a382a38852335f58a53739d455c7d67c9ad954142e6b2438f23548596d3051f9ea">WAIT_FOR_KEY_PRESS</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib.html" anchor="a382a38852335f58a53739d455c7d67c9a069e3d8e83ed5666e104a6a6f6dcb634">HAS_CONSOLE_WINDOW</enumvalue>
    </member>
    <member kind="function">
      <type>ALIB_API size_t</type>
      <name>strlen16</name>
      <anchorfile>namespaceaworx_1_1lib_1_1detail.html</anchorfile>
      <anchor>a9f7d1894a43d356842eeb93d38775583</anchor>
      <arglist>(const char16_t *s)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>strlen32</name>
      <anchorfile>namespaceaworx_1_1lib_1_1detail.html</anchorfile>
      <anchor>ab54a0e13afdd0c01ed923b47fde1b095</anchor>
      <arglist>(const char32_t *s)</arglist>
    </member>
    <member kind="variable">
      <type>ALIB_API ALib</type>
      <name>ALIB</name>
      <anchorfile>namespaceaworx_1_1lib.html</anchorfile>
      <anchor>a82d1f1a7a150abed28776bc5c8df9fa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_MODULE_BOXING</name>
      <anchorfile>group__GrpALibCodeSelectorSymbols.html</anchorfile>
      <anchor>ga687c54046eb8c2da084ad5850f3564bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_MODULE_STRINGS</name>
      <anchorfile>group__GrpALibCodeSelectorSymbols.html</anchorfile>
      <anchor>gaeb1ebdc8090c1bb6d3de7845f6b06e66</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_MODULE_CONFIGURATION</name>
      <anchorfile>group__GrpALibCodeSelectorSymbols.html</anchorfile>
      <anchor>gaf3a7c2b8c87bf604cc18de626d2c3d1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_MODULE_SYSTEM</name>
      <anchorfile>group__GrpALibCodeSelectorSymbols.html</anchorfile>
      <anchor>gabef85c7ee6f037d21186b117f700df07</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_MODULE_ALL</name>
      <anchorfile>group__GrpALibCodeSelectorSymbols.html</anchorfile>
      <anchor>gaa177515d128ddf5d8cc4649313e1abe0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_VERSION</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga46e5b5269a15bdcf84fb574fb130ee28</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_REVISION</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga3b991aab7d2cf4ec1e78508e5ca8c285</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_COMPILATION_FLAGS</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gaac71b6511690f5af0abf5213b0434111</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>alox.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alox/</path>
    <filename>alox_8hpp</filename>
    <includes id="alib_8hpp" name="alib.hpp" local="yes" imported="no">alib/alib.hpp</includes>
    <includes id="alox__symbols_8hpp" name="alox_symbols.hpp" local="yes" imported="no">internals/alox_symbols.hpp</includes>
    <includes id="alox__macros_8hpp" name="alox_macros.hpp" local="yes" imported="no">internals/alox_macros.hpp</includes>
    <includes id="configuration_8hpp" name="configuration.hpp" local="yes" imported="no">alib/config/configuration.hpp</includes>
    <includes id="aloxtypesandenums_8hpp" name="aloxtypesandenums.hpp" local="yes" imported="no">aloxtypesandenums.hpp</includes>
    <includes id="log_8hpp" name="log.hpp" local="yes" imported="no">log.hpp</includes>
    <includes id="lox_8hpp" name="lox.hpp" local="yes" imported="no">lox.hpp</includes>
    <class kind="class">aworx::lox::ALox</class>
    <class kind="class">aworx::lox::ALoxReportWriter</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lox</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ALOX_API</name>
      <anchorfile>group__GrpALoxMacrosLowLevel.html</anchorfile>
      <anchor>ga2cde43a12bd2be40baa4896e409d642c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALOX_API_IS_DLL</name>
      <anchorfile>group__GrpALoxCompilerSymbols.html</anchorfile>
      <anchor>ga04a0f11ecdfec97d0ceecf328b8f181f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALOX_API_NO_DLL</name>
      <anchorfile>group__GrpALoxCompilerSymbols.html</anchorfile>
      <anchor>ga07db8b62be0212c2e0468127fb18798d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lox::ALox</type>
      <name>ALox</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a4d5353279fde6a5d6e5b1c8e776abf66</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lox::ALoxReportWriter</type>
      <name>ALoxReportWriter</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ab080a8382b8714cf6776bf5918e3b894</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Variables</name>
      <anchorfile>namespaceaworx_1_1lox.html</anchorfile>
      <anchor>a382a38852335f58a53739d455c7d67c9</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="a382a38852335f58a53739d455c7d67c9adb0b90067892b7258dc8c3b55e4c2569">NO_IDE_LOGGER</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="a382a38852335f58a53739d455c7d67c9a3906ee006af77b8fa8262283f9caf7e4">CONSOLE_TYPE</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="a382a38852335f58a53739d455c7d67c9a47a219833a4b3a09240896c88b2b1969">VERBOSITY</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="a382a38852335f58a53739d455c7d67c9a835487a189e71ba8b5d94d178b94794f">SPTR_GLOBAL</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="a382a38852335f58a53739d455c7d67c9ac29fb515e3e56db64a1427d969dcabcb">SPTR_LOX</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="a382a38852335f58a53739d455c7d67c9a4b520f6a3150be16e39dcb542fab214d">DOMAIN_SUBSTITUTION</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="a382a38852335f58a53739d455c7d67c9ac8dd1a6634966abd5efb5d86d4db378f">PREFIXES</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="a382a38852335f58a53739d455c7d67c9a6971f54df65eca4fb3bbdad4f22f5c66">DUMP_STATE_ON_EXIT</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="a382a38852335f58a53739d455c7d67c9ae6b539e0553a3c71491c32b5b2c729a9">AUTO_SIZES</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="a382a38852335f58a53739d455c7d67c9a47c8929b6152d540597c758853ff95a2">FORMAT</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="a382a38852335f58a53739d455c7d67c9a7e225271444009a790a617c6a27106bd">FORMAT_DATE_TIME</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="a382a38852335f58a53739d455c7d67c9a7f191f01c0a19a76dc041e1f7a558035">FORMAT_MULTILINE</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="a382a38852335f58a53739d455c7d67c9a0f1becc977b12c17805459b8aa2ba30f">FORMAT_TIME_DIFF</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="a382a38852335f58a53739d455c7d67c9a042746fb996d023babbdc562c85193c8">MAX_ELAPSED_TIME</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="a382a38852335f58a53739d455c7d67c9a5d83625ab3ab5703580d30a5567722a9">REPLACEMENTS</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="a382a38852335f58a53739d455c7d67c9a1406d36082094d9896893e2c0241dbfc">CONSOLE_LIGHT_COLORS</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="a382a38852335f58a53739d455c7d67c9a58044b3a1c5af7cd5cd60e5d6b8d0220">CODEPAGE</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>alox_console_loggers.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alox/</path>
    <filename>alox__console__loggers_8hpp</filename>
    <includes id="alox_8hpp" name="alox.hpp" local="yes" imported="no">alox/alox.hpp</includes>
    <includes id="consolelogger_8hpp" name="consolelogger.hpp" local="yes" imported="no">alox/loggers/consolelogger.hpp</includes>
    <includes id="ansilogger_8hpp" name="ansilogger.hpp" local="yes" imported="no">alox/loggers/ansilogger.hpp</includes>
    <includes id="vstudiologger_8hpp" name="vstudiologger.hpp" local="yes" imported="no">alox/loggers/vstudiologger.hpp</includes>
    <includes id="windowsconsolelogger_8hpp" name="windowsconsolelogger.hpp" local="yes" imported="no">alox/loggers/windowsconsolelogger.hpp</includes>
  </compound>
  <compound kind="file">
    <name>alox_macros.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alox/internals/</path>
    <filename>alox__macros_8hpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>ALOX_COMPILATION_FLAGS</name>
      <anchorfile>group__GrpALoxMacrosLowLevel.html</anchorfile>
      <anchor>ga358351aade1160917800df0f7b25a525</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_ACQUIRE</name>
      <anchorfile>group__GrpALoxMacrosLowLevel.html</anchorfile>
      <anchor>ga105a9f44250c23d6bb37df63aa9d9cbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_AddDebugLogger</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>gaa891e8485ea970f574971c6afd851218</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_Assert</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>ga2797c2e9f997606c3c786fa68720ac71</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_CI</name>
      <anchorfile>group__GrpALoxMacrosLowLevel.html</anchorfile>
      <anchor>gab22206221434dc470889fa39d451c5fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_ClearSourcePathTrimRules</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>gaff8f037b778ce73b40e0c7a0506a8718</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_Entry</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>ga9ac05a63013c784625c66685ad51aff3</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_Error</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>ga8d8e6df0e755763bd471751235199baf</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_Exception</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>gaa94d27b5585a0b0cd1e9daadec9e745d</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_GetLogger</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>ga07ed02a33090774d44b0a9eba642f362</anchor>
      <arglist>(identifier, name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_If</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>ga7a1af9531448e3c6da1027b193e3b01b</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_Info</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>gaed4877ef3a04a6eb1ec1d4fba8305d75</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_LogState</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>ga014d8b959e78330074b7aedad3ff747b</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_LOX</name>
      <anchorfile>group__GrpALoxMacrosLowLevel.html</anchorfile>
      <anchor>ga71f7449b6ad8bbd0ba22f897d7338a22</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_MapThreadName</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>gad01526d3f277fab96faf18695d25cb7e</anchor>
      <arglist>(threadName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_Once</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>ga68c8af8941a64be4f6e075ab31c6c05b</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_Prune</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>ga7dbb7427d18d49e2dd87d5f2d2036e0b</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_RELEASE</name>
      <anchorfile>group__GrpALoxMacrosLowLevel.html</anchorfile>
      <anchor>ga0d5795316ecfccc7b40b43c01bf62b0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_RemoveDebugLogger</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>gac5d4bbea354fbabbebb7703995c3399d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_RemoveLogger</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>ga4a08a7a5c5e794a34d7d05f4d35689e4</anchor>
      <arglist>(logger)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_RemoveThreadDomain</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>gafc93873c04ed08e842109543d142fb60</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_Retrieve</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>ga233db1e86b0cf457b550f74b58d69926</anchor>
      <arglist>(data,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_SetDomain</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>gac4a4311460b712126253fce7304ac6f4</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_SetDomainSubstitutionRule</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>ga619af6c6682bc920e038b0fe006c49be</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_SetPrefix</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>ga4186c23d7999be11f0e5017d254a306c</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_SetSourcePathTrimRule</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>gac96dec2672c7ae4e722cae3b12eaf3fd</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_SetStartTime</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>ga14bcc9217818e50b7fe5028398f11e8d</anchor>
      <arglist>(time, loggerName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_SetVerbosity</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>gad5444af82c2a3640a1c456940b8c3b8f</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_Store</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>ga9c1ca580a86c5c6a0653146b0bb9cb38</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_Verbose</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>ga975fbf7e95ed6506992f9714627202d0</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_Warning</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>gaa9822f0eda4cc7e9c3f3e99d6238f2aa</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOX_ACQUIRE</name>
      <anchorfile>group__GrpALoxMacrosLowLevel.html</anchorfile>
      <anchor>ga9ac629621d8152810e41e19931c990a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_Assert</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga4d9961312aab181a28b21724c3809184</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOX_CI</name>
      <anchorfile>group__GrpALoxMacrosLowLevel.html</anchorfile>
      <anchor>ga94ca091e7e2c3556c74473ff0615b587</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_ClearSourcePathTrimRules</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga1689da460f8040489689b3f45cf1e6b2</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_Entry</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga3ee12da39c3574baf4fb03f7f323c886</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_Error</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga5fa12e4bc99fd2ebed4fe90729f54a03</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_Exception</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga2317941daa2d98c636a10cda8d5d7f04</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_GetLogger</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga8536e68dcdee27e1d3463687d42ee6ed</anchor>
      <arglist>(identifier, name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_If</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga31e9c5302ccb2af7285d9e17a46aac2b</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_Info</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga28233c29442a3ae8996d32b5078537d9</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_LogState</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga6a3836bfb9783687112adc22e265631d</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOX_LOX</name>
      <anchorfile>group__GrpALoxMacrosLowLevel.html</anchorfile>
      <anchor>ga1f170b96d3ead37b7f530134e64bf121</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_MapThreadName</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga089dc860d3f28c5cf30b661f2877462a</anchor>
      <arglist>(threadName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_Once</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga03e5f8a0b134f709f130a4f93b2f8ab2</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_Prune</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga04158d8131eba14e98f93e433b6325d2</anchor>
      <arglist>(releaseLogCode)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOX_RELEASE</name>
      <anchorfile>group__GrpALoxMacrosLowLevel.html</anchorfile>
      <anchor>ga2ef98e816bdf36da37bb9bddbdfd635f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_RemoveLogger</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga321e65d2004cef126220b042fc95e03b</anchor>
      <arglist>(logger)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_RemoveThreadDomain</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga5af8171356c0b231483221d0b3e534c1</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_Retrieve</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga21ac85d6bd6b297b92b707b6362f52df</anchor>
      <arglist>(data,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_SetDomain</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga7e1bc971e6cd3b071fbc928a7d46fae9</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_SetDomainSubstitutionRule</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>gab66ecad871e42c6779e9f2bb62921be3</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_SetPrefix</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga0f4d320a3b393e1e6eba353f567dec4d</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_SetSourcePathTrimRule</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga26b42492cafe7bc093cd810facddeb6b</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_SetStartTime</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga2c91f19bc972dbacc137e8c4c88ee25c</anchor>
      <arglist>(time, loggerName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_SetVerbosity</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga58d12e520c215bfc22c8da42777d567b</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_Store</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>gaa8e5c76201f2ac838ef643377641f2a6</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_Verbose</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>gacbfc03392b8a4f79d0bcb46bc2825d31</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_Warning</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>gaf2a9706a6b6c48b69cc10ae1d65d9379</anchor>
      <arglist>(...)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>alox_symbols.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alox/internals/</path>
    <filename>alox__symbols_8hpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>ALOX_DBG_LOG</name>
      <anchorfile>group__GrpALoxCodeSelectorSymbols.html</anchorfile>
      <anchor>ga2c6ba32fb7e34be7cee2100578b84a6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALOX_DBG_LOG_CI</name>
      <anchorfile>group__GrpALoxCodeSelectorSymbols.html</anchorfile>
      <anchor>ga392381bb9caea53c133ce68c32cee4e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALOX_DBG_LOG_CI_OFF</name>
      <anchorfile>group__GrpALoxCompilerSymbols.html</anchorfile>
      <anchor>gabf2ce25e392b218c30b6b0af8280ddf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALOX_DBG_LOG_CI_ON</name>
      <anchorfile>group__GrpALoxCompilerSymbols.html</anchorfile>
      <anchor>ga9920512a7b2c48a248b5cfb1643c7cac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALOX_DBG_LOG_OFF</name>
      <anchorfile>group__GrpALoxCompilerSymbols.html</anchorfile>
      <anchor>gaf2de46ee4b30ee640266f7ac5de25bb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALOX_DBG_LOG_ON</name>
      <anchorfile>group__GrpALoxCompilerSymbols.html</anchorfile>
      <anchor>ga1d6b17b1dc814c44f312baf8d6f56688</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALOX_REL_LOG</name>
      <anchorfile>group__GrpALoxCodeSelectorSymbols.html</anchorfile>
      <anchor>ga4d0c70512b17f1dd4fa3556f79dd2689</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALOX_REL_LOG_CI</name>
      <anchorfile>group__GrpALoxCodeSelectorSymbols.html</anchorfile>
      <anchor>ga4b0e38e300ec824146da5e868f2c6290</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALOX_REL_LOG_CI_OFF</name>
      <anchorfile>group__GrpALoxCompilerSymbols.html</anchorfile>
      <anchor>ga9723e112c2b491520922d1fdfef60504</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALOX_REL_LOG_CI_ON</name>
      <anchorfile>group__GrpALoxCompilerSymbols.html</anchorfile>
      <anchor>ga85c683ba401d4c9216c96a9a17a9e9a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALOX_REL_LOG_OFF</name>
      <anchorfile>group__GrpALoxCompilerSymbols.html</anchorfile>
      <anchor>gae77944a12e0a9b9bc2657cb7298d70f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALOX_REL_LOG_ON</name>
      <anchorfile>group__GrpALoxCompilerSymbols.html</anchorfile>
      <anchor>ga56671e8b3fa44f19acb0d9c4c4403682</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>aloxtypesandenums.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alox/</path>
    <filename>aloxtypesandenums_8hpp</filename>
    <class kind="class">aworx::lox::ESC</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lox</namespace>
    <member kind="typedef">
      <type>aworx::lox::ESC</type>
      <name>ESC</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a41196e8ca29644376437095a102ad9ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lox::Scope</type>
      <name>Scope</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>aef58f56e96f194bf0b5f765175f6ebd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lox::Verbosity</type>
      <name>Verbosity</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>aa10bcb350ba5320cadb5dff6b8e2da6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Scope</name>
      <anchorfile>namespaceaworx_1_1lox.html</anchorfile>
      <anchor>aaecc53892786f2fa11e682f633af84c6</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="aaecc53892786f2fa11e682f633af84c6a4cc6684df7b4a92b1dec6fce3264fac8">Global</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="aaecc53892786f2fa11e682f633af84c6a1ee3f312b05c55202500569aadfc8d9b">ThreadOuter</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="aaecc53892786f2fa11e682f633af84c6a1351017ac6423911223bc19a8cb7c653">Filename</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="aaecc53892786f2fa11e682f633af84c6a4c3880bb027f159e801041b1021e88e8">Method</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="aaecc53892786f2fa11e682f633af84c6ae46b159c990fae9e712309bdb4d7b7c4">ThreadInner</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="aaecc53892786f2fa11e682f633af84c6aac70412e939d72a9234cdebb1af5867b">Path</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Verbosity</name>
      <anchorfile>namespaceaworx_1_1lox.html</anchorfile>
      <anchor>abf3be10d03894afb391f3a2935e3b313</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="abf3be10d03894afb391f3a2935e3b313ad4a9fa383ab700c5bdd6f31cf7df0faf">Verbose</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="abf3be10d03894afb391f3a2935e3b313a4059b0251f66a18cb56f544728796875">Info</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="abf3be10d03894afb391f3a2935e3b313a0eaadb4fcb48a0a0ed7bc9868be9fbaa">Warning</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="abf3be10d03894afb391f3a2935e3b313a902b0d55fddef6f8d651fe1035b7d4bd">Error</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="abf3be10d03894afb391f3a2935e3b313ad15305d7a4e34e02489c74a5ef542f36">Off</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>ansilogger.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alox/loggers/</path>
    <filename>ansilogger_8hpp</filename>
    <includes id="alox_8hpp" name="alox.hpp" local="yes" imported="no">alox/alox.hpp</includes>
    <includes id="textlogger_8hpp" name="textlogger.hpp" local="yes" imported="no">alox/core/textlogger/textlogger.hpp</includes>
    <class kind="class">aworx::lox::loggers::AnsiConsoleLogger</class>
    <class kind="class">aworx::lox::loggers::AnsiLogger</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lox</namespace>
    <namespace>aworx::lox::loggers</namespace>
    <member kind="typedef">
      <type>aworx::lox::loggers::AnsiConsoleLogger</type>
      <name>AnsiConsoleLogger</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a1ea18f3cfd0faa27d99ecc1c9532b445</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lox::loggers::AnsiLogger</type>
      <name>AnsiLogger</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>afbcb9cbc8853ce81a9d690e2a8923889</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>applicables.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/strings/</path>
    <filename>applicables_8hpp</filename>
    <class kind="struct">aworx::lib::strings::Format::Bin</class>
    <class kind="struct">aworx::lib::strings::Format::Escape</class>
    <class kind="struct">aworx::lib::strings::Format::Field</class>
    <class kind="class">aworx::lib::strings::Format</class>
    <class kind="struct">aworx::lib::strings::Format::Hex</class>
    <class kind="struct">aworx::lib::strings::Format::Oct</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; bool &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; char * &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; char16_t * &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; char32_t * &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; double &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; float &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; Format &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; Format::Bin &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; Format::Escape &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; Format::Field &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; Format::Hex &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; Format::Oct &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; Format::Tab &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; int16_t &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; int32_t &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; int64_t &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; int8_t &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; intGap_t &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; std::type_info &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; uint16_t &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; uint32_t &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; uint64_t &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; uint8_t &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; uintGap_t &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; wchar_t * &gt;</class>
    <class kind="struct">aworx::lib::strings::Format::Tab</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::strings</namespace>
    <namespace>aworx::lib::strings::applyto</namespace>
    <member kind="typedef">
      <type>aworx::lib::strings::Format</type>
      <name>Format</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>aed5a5fab6b4a0c81a5a231f6d0379d41</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>assert.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/debug/</path>
    <filename>assert_8hpp</filename>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::debug</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_ASSERT_RESULT_EQUALS</name>
      <anchorfile>assert_8hpp.html</anchorfile>
      <anchor>a2f32baa654588ac903bb210bb6270101</anchor>
      <arglist>( func, value)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_ASSERT_RESULT_GREATER_THAN</name>
      <anchorfile>assert_8hpp.html</anchorfile>
      <anchor>ab2d2c9ba9eab04d9b95b78340c582a21</anchor>
      <arglist>(func, value)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_ASSERT_RESULT_LESS_THAN</name>
      <anchorfile>assert_8hpp.html</anchorfile>
      <anchor>a965508408e03e178d5906f67c979a024</anchor>
      <arglist>( func, value)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_ASSERT_RESULT_NOT_EQUALS</name>
      <anchorfile>assert_8hpp.html</anchorfile>
      <anchor>ad1c6b2ac7e9129c66491f58fe5bbe224</anchor>
      <arglist>( func, value)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_ERROR</name>
      <anchorfile>assert_8hpp.html</anchorfile>
      <anchor>a91e7766134a7092e04ac33e257519d03</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARNING</name>
      <anchorfile>assert_8hpp.html</anchorfile>
      <anchor>a217523d4495ea142c0dd27698b779d34</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_MESSAGE</name>
      <anchorfile>assert_8hpp.html</anchorfile>
      <anchor>a4648f4154661567af21fa604389a8c50</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_ASSERT</name>
      <anchorfile>assert_8hpp.html</anchorfile>
      <anchor>afeaac7eedb1d9a90091356b6c68934cb</anchor>
      <arglist>(cond)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_ASSERT_ERROR</name>
      <anchorfile>assert_8hpp.html</anchorfile>
      <anchor>ab70bcc134c68f96d8b68cf75a12db185</anchor>
      <arglist>(cond,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_ASSERT_WARNING</name>
      <anchorfile>assert_8hpp.html</anchorfile>
      <anchor>ad99b2ba3b18f6d6f69ee448505f3d787</anchor>
      <arglist>(cond,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARN_ONCE_PER_INSTANCE_DECL</name>
      <anchorfile>assert_8hpp.html</anchorfile>
      <anchor>a7577d63e934e68269adef8746c176901</anchor>
      <arglist>( identifier, default)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARN_ONCE_PER_INSTANCE_ENABLE</name>
      <anchorfile>assert_8hpp.html</anchorfile>
      <anchor>a0d2e31974fdd13366de4147f9e7e10b8</anchor>
      <arglist>( instance, identifier)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARN_ONCE_PER_INSTANCE_DISABLE</name>
      <anchorfile>assert_8hpp.html</anchorfile>
      <anchor>a30e363647f8ea56f0af8e834768548bc</anchor>
      <arglist>(instance, identifier)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARN_ONCE_PER_TYPE_DECL</name>
      <anchorfile>assert_8hpp.html</anchorfile>
      <anchor>a6c7110c8b69036d6bdd636039cc6ced8</anchor>
      <arglist>( libdecl, identifier)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARN_ONCE_PER_TYPE_DEFINE</name>
      <anchorfile>assert_8hpp.html</anchorfile>
      <anchor>afcae3f2a64fb26c7bc0d93238c22d18c</anchor>
      <arglist>( className, identifier, default)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARN_ONCE_PER_TYPE_ENABLE</name>
      <anchorfile>assert_8hpp.html</anchorfile>
      <anchor>a4473b84f3867281772aa921922d63473</anchor>
      <arglist>( className, identifier)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARN_ONCE_PER_TYPE_DISABLE</name>
      <anchorfile>assert_8hpp.html</anchorfile>
      <anchor>aa711a1bf6b8f7218756d71b713629754</anchor>
      <arglist>( className, identifier)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARN_ONCE</name>
      <anchorfile>assert_8hpp.html</anchorfile>
      <anchor>a1ef230fd3a3e36aa9e9717c70be65c50</anchor>
      <arglist>( instance, identifier, ...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARN_ONCE_IF</name>
      <anchorfile>assert_8hpp.html</anchorfile>
      <anchor>a332c2758f58caa9d039ba5ccef81b585</anchor>
      <arglist>( instance, identifier, cond,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARN_ONCE_IF_NOT</name>
      <anchorfile>assert_8hpp.html</anchorfile>
      <anchor>a3163cf7ac9843b0827845300e504ab9e</anchor>
      <arglist>( instance, identifier, cond,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DbgSimpleALibMsg</name>
      <anchorfile>namespaceaworx_1_1lib_1_1debug.html</anchorfile>
      <anchor>a218b50aedc2a3b02420c4f959d623d9c</anchor>
      <arglist>(const char *file, int line, const char *method, int type, const char *msg1, const char *msg2, const char *msg3, const char *msg4)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DbgSimpleALibMsg</name>
      <anchorfile>namespaceaworx_1_1lib_1_1debug.html</anchorfile>
      <anchor>a9e4d730efcf6229da948f354446163d2</anchor>
      <arglist>(const char *file, int line, const char *method, int type, const char *msg, int intVal)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_ERROR</name>
      <anchorfile>assert_8hpp.html</anchorfile>
      <anchor>a91e7766134a7092e04ac33e257519d03</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARNING</name>
      <anchorfile>assert_8hpp.html</anchorfile>
      <anchor>a217523d4495ea142c0dd27698b779d34</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_MESSAGE</name>
      <anchorfile>assert_8hpp.html</anchorfile>
      <anchor>a4648f4154661567af21fa604389a8c50</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_ASSERT</name>
      <anchorfile>assert_8hpp.html</anchorfile>
      <anchor>afeaac7eedb1d9a90091356b6c68934cb</anchor>
      <arglist>(cond)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_ASSERT_ERROR</name>
      <anchorfile>assert_8hpp.html</anchorfile>
      <anchor>ab70bcc134c68f96d8b68cf75a12db185</anchor>
      <arglist>(cond,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_ASSERT_WARNING</name>
      <anchorfile>assert_8hpp.html</anchorfile>
      <anchor>ad99b2ba3b18f6d6f69ee448505f3d787</anchor>
      <arglist>(cond,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARN_ONCE_PER_INSTANCE_DECL</name>
      <anchorfile>assert_8hpp.html</anchorfile>
      <anchor>a7577d63e934e68269adef8746c176901</anchor>
      <arglist>( identifier, default)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARN_ONCE_PER_INSTANCE_ENABLE</name>
      <anchorfile>assert_8hpp.html</anchorfile>
      <anchor>a0d2e31974fdd13366de4147f9e7e10b8</anchor>
      <arglist>( instance, identifier)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARN_ONCE_PER_INSTANCE_DISABLE</name>
      <anchorfile>assert_8hpp.html</anchorfile>
      <anchor>a30e363647f8ea56f0af8e834768548bc</anchor>
      <arglist>(instance, identifier)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARN_ONCE_PER_TYPE_DECL</name>
      <anchorfile>assert_8hpp.html</anchorfile>
      <anchor>a6c7110c8b69036d6bdd636039cc6ced8</anchor>
      <arglist>( libdecl, identifier)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARN_ONCE_PER_TYPE_DEFINE</name>
      <anchorfile>assert_8hpp.html</anchorfile>
      <anchor>afcae3f2a64fb26c7bc0d93238c22d18c</anchor>
      <arglist>( className, identifier, default)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARN_ONCE_PER_TYPE_ENABLE</name>
      <anchorfile>assert_8hpp.html</anchorfile>
      <anchor>a4473b84f3867281772aa921922d63473</anchor>
      <arglist>( className, identifier)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARN_ONCE_PER_TYPE_DISABLE</name>
      <anchorfile>assert_8hpp.html</anchorfile>
      <anchor>aa711a1bf6b8f7218756d71b713629754</anchor>
      <arglist>( className, identifier)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARN_ONCE</name>
      <anchorfile>assert_8hpp.html</anchorfile>
      <anchor>a1ef230fd3a3e36aa9e9717c70be65c50</anchor>
      <arglist>( instance, identifier, ...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARN_ONCE_IF</name>
      <anchorfile>assert_8hpp.html</anchorfile>
      <anchor>a332c2758f58caa9d039ba5ccef81b585</anchor>
      <arglist>( instance, identifier, cond,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARN_ONCE_IF_NOT</name>
      <anchorfile>assert_8hpp.html</anchorfile>
      <anchor>a3163cf7ac9843b0827845300e504ab9e</anchor>
      <arglist>( instance, identifier, cond,...)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>astring.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/strings/</path>
    <filename>astring_8hpp</filename>
    <class kind="class">aworx::lib::strings::AString</class>
    <class kind="struct">aworx::lib::strings::std_AStringEquals</class>
    <class kind="struct">aworx::lib::strings::std_AStringEqualsIgnoreCase</class>
    <class kind="struct">aworx::lib::strings::std_AStringHash</class>
    <class kind="struct">aworx::lib::strings::std_AStringHashIgnoreCase</class>
    <class kind="struct">aworx::lib::strings::T_Apply</class>
    <class kind="struct">aworx::lib::strings::T_IsTerminatable&lt; AString &gt;</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::debug</namespace>
    <namespace>aworx::lib::strings</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_STRINGS_SPECIALIZE_T_APPLY</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga1b2f72f053f6e29e2b722e0956807293</anchor>
      <arglist>(TYPE)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_STRINGS_SPECIALIZE_T_APPLY_DEF</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gaeb2f83fa2fd9baa7e142dbb2f16ce749</anchor>
      <arglist>(TYPE, IMPL)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_STRINGS_SPECIALIZE_T_APPLY_INLINE</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga8e39fdbc5aa1f25100582fb82e86bdda</anchor>
      <arglist>(TYPE, IMPL)</arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::AString</type>
      <name>AString</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a51ace28d988aa0a7ab391f6aaec35f60</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unordered_map&lt; AString, TValue, lib::strings::std_AStringHash, lib::strings::std_AStringEquals &gt;</type>
      <name>UnorderedAStringMap</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>aa218e0dc317b260e8ece593569c00295</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unordered_map&lt; AString, TValue, lib::strings::std_AStringHashIgnoreCase, lib::strings::std_AStringEqualsIgnoreCase &gt;</type>
      <name>UnorderedAStringMapIgnoreCase</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ae21149fd606be5a91866c806a776a279</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ALIB_API int</type>
      <name>GetSingletons</name>
      <anchorfile>namespaceaworx_1_1lib_1_1debug.html</anchorfile>
      <anchor>aedf202cf1029c957cd78a3dfc75f3cef</anchor>
      <arglist>(strings::AString &amp;target)</arglist>
    </member>
    <member kind="function">
      <type>strings::AString &amp;</type>
      <name>RemoveALibNamespaces</name>
      <anchorfile>namespaceaworx_1_1lib_1_1debug.html</anchorfile>
      <anchor>ac439d995694f77d6cb43c68cf5689783</anchor>
      <arglist>(strings::AString &amp;target, bool remove)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_STRINGS_SPECIALIZE_T_APPLY</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga1b2f72f053f6e29e2b722e0956807293</anchor>
      <arglist>(TYPE)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_STRINGS_SPECIALIZE_T_APPLY_DEF</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gaeb2f83fa2fd9baa7e142dbb2f16ce749</anchor>
      <arglist>(TYPE, IMPL)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_STRINGS_SPECIALIZE_T_APPLY_INLINE</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga8e39fdbc5aa1f25100582fb82e86bdda</anchor>
      <arglist>(TYPE, IMPL)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>autosizes.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/strings/util/</path>
    <filename>autosizes_8hpp</filename>
    <class kind="class">aworx::lib::strings::util::AutoSizes</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::strings</namespace>
    <namespace>aworx::lib::strings::util</namespace>
    <member kind="typedef">
      <type>aworx::lib::strings::util::AutoSizes</type>
      <name>AutoSizes</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a05f64048544b942ed91dff1a90fd734d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>box.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/boxing/</path>
    <filename>box_8hpp</filename>
    <class kind="class">aworx::lib::boxing::Box</class>
    <class kind="struct">aworx::lib::boxing::std_Equals</class>
    <class kind="struct">aworx::lib::boxing::std_Hash</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::boxing</namespace>
    <member kind="typedef">
      <type>aworx::lib::boxing::Box</type>
      <name>Box</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>af923f654916f15a4287246e5bb3beabb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unordered_map&lt; Box, TValue, lib::boxing::std_Hash, lib::boxing::std_Equals &gt;</type>
      <name>UnorderedBoxMap</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a934e14062eb77d29860412391c841690</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>boxer.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/boxing/</path>
    <filename>boxer_8hpp</filename>
    <class kind="class">aworx::lib::boxing::ArrayBoxerT</class>
    <class kind="class">aworx::lib::boxing::Boxer</class>
    <class kind="class">aworx::lib::boxing::BoxerT</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::boxing</namespace>
  </compound>
  <compound kind="file">
    <name>boxes.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/boxing/</path>
    <filename>boxes_8hpp</filename>
    <class kind="class">aworx::lib::boxing::Boxes</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::boxing</namespace>
    <member kind="typedef">
      <type>aworx::lib::boxing::Boxes</type>
      <name>Boxes</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a13da4402eea5d25b5fbddc19c3605e22</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>boxinglib.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/boxing/</path>
    <filename>boxinglib_8hpp</filename>
    <includes id="interface_8hpp" name="interface.hpp" local="yes" imported="no">alib/boxing/interface.hpp</includes>
    <includes id="boxer_8hpp" name="boxer.hpp" local="yes" imported="no">alib/boxing/boxer.hpp</includes>
    <includes id="box_8hpp" name="box.hpp" local="yes" imported="no">alib/boxing/box.hpp</includes>
    <includes id="boxes_8hpp" name="boxes.hpp" local="yes" imported="no">alib/boxing/boxes.hpp</includes>
    <includes id="interface__builtin_8hpp" name="interface_builtin.hpp" local="yes" imported="no">alib/boxing/interface_builtin.hpp</includes>
    <includes id="ftypes_8hpp" name="ftypes.hpp" local="yes" imported="no">alib/boxing/ftypes.hpp</includes>
    <class kind="struct">aworx::lib::boxing::BoxData</class>
    <class kind="class">aworx::lib::boxing::BoxedAs</class>
    <class kind="class">aworx::lib::boxing::Boxing</class>
    <class kind="struct">aworx::lib::boxing::T_Boxing</class>
    <class kind="struct">aworx::lib::boxing::T_Boxing&lt; BoxedAs&lt; TBoxed &gt; &gt;</class>
    <class kind="struct">aworx::lib::boxing::T_Boxing&lt; std::vector&lt; TElem &gt; &gt;</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::boxing</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_FEAT_BOXING_FTYPES</name>
      <anchorfile>group__GrpALibCodeSelectorSymbols.html</anchorfile>
      <anchor>ga129dbb7714d49378dc9990ea96f01173</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_FEAT_BOXING_FTYPES_OFF</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>gaac13faf1a75cc977147511eca3c354cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_FEAT_BOXING_FTYPES_ON</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>ga8f3d4ca2c8644c0152c16185e2c7db97</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_FEAT_BOXING_STD_VECTOR</name>
      <anchorfile>group__GrpALibCodeSelectorSymbols.html</anchorfile>
      <anchor>gab059dd8e204bd3f6d3d26286565bad47</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_FEAT_BOXING_STD_VECTOR_OFF</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>ga61f9e13ca92fd465552273e26d7f1356</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_FEAT_BOXING_STD_VECTOR_ON</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>ga0a7efa0a62be4be6c896712d25d5bf84</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_BOXING_SPECIALIZE</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga8c3e36e52f60303e7639ae48b146f0d6</anchor>
      <arglist>(TSrc, TTarget, isArray, isUnboxable)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_BOXING_SPECIALIZE_CB</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gab85931d9bdbae09c0b79ad32105f95da</anchor>
      <arglist>(TSrc, TTarget, isArray, isUnboxable)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_BOXING_SPECIALIZE_CUB</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga431032b07152f19cf630689c0726df8c</anchor>
      <arglist>(TSrc, TTarget, isArray, isUnboxable)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_BOXING_SPECIALIZE_CB_CUB</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga27d2168a54be432345fb17c4d3a5f614</anchor>
      <arglist>(TSrc, TTarget, isArray, isUnboxable)</arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::boxing::BoxedAs&lt; Type &gt;</type>
      <name>BoxedAs</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a76b064b4620c8d0e669796405dce6378</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint64_t</type>
      <name>boxvalue</name>
      <anchorfile>namespaceaworx_1_1lib_1_1boxing.html</anchorfile>
      <anchor>aa3e009a14ed9d13b3f9cfac1ac29bee5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DefaultBoxing</name>
      <anchorfile>namespaceaworx_1_1lib_1_1boxing.html</anchorfile>
      <anchor>aa505e0719cf0f7cdca5da2e34aa0081d</anchor>
      <arglist>(Box &amp;, const TBoxable &amp;)</arglist>
    </member>
    <member kind="function">
      <type>TBoxable</type>
      <name>DefaultUnboxing</name>
      <anchorfile>namespaceaworx_1_1lib_1_1boxing.html</anchorfile>
      <anchor>a28b628b92185f310ea42b146c15b9ce1</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DefineDefaultInterface</name>
      <anchorfile>namespaceaworx_1_1lib_1_1boxing.html</anchorfile>
      <anchor>a37543d2ad623b3940e735b122fe5d586</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DefineInterface</name>
      <anchorfile>namespaceaworx_1_1lib_1_1boxing.html</anchorfile>
      <anchor>aa1f769d5f1032bc1cc569f4353f9ccd8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr integer</type>
      <name>T_SetArraySize</name>
      <anchorfile>namespaceaworx_1_1lib_1_1boxing.html</anchorfile>
      <anchor>a8a046ed78c26c56f05dfe236e40c136b</anchor>
      <arglist>(integer arrayExtent)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_BOXING_SPECIALIZE</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga8c3e36e52f60303e7639ae48b146f0d6</anchor>
      <arglist>(TSrc, TTarget, isArray, isUnboxable)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_BOXING_SPECIALIZE_CB</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gab85931d9bdbae09c0b79ad32105f95da</anchor>
      <arglist>(TSrc, TTarget, isArray, isUnboxable)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_BOXING_SPECIALIZE_CUB</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga431032b07152f19cf630689c0726df8c</anchor>
      <arglist>(TSrc, TTarget, isArray, isUnboxable)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_BOXING_SPECIALIZE_CB_CUB</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga27d2168a54be432345fb17c4d3a5f614</anchor>
      <arglist>(TSrc, TTarget, isArray, isUnboxable)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>calendartime.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/time/</path>
    <filename>calendartime_8hpp</filename>
    <includes id="ticks_8hpp" name="ticks.hpp" local="yes" imported="no">alib/time/ticks.hpp</includes>
    <includes id="timestamp_8hpp" name="timestamp.hpp" local="yes" imported="no">alib/time/timestamp.hpp</includes>
    <class kind="class">aworx::lib::time::CalendarTime</class>
    <class kind="class">aworx::lib::time::TicksCalendarTime</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::time</namespace>
    <member kind="typedef">
      <type>aworx::lib::time::CalendarTime</type>
      <name>CalendarTime</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ae63e36615665781b2ebf0e40e8841578</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::time::TicksCalendarTime</type>
      <name>TicksCalendarTime</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a0607ccd659418fa7cb9922b2c4ba5f1d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>configlib.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/config/</path>
    <filename>configlib_8hpp</filename>
    <includes id="exception_8hpp" name="exception.hpp" local="yes" imported="no">alib/lang/exception.hpp</includes>
    <includes id="enumarithmetical_8hpp" name="enumarithmetical.hpp" local="yes" imported="no">alib/lang/enumarithmetical.hpp</includes>
    <class kind="class">aworx::lib::config::Config</class>
    <class kind="struct">aworx::lib::config::VariableDecl</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::config</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_CONFIG_VARIABLES</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gab913c2220611acf6eaa570acc1ddcf5c</anchor>
      <arglist>(TEnum, ResourceLibrary, ResourceName)</arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::config::Config</type>
      <name>Config</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a3ac3cce0d261b57a96a1f624cb858cb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::config::Priorities</type>
      <name>Priorities</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>aef391b8d0a94cf4a138d5f8234e6fe51</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::config::VariableDecl</type>
      <name>VariableDecl</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a2d25c53fd4832b8d01f5d3c574b74ec6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Exceptions</name>
      <anchorfile>namespaceaworx_1_1lib_1_1config.html</anchorfile>
      <anchor>a8d828d7f6e0c02a7815c7e1308d3b06e</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1config.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ead083aedf850e5989f336e50d1a539d44">ErrorOpeningFile</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1config.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ea4d772ffe878e53b6d4e62d6a5b488e36">ErrorWritingFile</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FormatHints</name>
      <anchorfile>namespaceaworx_1_1lib_1_1config.html</anchorfile>
      <anchor>ac55b7da10891e6be23f1dcc7a7daa286</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1config.html" anchor="ac55b7da10891e6be23f1dcc7a7daa286a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1config.html" anchor="ac55b7da10891e6be23f1dcc7a7daa286a3440172974d6140e5d1051e68730d036">MultLine</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1config.html" anchor="ac55b7da10891e6be23f1dcc7a7daa286a3308dff642c5b3a0cc5b192ba1a94958">NoDelimSpaces</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1config.html" anchor="ac55b7da10891e6be23f1dcc7a7daa286a90589c47f06eb971d548591f23c285af">Custom</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Priorities</name>
      <anchorfile>namespaceaworx_1_1lib_1_1config.html</anchorfile>
      <anchor>a4f738b6463e8c773284e5173741814dd</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1config.html" anchor="a4f738b6463e8c773284e5173741814ddab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1config.html" anchor="a4f738b6463e8c773284e5173741814ddaa439cc535cfa5d7f3f2def352e2255b0">AutoDetected</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1config.html" anchor="a4f738b6463e8c773284e5173741814ddaff1c11ab5744d2a4a07760b31e816e7f">DefaultValues</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1config.html" anchor="a4f738b6463e8c773284e5173741814ddaeb6d8ae6f20283755b339c0dc273988b">Standard</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1config.html" anchor="a4f738b6463e8c773284e5173741814dda0ba29c6a1afacf586b03a26162c72274">Environment</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1config.html" anchor="a4f738b6463e8c773284e5173741814dda91af5705f16502125e8b2187e64202c0">CLI</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1config.html" anchor="a4f738b6463e8c773284e5173741814dda663d90fa900995eda127ba7745719104">ProtectedValues</enumvalue>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_CONFIG_VARIABLES</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gab913c2220611acf6eaa570acc1ddcf5c</anchor>
      <arglist>(TEnum, ResourceLibrary, ResourceName)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>configuration.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/config/</path>
    <filename>configuration_8hpp</filename>
    <includes id="enumbitwise_8hpp" name="enumbitwise.hpp" local="yes" imported="no">alib/lang/enumbitwise.hpp</includes>
    <includes id="threadlock_8hpp" name="threadlock.hpp" local="yes" imported="no">alib/threads/threadlock.hpp</includes>
    <includes id="substring_8hpp" name="substring.hpp" local="yes" imported="no">alib/strings/substring.hpp</includes>
    <includes id="numberformat_8hpp" name="numberformat.hpp" local="yes" imported="no">alib/strings/numberformat.hpp</includes>
    <includes id="variable_8hpp" name="variable.hpp" local="yes" imported="no">alib/config/variable.hpp</includes>
    <includes id="plugins_8hpp" name="plugins.hpp" local="yes" imported="no">alib/config/plugins.hpp</includes>
    <includes id="plugincontainer_8hpp" name="plugincontainer.hpp" local="yes" imported="no">alib/util/plugincontainer.hpp</includes>
    <includes id="inmemoryplugin_8hpp" name="inmemoryplugin.hpp" local="yes" imported="no">alib/config/inmemoryplugin.hpp</includes>
    <class kind="class">aworx::lib::config::Configuration</class>
    <class kind="class">aworx::lib::config::Configuration::Iterator</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::config</namespace>
    <member kind="typedef">
      <type>aworx::lib::config::Configuration</type>
      <name>Configuration</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a9b321d2f72b975b304aa678e20344e7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::config::Variable</type>
      <name>Variable</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ac401c755579f3ba09fd64599ada969cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>consolelogger.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alox/loggers/</path>
    <filename>consolelogger_8hpp</filename>
    <includes id="alox_8hpp" name="alox.hpp" local="yes" imported="no">alox/alox.hpp</includes>
    <includes id="plaintextlogger_8hpp" name="plaintextlogger.hpp" local="yes" imported="no">alox/core/textlogger/plaintextlogger.hpp</includes>
    <class kind="class">aworx::lox::loggers::ConsoleLogger</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lox</namespace>
    <namespace>aworx::lox::loggers</namespace>
    <member kind="typedef">
      <type>aworx::lox::loggers::ConsoleLogger</type>
      <name>ConsoleLogger</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>acfbbfc11d98646c37dbf27e3ede11644</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cstring.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/strings/</path>
    <filename>cstring_8hpp</filename>
    <class kind="class">aworx::lib::strings::CString</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::strings</namespace>
  </compound>
  <compound kind="file">
    <name>debug.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/strings/boxing/</path>
    <filename>debug_8hpp</filename>
    <class kind="class">aworx::lib::debug::Boxing</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::debug</namespace>
  </compound>
  <compound kind="file">
    <name>directory.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/system/</path>
    <filename>directory_8hpp</filename>
    <class kind="class">aworx::lib::system::Directory</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::system</namespace>
    <member kind="typedef">
      <type>aworx::lib::system::Directory</type>
      <name>Directory</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ae59166dff4149598acd5f636fe6760d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr char</type>
      <name>DirectorySeparator</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>af71d56959787ac2eca9b0af4b02a7cec</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>domain.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alox/core/</path>
    <filename>domain_8hpp</filename>
    <includes id="alox_8hpp" name="alox.hpp" local="yes" imported="no">alox/alox.hpp</includes>
    <class kind="class">aworx::lox::core::Domain</class>
    <class kind="struct">aworx::lox::core::Domain::LoggerData</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lox</namespace>
    <namespace>aworx::lox::core</namespace>
  </compound>
  <compound kind="file">
    <name>enum.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/lang/</path>
    <filename>enum_8hpp</filename>
    <class kind="struct">aworx::lib::lang::Enum</class>
    <class kind="struct">aworx::lib::lang::std_EnumEquals</class>
    <class kind="struct">aworx::lib::lang::std_EnumHash</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; Enum &gt;</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::lang</namespace>
    <namespace>aworx::lib::strings</namespace>
    <namespace>aworx::lib::strings::applyto</namespace>
    <member kind="typedef">
      <type>aworx::lib::lang::Enum</type>
      <name>Enum</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a207e55188f91f9d8cff9e1a1614dafc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unordered_map&lt; Enum, TValue, lib::lang::std_EnumHash, lib::lang::std_EnumEquals &gt;</type>
      <name>UnorderedEnumMap</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a9ea5024838e57312f729f902cfe5382e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>enumarithmetical.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/lang/</path>
    <filename>enumarithmetical_8hpp</filename>
    <class kind="struct">aworx::lib::lang::T_EnumIsArithmetical</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::lang</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_LANG_ENUM_IS_ARITHMETICAL</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga43482d58d760408fa43d2ba7b8c845bb</anchor>
      <arglist>(TEnum)</arglist>
    </member>
    <member kind="typedef">
      <type>lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;</type>
      <name>T_EnumIsArithmetical</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a4ef0c1ae06e0ec4aaf4fa06db3764aaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator%</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>ad1cf70cfe5f4471794b397e3473ea31a</anchor>
      <arglist>(TEnum lhs, typename std::underlying_type&lt; TEnum &gt;::type rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator%=</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a3776e6341f16463e8154e3e4bb49d90e</anchor>
      <arglist>(TEnum &amp;lhs, typename std::underlying_type&lt; TEnum &gt;::type rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator*</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a22529a96c90fd221db0757ff6f1da0c6</anchor>
      <arglist>(TEnum lhs, typename std::underlying_type&lt; TEnum &gt;::type rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator*=</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a2ae717c60deb187f11b600578ed2fb76</anchor>
      <arglist>(TEnum &amp;lhs, typename std::underlying_type&lt; TEnum &gt;::type rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator+</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a9b25f4952e506a7a23659009e64d3787</anchor>
      <arglist>(TEnum lhs, TEnum rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator+</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a5d68573ef09952c2ad3e8eeceb32e7a9</anchor>
      <arglist>(TEnum lhs, typename std::underlying_type&lt; TEnum &gt;::type rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator+</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a37f9804e48d2483958929e636a69b1e8</anchor>
      <arglist>(TEnum arg) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator++</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a23993ba9ff498cc51bdf924c73d73553</anchor>
      <arglist>(TEnum &amp;arg) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_CPP14_CONSTEXPR std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator++</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a00d3d05518cdf54a93bfdbec7e452162</anchor>
      <arglist>(TEnum &amp;arg, int) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator+=</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>ac3ce792ab1cdcb6a782c8d32e041f718</anchor>
      <arglist>(TEnum &amp;lhs, TEnum rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator+=</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a6c72c2a642aa360bb45eb7496417263b</anchor>
      <arglist>(TEnum &amp;lhs, typename std::underlying_type&lt; TEnum &gt;::type rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator-</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a36dbf1c0dea06c0523493060c2be305c</anchor>
      <arglist>(TEnum lhs, TEnum rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator-</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a6dace49d871148630290dcd0ff019970</anchor>
      <arglist>(TEnum lhs, typename std::underlying_type&lt; TEnum &gt;::type rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator-</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>ade362ac2fa5c55771e240054557ff6fc</anchor>
      <arglist>(TEnum arg) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator--</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>ad133733b416d9c0a357677d733d75efb</anchor>
      <arglist>(TEnum &amp;arg) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_CPP14_CONSTEXPR std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator--</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a216e8964bc009c056929ebfef61d7c3a</anchor>
      <arglist>(TEnum &amp;arg, int) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator-=</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a751225eb2bd89d126ba103c5373e79fc</anchor>
      <arglist>(TEnum &amp;lhs, TEnum rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator-=</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>ab36b6421e55a78b3bec5c2777484385e</anchor>
      <arglist>(TEnum &amp;lhs, typename std::underlying_type&lt; TEnum &gt;::type rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator/</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a0baa9d54bb09dfb051a2bedf202abbef</anchor>
      <arglist>(TEnum lhs, typename std::underlying_type&lt; TEnum &gt;::type rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator/=</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a04830557731433e477bece1bb6bca6d6</anchor>
      <arglist>(TEnum &amp;lhs, typename std::underlying_type&lt; TEnum &gt;::type rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, bool &gt;::type</type>
      <name>operator&lt;</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a194fdac61dda4e48112f0011b6363868</anchor>
      <arglist>(TEnum lhs, TEnum rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, bool &gt;::type</type>
      <name>operator&lt;</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a15a08108c9e8b46e7866f982e27a66c4</anchor>
      <arglist>(TEnum lhs, typename std::underlying_type&lt; TEnum &gt;::type rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a0333be044acb1d4c23f3e23af128567e</anchor>
      <arglist>(TEnum lhs, typename std::underlying_type&lt; TEnum &gt;::type rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a0c81b8d1ba93ed9685b51f16f8154aec</anchor>
      <arglist>(TEnum &amp;lhs, typename std::underlying_type&lt; TEnum &gt;::type rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, bool &gt;::type</type>
      <name>operator&lt;=</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a68786356e3bb630988f5b49668225e0d</anchor>
      <arglist>(TEnum lhs, TEnum rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, bool &gt;::type</type>
      <name>operator&lt;=</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>aeb64d82dc01fdb606a6d640446681dd9</anchor>
      <arglist>(TEnum lhs, typename std::underlying_type&lt; TEnum &gt;::type rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, bool &gt;::type</type>
      <name>operator&gt;</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a7cb24e92e506e634cf3d1e786e10e9f3</anchor>
      <arglist>(TEnum lhs, TEnum rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, bool &gt;::type</type>
      <name>operator&gt;</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>af70de84a9014a8dacd466468bf3af35d</anchor>
      <arglist>(TEnum lhs, typename std::underlying_type&lt; TEnum &gt;::type rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, bool &gt;::type</type>
      <name>operator&gt;=</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a6b9bc2e7fba44ada6045f8ce66bb5e64</anchor>
      <arglist>(TEnum lhs, TEnum rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, bool &gt;::type</type>
      <name>operator&gt;=</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a177206ad92f6fbc7ab655263bb5071c6</anchor>
      <arglist>(TEnum lhs, typename std::underlying_type&lt; TEnum &gt;::type rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>ab15f1bc9ddf65ef4fc971f6f648cc77a</anchor>
      <arglist>(TEnum lhs, typename std::underlying_type&lt; TEnum &gt;::type rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a7f9445a8612f2cd0d6ef2a8c594fc158</anchor>
      <arglist>(TEnum &amp;lhs, typename std::underlying_type&lt; TEnum &gt;::type rhs) noexcept(true)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_LANG_ENUM_IS_ARITHMETICAL</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga43482d58d760408fa43d2ba7b8c845bb</anchor>
      <arglist>(TEnum)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>enumbitwise.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/lang/</path>
    <filename>enumbitwise_8hpp</filename>
    <includes id="enumarithmetical_8hpp" name="enumarithmetical.hpp" local="yes" imported="no">enumarithmetical.hpp</includes>
    <class kind="struct">aworx::lib::lang::T_EnumIsBitwise</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::lang</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_LANG_ENUM_IS_BITWISE</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga351cc6b784bc731b56e2d721ad1b094d</anchor>
      <arglist>(TEnum)</arglist>
    </member>
    <member kind="typedef">
      <type>lib::lang::T_EnumIsBitwise&lt; TEnum &gt;</type>
      <name>T_EnumIsBitwise</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>afa213b2093410bd18e8cfa3466ba7991</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsBitwise&lt; TEnum &gt;::value, bool &gt;::type</type>
      <name>EnumContains</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a2fd18b7e35e747c3e86275c57311cb1b</anchor>
      <arglist>(TEnum tested, TEnum testFor) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsBitwise&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator &amp;</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>ac5ecab83cce9a39585a8db8fdf597ee7</anchor>
      <arglist>(TEnum lhs, TEnum rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsBitwise&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator &amp;=</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a09304aaeeffaac2fb8693a970692a534</anchor>
      <arglist>(TEnum &amp;lhs, TEnum rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsBitwise&lt; TEnum &gt;::value &amp;&amp;!aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator+</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>ae17ed463cef631626f78bbae105cf0d8</anchor>
      <arglist>(TEnum lhs, TEnum rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsBitwise&lt; TEnum &gt;::value &amp;&amp;!aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator+=</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a2b3f38a3a56cd3f23c18e8137e884d6d</anchor>
      <arglist>(TEnum &amp;lhs, TEnum rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsBitwise&lt; TEnum &gt;::value &amp;&amp;!aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator-</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a9d5d93e359fc2b82bda8b7b5d49a0855</anchor>
      <arglist>(TEnum lhs, TEnum rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsBitwise&lt; TEnum &gt;::value &amp;&amp;!aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator-=</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>ab959cc47883bb9d44a072bc0a5abf2a3</anchor>
      <arglist>(TEnum &amp;lhs, TEnum rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsBitwise&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator^</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a5b389332b4d0d5ed1f7118f173685d0e</anchor>
      <arglist>(TEnum lhs, TEnum rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsBitwise&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator^=</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>ae596498f62f2978ab6cdcb97d61cfc83</anchor>
      <arglist>(TEnum &amp;lhs, TEnum rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsBitwise&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator|</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>afce7a398d6d214cd36c3a28a2d868519</anchor>
      <arglist>(TEnum lhs, TEnum rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsBitwise&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator|=</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a17407b3624b5cc4be4476378d4193082</anchor>
      <arglist>(TEnum &amp;lhs, TEnum rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsBitwise&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator~</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>ab0d1471f39a2064b7495ed403c43e247</anchor>
      <arglist>(TEnum op) noexcept(true)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_LANG_ENUM_IS_BITWISE</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga351cc6b784bc731b56e2d721ad1b094d</anchor>
      <arglist>(TEnum)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>enumiterators.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/lang/</path>
    <filename>enumiterators_8hpp</filename>
    <includes id="enumbitwise_8hpp" name="enumbitwise.hpp" local="yes" imported="no">alib/lang/enumbitwise.hpp</includes>
    <class kind="struct">aworx::lib::lang::EnumIterator</class>
    <class kind="class">aworx::lib::lang::EnumIterator::RandomAccessIteratorBase</class>
    <class kind="struct">aworx::lib::lang::T_EnumIsIteratable</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::lang</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_LANG_ENUM_IS_ITERATABLE</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga89d74128f653f1aaf15a9889b37460ab</anchor>
      <arglist>(TEnum, StopElement)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_LANG_ENUM_IS_ITERATABLE_BEGIN_END</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga2a3bf668cc9a30831855929ab14e0e3c</anchor>
      <arglist>(TEnum, StartElement, StopElement)</arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::EnumIterator&lt; TEnum, TEnableIf &gt;</type>
      <name>EnumIterator</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>aa5b7b2ae7667bce545f42c135526e399</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr TEnum</type>
      <name>operator+</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a6b687109ec6e967dab9485ea66e65851</anchor>
      <arglist>(TEnum element, int addend) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr TEnum</type>
      <name>operator-</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>afd89e3596c9591d366884c3e9fe07455</anchor>
      <arglist>(TEnum element, int subtrahend) noexcept(true)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_LANG_ENUM_IS_ITERATABLE</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga89d74128f653f1aaf15a9889b37460ab</anchor>
      <arglist>(TEnum, StopElement)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_LANG_ENUM_IS_ITERATABLE_BEGIN_END</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga2a3bf668cc9a30831855929ab14e0e3c</anchor>
      <arglist>(TEnum, StartElement, StopElement)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>enummetadata.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/lang/</path>
    <filename>enummetadata_8hpp</filename>
    <class kind="struct">aworx::lib::lang::EnumMetaData</class>
    <class kind="struct">aworx::lib::lang::EnumReadWriteInfo</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; TEnum &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; TEnumBitwise &gt;</class>
    <class kind="struct">aworx::lib::lang::T_EnumMetaDataDecl</class>
    <class kind="struct">aworx::lib::lang::T_EnumMetaDataDeclReadWrite</class>
    <class kind="struct">aworx::lib::lang::T_EnumMetaDataPreAndPostFix</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::lang</namespace>
    <namespace>aworx::lib::lang::detail</namespace>
    <namespace>aworx::lib::strings</namespace>
    <namespace>aworx::lib::strings::applyto</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_LANG_ENUM_READ_WRITE</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gacb8b467ea60e139999a47b8383d80be6</anchor>
      <arglist>(TEnum, NameIdx, MinParseLengthIdx)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_LANG_ENUM_PRE_AND_POSTFIX</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga5772bb0d91faffa47aa8bc8f6568c774</anchor>
      <arglist>(TEnum, PrefixString, PostfixString)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_LANG_ENUM_META_DATA</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gaa125ece6dbb0d4b39e25fba2c478c6d1</anchor>
      <arglist>(TEnum,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_LANG_ENUM_META_DATA_RESOURCE_LOADER</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga16d4f8ecf681d773b1e93f64144cc02a</anchor>
      <arglist>(TEnum)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_LANG_ENUM_NAMED</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga6915abca60042daca351cff2906671ae</anchor>
      <arglist>(TEnum)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_LANG_ENUM_PARSABLE</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga2a32829c21bae9e8a3440ec519b37a1d</anchor>
      <arglist>(TEnum)</arglist>
    </member>
    <member kind="typedef">
      <type>lib::lang::EnumMetaData&lt; TEnum &gt;</type>
      <name>EnumMetaData</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a643a34f30d7710fecf5c958924471206</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>lib::lang::EnumReadWriteInfo&lt; TEnum &gt;</type>
      <name>EnumReadWriteInfo</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ad5a4650e15991a20f81d933da4ce2787</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>lib::lang::T_EnumMetaDataDecl&lt; TEnum &gt;</type>
      <name>T_EnumMetaDataDecl</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a3a1673dfc99d9c6ada6e55688118987f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>lib::lang::T_EnumMetaDataDeclReadWrite&lt; TEnum &gt;</type>
      <name>T_EnumMetaDataDeclReadWrite</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>af96cbbf66e47ab524a037add74068028</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>loadStandardEnumTable</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang_1_1detail.html</anchorfile>
      <anchor>ad4971472d2421efa667733f9a6194e77</anchor>
      <arglist>(int tupleType, void *table, aworx::Library &amp;library, const aworx::String &amp;name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_LANG_ENUM_READ_WRITE</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gacb8b467ea60e139999a47b8383d80be6</anchor>
      <arglist>(TEnum, NameIdx, MinParseLengthIdx)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_LANG_ENUM_PRE_AND_POSTFIX</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga5772bb0d91faffa47aa8bc8f6568c774</anchor>
      <arglist>(TEnum, PrefixString, PostfixString)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_LANG_ENUM_META_DATA</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gaa125ece6dbb0d4b39e25fba2c478c6d1</anchor>
      <arglist>(TEnum,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_LANG_ENUM_META_DATA_RESOURCE_LOADER</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga16d4f8ecf681d773b1e93f64144cc02a</anchor>
      <arglist>(TEnum)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_LANG_ENUM_NAMED</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga6915abca60042daca351cff2906671ae</anchor>
      <arglist>(TEnum)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_LANG_ENUM_PARSABLE</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga2a32829c21bae9e8a3440ec519b37a1d</anchor>
      <arglist>(TEnum)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>enummetadataspec.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/lang/</path>
    <filename>enummetadataspec_8hpp</filename>
    <class kind="struct">aworx::lib::lang::T_EnumMetaDataSpecification</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::lang</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_ENUM_SPECIFICATION_DECL</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga838811e215bfbe7fddeb0f4647f485e5</anchor>
      <arglist>(TSpecific,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_ENUM_SPECIFICATION_IMPL</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga2c2be690911478df26b308858bbe5d60</anchor>
      <arglist>(TSpecific)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_ENUM_SPECIFICATION</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gae61bf9a7967225079ccc6ae1c56e38e6</anchor>
      <arglist>(TSpecific, TEnum, ResourceLibrary, ResourceName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_ENUM_SPECIFICATION_DECL</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga838811e215bfbe7fddeb0f4647f485e5</anchor>
      <arglist>(TSpecific,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_ENUM_SPECIFICATION_IMPL</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga2c2be690911478df26b308858bbe5d60</anchor>
      <arglist>(TSpecific)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_ENUM_SPECIFICATION</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gae61bf9a7967225079ccc6ae1c56e38e6</anchor>
      <arglist>(TSpecific, TEnum, ResourceLibrary, ResourceName)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>enums.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/lang/</path>
    <filename>enums_8hpp</filename>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::lang</namespace>
    <member kind="typedef">
      <type>aworx::lib::lang::Alignment</type>
      <name>Alignment</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a7a2db0a65737b15857077150566e85b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::Bool</type>
      <name>Bool</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ae470e0051ffb5de1b90e9787d50476d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::Case</type>
      <name>Case</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>adcd43e032e2fb23c28fb20d22ccd2382</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::ContainerOp</type>
      <name>ContainerOp</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>aab5bf6a8650ce22362cd2b96e2d40b10</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::Create</type>
      <name>Create</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ae64bb52191bb90603991a2bf50392ea9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::CurrentData</type>
      <name>CurrentData</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a10d457b73440d2da4073ef7e42c6aebd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::Inclusion</type>
      <name>Inclusion</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a934720ec6a941ba8927467c410f9783c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::LockMode</type>
      <name>LockMode</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>aff7243ab824f2f6d05a138c15f2733ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::Phase</type>
      <name>Phase</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a4c5a62df6ce3760e0672fb1f646327cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::Propagation</type>
      <name>Propagation</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a50769d759702817f6ed82fcf71854408</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::Reach</type>
      <name>Reach</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a7a83f9bd51ff561df1e199546542229f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::Responsibility</type>
      <name>Responsibility</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a3671252255ccd69a9165a3cc752cb73e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::Safeness</type>
      <name>Safeness</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>aa79d65dae6fee850c4a638c5bb26b1e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::SortOrder</type>
      <name>SortOrder</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a086789c0b56e605b79bf57d0fd53b306</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::SourceData</type>
      <name>SourceData</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>acdb8e25ed050d0001a0389e38aa5ef75</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::Switch</type>
      <name>Switch</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a68e1ec4ff4ca04def6fdd7fe217a245a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::Timezone</type>
      <name>Timezone</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a1502492c46a08f4f2c114afd9bb7604c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::Whitespaces</type>
      <name>Whitespaces</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a48b158f1a264112a9b35979d369647cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Alignment</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>acdfaca60ec19c0265bac2692d7982726</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="acdfaca60ec19c0265bac2692d7982726a945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="acdfaca60ec19c0265bac2692d7982726a92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="acdfaca60ec19c0265bac2692d7982726a4f1f6016fc9f3f2353c0cc7c67b292bd">Center</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Bool</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a39db6982619d623273fad8a383489309</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a39db6982619d623273fad8a383489309af8320b26d30ab433c5a54546d21f414c">False</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a39db6982619d623273fad8a383489309af827cf462f62848df37c5e1e94a4da74">True</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Case</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>ab9aab17a5e54a8bae6915bc24db13a17</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="ab9aab17a5e54a8bae6915bc24db13a17a8f21fcdc233ba4078679ca628453d06b">Sensitive</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="ab9aab17a5e54a8bae6915bc24db13a17afd038fc7f319e48f3115d92bf5bdbef9">Ignore</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ContainerOp</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>af6d9cc1e6686eca6e60d57d959cf57fb</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="af6d9cc1e6686eca6e60d57d959cf57fbaa458be0f08b7e4ff3c0f633c100176c0">Insert</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="af6d9cc1e6686eca6e60d57d959cf57fba1063e38cb53d94d386f21227fcd84717">Remove</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="af6d9cc1e6686eca6e60d57d959cf57fbac55582518cba2c464f29f5bae1c68def">Get</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="af6d9cc1e6686eca6e60d57d959cf57fba1d5c1a7fde77e84c993d6fea61f88c2a">GetCreate</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="af6d9cc1e6686eca6e60d57d959cf57fba686e697538050e4664636337cc3b834f">Create</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Create</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a55781bd0c78c4e5d47ce433f4eeeee85</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a55781bd0c78c4e5d47ce433f4eeeee85a6e7b34fa59e1bd229b207892956dc41c">Never</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a55781bd0c78c4e5d47ce433f4eeeee85a44c32ea9ad0b836b68c25fdb717fa4b7">IfNotExistent</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CurrentData</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a9345007d67faa05253932092d54d10d4</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a9345007d67faa05253932092d54d10d4a02bce93bff905887ad2233110bf9c49e">Keep</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a9345007d67faa05253932092d54d10d4adc30bc0c7914db5918da4263fce93ad2">Clear</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Inclusion</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a217539925b78b2eed40ae7817d5bee52</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a217539925b78b2eed40ae7817d5bee52af4d72a64acd8929c0cc9ed96a7a336cc">Include</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a217539925b78b2eed40ae7817d5bee52a843f2812f595e7ec7c5036e89fde02d6">Exclude</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LockMode</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a00fc859257c8f09ff9198dde28121961</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a00fc859257c8f09ff9198dde28121961a556c3dd912453ae5cb3095cd5054e6f4">Recursive</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a00fc859257c8f09ff9198dde28121961a67b491789a29d0c717a2b4ebe369a936">SingleLocks</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Phase</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>ae1c5184dc404edf057ed537bcfddef84</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="ae1c5184dc404edf057ed537bcfddef84a1a06729125544cab7cee73195fc044f0">Begin</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="ae1c5184dc404edf057ed537bcfddef84a87557f11575c0ad78e4e28abedc13b6e">End</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Propagation</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>aeae0c2d4659a32ef54bd221d1a3da4e6</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="aeae0c2d4659a32ef54bd221d1a3da4e6a3f9823fc8c5bf8d5efbb0ad3be5f16c9">Omit</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="aeae0c2d4659a32ef54bd221d1a3da4e6aa9857b4deb35c57d5753f94fa00a028e">ToDescendants</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Reach</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a9537c0a8df05f0a728b6e2a89c7f3a1b</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a9537c0a8df05f0a728b6e2a89c7f3a1ba4cc6684df7b4a92b1dec6fce3264fac8">Global</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a9537c0a8df05f0a728b6e2a89c7f3a1ba509820290d57f333403f490dde7316f4">Local</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Responsibility</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>ab5305b978950ba3946cf79a4bccbf7af</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="ab5305b978950ba3946cf79a4bccbf7afa2540530a938da82bfe62957f4aff599b">KeepWithSender</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="ab5305b978950ba3946cf79a4bccbf7afa6950810f0d2bba97a6f710c7b965b84e">Transfer</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Safeness</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a8c800527afe0a8a6c71ae4cceda6bf9d</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a8c800527afe0a8a6c71ae4cceda6bf9dac6eea0560cd6f377e78dff2c85cc9122">Safe</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a8c800527afe0a8a6c71ae4cceda6bf9dad3d57868b6ff9839eff631d2cc8acbce">Unsafe</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SortOrder</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>ad9be72f666a31b4318bbc8e8a16a9472</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="ad9be72f666a31b4318bbc8e8a16a9472acf3fb1ff52ea1eed3347ac5401ee7f0c">Ascending</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="ad9be72f666a31b4318bbc8e8a16a9472ae3cf5ac19407b1a62c6fccaff675a53b">Descending</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SourceData</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>ab0acd6daf9443d8b997f1035cfe08dd8</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="ab0acd6daf9443d8b997f1035cfe08dd8a5fb63579fc981698f97d55bfecb213ea">Copy</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="ab0acd6daf9443d8b997f1035cfe08dd8a6bc362dbf494c61ea117fe3c71ca48a5">Move</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Switch</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a9f3c28a2cb05bdcc618b542e49bfda3f</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a9f3c28a2cb05bdcc618b542e49bfda3fad15305d7a4e34e02489c74a5ef542f36">Off</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a9f3c28a2cb05bdcc618b542e49bfda3fa521c36a31c2762741cf0f8890cbe05e3">On</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Timezone</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a9b1d8f31e178e17a8fef3a9e94bc4b2c</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a9b1d8f31e178e17a8fef3a9e94bc4b2ca509820290d57f333403f490dde7316f4">Local</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a9b1d8f31e178e17a8fef3a9e94bc4b2ca9234324ddf6b4176b57d803a925b7961">UTC</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Whitespaces</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>ad4a46f9fb632511f6be7c53e05f330f7</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="ad4a46f9fb632511f6be7c53e05f330f7a1fc5884251ca9f20a4fd5f79a458f94f">Trim</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="ad4a46f9fb632511f6be7c53e05f330f7a02bce93bff905887ad2233110bf9c49e">Keep</enumvalue>
    </member>
    <member kind="function">
      <type>constexpr std::underlying_type&lt; TEnum &gt;::type</type>
      <name>EnumValue</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a84494f1a492417b7b96bb8dfcd9c4c02</anchor>
      <arglist>(TEnum element) noexcept(true)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>environment.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/system/</path>
    <filename>environment_8hpp</filename>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::system</namespace>
    <member kind="function">
      <type>bool</type>
      <name>GetEnvironmentVariable</name>
      <anchorfile>namespaceaworx_1_1lib_1_1system.html</anchorfile>
      <anchor>a907b528cc336c47a89373475e0b41aa6</anchor>
      <arglist>(const TString &amp;name, AString &amp;target, CurrentData targetData, Case sensitivity)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>exception.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/lang/</path>
    <filename>exception_8hpp</filename>
    <includes id="enum_8hpp" name="enum.hpp" local="yes" imported="no">alib/lang/enum.hpp</includes>
    <includes id="enummetadataspec_8hpp" name="enummetadataspec.hpp" local="yes" imported="no">alib/lang/enummetadataspec.hpp</includes>
    <class kind="struct">aworx::lib::lang::Exception::Entry</class>
    <class kind="class">aworx::lib::lang::Exception</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::lang</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_LANG_EXCEPTIONS</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga1fc9d72399e5c3d3fe003f3e8070aa6d</anchor>
      <arglist>(TEnum, ResourceLibrary, ResourceName)</arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::Exception</type>
      <name>Exception</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>af66f71fa3d551b47f0a968567a511770</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_LANG_EXCEPTIONS</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga1fc9d72399e5c3d3fe003f3e8070aa6d</anchor>
      <arglist>(TEnum, ResourceLibrary, ResourceName)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>formatter.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/strings/format/</path>
    <filename>formatter_8hpp</filename>
    <includes id="threadlock_8hpp" name="threadlock.hpp" local="yes" imported="no">alib/threads/threadlock.hpp</includes>
    <includes id="numberformat_8hpp" name="numberformat.hpp" local="yes" imported="no">alib/strings/numberformat.hpp</includes>
    <includes id="substring_8hpp" name="substring.hpp" local="yes" imported="no">alib/strings/substring.hpp</includes>
    <includes id="exception_8hpp" name="exception.hpp" local="yes" imported="no">alib/lang/exception.hpp</includes>
    <class kind="class">aworx::lib::strings::format::Formatter</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::strings</namespace>
    <namespace>aworx::lib::strings::format</namespace>
    <member kind="typedef">
      <type>aworx::lib::strings::format::Formatter</type>
      <name>Formatter</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a8a886b94242bc07b7074667aa0a8f0dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Exceptions</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1format.html</anchorfile>
      <anchor>a8d828d7f6e0c02a7815c7e1308d3b06e</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06eab824c25395097a4c6a0e237f1860659f">ArgumentIndexIs0</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ea7b135f4c4134973b2eefbfc667e32611">ArgumentIndexOutOfBounds</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06eac2ef290af573d8cac404101f3eb6b55e">IncompatibleTypeCode</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ea85c72968156b2c02305ea84f0a9f14a3">MissingClosingBracket</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ea0c7f531702f8c4d33fd170bc6d0dd2df">MissingPrecisionValuePS</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ea9d68f4d833814dfe68974a74cf66578a">DuplicateTypeCode</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ead1f81b50cf7c8eb763d702dc0edb57d6">UnknownTypeCode</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ea12dc7dca6b11b10b8a658bc99b7625f8">ExclamationMarkExpected</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ea0164833a898a5790de42aade4d373081">UnknownConversionPS</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06eaa3eb3a5830a7295947fbdf143a2237cd">PrecisionSpecificationWithInteger</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ea0710ec768756e2fab83f109012019306">MissingReplacementStrings</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06eac50d0f4ef6dacc8ca0e40b2c8ad9f7c5">NegativeValuesInBracketsNotSupported</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06eaf2419a1cbc8a6d6c0f1463b390fc7a96">MissingPrecisionValueJS</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ea53c689fcc979361719a8195a20c2804a">HexadecimalFloatFormatNotSupported</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ea3dcc7cd93078f53d385af9b09c6cac6e">NoAlternateFormOfConversion</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06eadc4e10195e77f50a66630c9a79ce141f">NoPrecisionWithConversion</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ea24dc076590908b20eea21271933dcc9d">UnknownDateTimeConversionSuffix</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06eae63f35d2f06aef36a6ddd066a54c1441">UnknownConversionJS</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ea8f0d58f2db3173f82663f74b4152f063">UnknownPropertyInFormatString</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06eae082ea173080fc0f48162c5097d28b66">ErrorInResultingFormatString</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ea6bf4e666277316a0cbc6c64ab72b7928">MissingConfigurationVariable</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ea6bf564f445f8d968d3b847353c88f575">UnknownMarker</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06eab577f072ad031d6dba588841dc68872f">EndmarkerWithoutStart</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>formatterjavastyle.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/strings/format/</path>
    <filename>formatterjavastyle_8hpp</filename>
    <includes id="formatterstdimpl_8hpp" name="formatterstdimpl.hpp" local="yes" imported="no">alib/strings/format/formatterstdimpl.hpp</includes>
    <class kind="class">aworx::lib::strings::format::FormatterJavaStyle</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::strings</namespace>
    <namespace>aworx::lib::strings::format</namespace>
    <member kind="typedef">
      <type>aworx::lib::strings::format::FormatterJavaStyle</type>
      <name>FormatterJavaStyle</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>af92291820cffb4092194bf724723f943</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>formatterpythonstyle.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/strings/format/</path>
    <filename>formatterpythonstyle_8hpp</filename>
    <includes id="formatterstdimpl_8hpp" name="formatterstdimpl.hpp" local="yes" imported="no">alib/strings/format/formatterstdimpl.hpp</includes>
    <includes id="autosizes_8hpp" name="autosizes.hpp" local="yes" imported="no">alib/strings/util/autosizes.hpp</includes>
    <class kind="class">aworx::lib::strings::format::FormatterPythonStyle</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::strings</namespace>
    <namespace>aworx::lib::strings::format</namespace>
    <member kind="typedef">
      <type>aworx::lib::strings::format::FormatterPythonStyle</type>
      <name>FormatterPythonStyle</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>aaa224c25fc78d8c161dda09c9500a3d1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>formatterstdimpl.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/strings/format/</path>
    <filename>formatterstdimpl_8hpp</filename>
    <includes id="formatter_8hpp" name="formatter.hpp" local="yes" imported="no">alib/strings/format/formatter.hpp</includes>
    <class kind="class">aworx::lib::strings::format::FormatterStdImpl</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::strings</namespace>
    <namespace>aworx::lib::strings::format</namespace>
    <member kind="typedef">
      <type>aworx::lib::strings::format::FormatterStdImpl</type>
      <name>FormatterStdImpl</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a584aa13a9fcffa31b55501b3982f0074</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ftypes.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/boxing/</path>
    <filename>ftypes_8hpp</filename>
    <class kind="class">aworx::lib::boxing::ftypes::IEquals_Tchar16_tArr</class>
    <class kind="class">aworx::lib::boxing::ftypes::IEquals_Tchar32_tArr</class>
    <class kind="class">aworx::lib::boxing::ftypes::IEquals_TcharArr</class>
    <class kind="class">aworx::lib::boxing::ftypes::IEquals_Tdouble</class>
    <class kind="class">aworx::lib::boxing::ftypes::IEquals_Twchar_tArr</class>
    <class kind="class">aworx::lib::boxing::ftypes::IIsLess_boxed_int</class>
    <class kind="class">aworx::lib::boxing::ftypes::IIsLess_boxed_uint</class>
    <class kind="class">aworx::lib::boxing::ftypes::IIsLess_double</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::boxing</namespace>
    <namespace>aworx::lib::boxing::ftypes</namespace>
    <member kind="typedef">
      <type>int64_t</type>
      <name>boxed_int</name>
      <anchorfile>namespaceaworx_1_1lib_1_1boxing_1_1ftypes.html</anchorfile>
      <anchor>ae01feb126fdae1ecf8a72a70abb605d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::boxing::ftypes::boxed_int</type>
      <name>boxed_int</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ae3275727f1c6ee612615d3c881610d61</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint64_t</type>
      <name>boxed_uint</name>
      <anchorfile>namespaceaworx_1_1lib_1_1boxing_1_1ftypes.html</anchorfile>
      <anchor>a5fcdb87abc3548c14049e3c9b6dee7b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::boxing::ftypes::boxed_uint</type>
      <name>boxed_uint</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a7ce7b3f615ad2b8992291d1692b8691e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr integer</type>
      <name>T_SetArraySize&lt; char &gt;</name>
      <anchorfile>namespaceaworx_1_1lib_1_1boxing_1_1ftypes.html</anchorfile>
      <anchor>a8b9c3e66e650aa993d6da958de24a6f3</anchor>
      <arglist>(integer arrayExtent)</arglist>
    </member>
    <member kind="function">
      <type>constexpr integer</type>
      <name>T_SetArraySize&lt; char16_t &gt;</name>
      <anchorfile>namespaceaworx_1_1lib_1_1boxing_1_1ftypes.html</anchorfile>
      <anchor>a2543796c50bfb8cbff884d4cda621186</anchor>
      <arglist>(integer arrayExtent)</arglist>
    </member>
    <member kind="function">
      <type>constexpr integer</type>
      <name>T_SetArraySize&lt; char32_t &gt;</name>
      <anchorfile>namespaceaworx_1_1lib_1_1boxing_1_1ftypes.html</anchorfile>
      <anchor>aa72dac154ce622d955adb466fadd6eb5</anchor>
      <arglist>(integer arrayExtent)</arglist>
    </member>
    <member kind="function">
      <type>constexpr integer</type>
      <name>T_SetArraySize&lt; wchar_t &gt;</name>
      <anchorfile>namespaceaworx_1_1lib_1_1boxing_1_1ftypes.html</anchorfile>
      <anchor>a4f87803660c23b0715dd8e93724efdd4</anchor>
      <arglist>(integer arrayExtent)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>inifile.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/config/</path>
    <filename>inifile_8hpp</filename>
    <includes id="inmemoryplugin_8hpp" name="inmemoryplugin.hpp" local="yes" imported="no">alib/config/inmemoryplugin.hpp</includes>
    <class kind="class">aworx::lib::config::IniFile::Entry</class>
    <class kind="class">aworx::lib::config::IniFile</class>
    <class kind="class">aworx::lib::config::IniFile::Section</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::config</namespace>
    <namespace>aworx::lib::strings</namespace>
    <member kind="typedef">
      <type>aworx::lib::config::IniFile</type>
      <name>IniFile</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>aef31dd55ee6403c15d9ba93325d3333d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>inmemoryplugin.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/config/</path>
    <filename>inmemoryplugin_8hpp</filename>
    <includes id="plugins_8hpp" name="plugins.hpp" local="yes" imported="no">alib/config/plugins.hpp</includes>
    <class kind="class">aworx::lib::config::InMemoryPlugin::Entry</class>
    <class kind="class">aworx::lib::config::InMemoryPlugin</class>
    <class kind="class">aworx::lib::config::InMemoryPlugin::Section</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::config</namespace>
    <namespace>aworx::lib::strings</namespace>
    <member kind="typedef">
      <type>aworx::lib::config::InMemoryPlugin</type>
      <name>InMemoryPlugin</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a5acd1ac5b29f64268c6bd7dea9e3a3bd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>interface.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/boxing/</path>
    <filename>interface_8hpp</filename>
    <class kind="class">aworx::lib::boxing::Interface</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::boxing</namespace>
    <member kind="typedef">
      <type>aworx::lib::boxing::Interface</type>
      <name>Interface</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>aef105b1e431c10dcbb5691cb9814cac8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>interface_builtin.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/boxing/</path>
    <filename>interface__builtin_8hpp</filename>
    <class kind="class">aworx::lib::boxing::IEquals</class>
    <class kind="class">aworx::lib::boxing::IEquals_TComparable</class>
    <class kind="class">aworx::lib::boxing::IIsEmpty</class>
    <class kind="class">aworx::lib::boxing::IIsLess</class>
    <class kind="class">aworx::lib::boxing::IIsNull</class>
    <class kind="class">aworx::lib::boxing::IIsNull_false</class>
    <class kind="class">aworx::lib::boxing::IIsTrue</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::boxing</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_BOXING_DEFINE_IEQUALS_FOR_COMPARABLE_TYPE</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gade46b3b2a5b16c7b6bcf26937bd26186</anchor>
      <arglist>(TComparable)</arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::boxing::IEquals</type>
      <name>IEquals</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ad2a6bc6649fc6c466eea78e6cc2adaf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::boxing::IIsEmpty</type>
      <name>IIsEmpty</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ae6997e75801a3dcdc3a80cec77b1a62f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::boxing::IIsLess</type>
      <name>IIsLess</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a95d240a6fb229f764a5176d6ec15ec41</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::boxing::IIsNull</type>
      <name>IIsNull</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a95b27610e38c813268b4a843ef5ef173</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::boxing::IIsTrue</type>
      <name>IIsTrue</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a8eed3b07a321612dad1f80d59cafd8ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_BOXING_DEFINE_IEQUALS_FOR_COMPARABLE_TYPE</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gade46b3b2a5b16c7b6bcf26937bd26186</anchor>
      <arglist>(TComparable)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>langlib.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/lang/</path>
    <filename>langlib_8hpp</filename>
    <class kind="class">aworx::lib::lang::Lang</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::lang</namespace>
    <member kind="enumeration">
      <type></type>
      <name>Exceptions</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a8d828d7f6e0c02a7815c7e1308d3b06e</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ea7946215ab743bd9d347d313643ca72dd">ErrorWritingReport</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>library.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/lang/</path>
    <filename>library_8hpp</filename>
    <class kind="class">aworx::lib::lang::Library</class>
    <class kind="struct">aworx::lib::lang::T_Resourced</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::lang</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_LANG_RESOURCED</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gac419003997599df2be29a9eada120d98</anchor>
      <arglist>(TResourced, ResourceLibrary, NameString)</arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::Library</type>
      <name>Library</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ad80f5a35cfcaa40fcf9bb8a33c5e10ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_LANG_RESOURCED</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gac419003997599df2be29a9eada120d98</anchor>
      <arglist>(TResourced, ResourceLibrary, NameString)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>log.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alox/</path>
    <filename>log_8hpp</filename>
    <includes id="alox_8hpp" name="alox.hpp" local="yes" imported="no">alox/alox.hpp</includes>
    <class kind="class">aworx::lox::Log</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lox</namespace>
    <namespace>aworx::lox::core</namespace>
    <namespace>aworx::lox::core::textlogger</namespace>
    <member kind="typedef">
      <type>aworx::lox::Log</type>
      <name>Log</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a5d8a9ca518e5abc7446b6a753e2b7ae6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>logger.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alox/core/</path>
    <filename>logger_8hpp</filename>
    <includes id="alox_8hpp" name="alox.hpp" local="yes" imported="no">alox/alox.hpp</includes>
    <class kind="class">aworx::lox::core::Logger</class>
    <class kind="struct">aworx::lib::strings::thirdparty::alox::T_Apply&lt; lox::core::Logger &gt;</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::strings</namespace>
    <namespace>aworx::lib::strings::thirdparty</namespace>
    <namespace>aworx::lib::strings::thirdparty::alox</namespace>
    <namespace>aworx::lox</namespace>
    <namespace>aworx::lox::core</namespace>
    <member kind="typedef">
      <type>aworx::lox::core::Logger</type>
      <name>Logger</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a8ec4a1b5f5786befe04b9f08d5417cdc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>logtools.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alox/</path>
    <filename>logtools_8hpp</filename>
    <includes id="alox_8hpp" name="alox.hpp" local="yes" imported="no">alox/alox.hpp</includes>
    <class kind="class">aworx::lox::LogTools</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lox</namespace>
    <member kind="typedef">
      <type>aworx::lox::LogTools</type>
      <name>LogTools</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a6055ab84a2d598896f00d8cea50e7497</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>lox.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alox/</path>
    <filename>lox_8hpp</filename>
    <includes id="alox_8hpp" name="alox.hpp" local="yes" imported="no">alox/alox.hpp</includes>
    <includes id="smartlock_8hpp" name="smartlock.hpp" local="yes" imported="no">alib/threads/smartlock.hpp</includes>
    <includes id="tokenizer_8hpp" name="tokenizer.hpp" local="yes" imported="no">alib/strings/util/tokenizer.hpp</includes>
    <includes id="configuration_8hpp" name="configuration.hpp" local="yes" imported="no">alib/config/configuration.hpp</includes>
    <includes id="scopeinfo_8hpp" name="scopeinfo.hpp" local="yes" imported="no">alox/core/scopeinfo.hpp</includes>
    <includes id="logger_8hpp" name="logger.hpp" local="yes" imported="no">alox/core/logger.hpp</includes>
    <includes id="domain_8hpp" name="domain.hpp" local="yes" imported="no">alox/core/domain.hpp</includes>
    <includes id="scopestore_8hpp" name="scopestore.hpp" local="yes" imported="no">alox/core/scopestore.hpp</includes>
    <class kind="struct">aworx::lox::Lox::DomainSubstitutionRule</class>
    <class kind="class">aworx::lox::Lox</class>
    <class kind="class">aworx::lox::PrefixLogable</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lox</namespace>
    <namespace>aworx::lox::core</namespace>
    <namespace>aworx::lox::core::textlogger</namespace>
    <member kind="typedef">
      <type>aworx::lox::Lox</type>
      <name>Lox</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>abf1258bbd9cf9772a1559f4ceb37fde4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>memoryblocks.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/util/</path>
    <filename>memoryblocks_8hpp</filename>
    <class kind="struct">aworx::lib::util::MemoryBlocks::Block</class>
    <class kind="class">aworx::lib::util::MemoryBlocks</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::util</namespace>
    <member kind="typedef">
      <type>aworx::lib::util::MemoryBlocks</type>
      <name>MemoryBlocks</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a11f6cf54ed2fafb1fe0aa2c283278bdc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>memorylogger.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alox/loggers/</path>
    <filename>memorylogger_8hpp</filename>
    <includes id="alox_8hpp" name="alox.hpp" local="yes" imported="no">alox/alox.hpp</includes>
    <includes id="plaintextlogger_8hpp" name="plaintextlogger.hpp" local="yes" imported="no">alox/core/textlogger/plaintextlogger.hpp</includes>
    <class kind="class">aworx::lox::loggers::MemoryLogger</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lox</namespace>
    <namespace>aworx::lox::loggers</namespace>
    <member kind="typedef">
      <type>aworx::lox::loggers::MemoryLogger</type>
      <name>MemoryLogger</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>aff4e02a238ba03a98be3dd17d783f336</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>numberformat.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/strings/</path>
    <filename>numberformat_8hpp</filename>
    <class kind="class">aworx::lib::strings::NumberFormat</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::strings</namespace>
    <member kind="typedef">
      <type>aworx::lib::strings::NumberFormat</type>
      <name>NumberFormat</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a4105ad142b7282bab44c0f051d36e350</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ownable.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/lang/</path>
    <filename>ownable_8hpp</filename>
    <includes id="alib_8hpp" name="alib.hpp" local="yes" imported="no">alib/alib.hpp</includes>
    <class kind="class">aworx::lib::lang::Ownable</class>
    <class kind="struct">aworx::lib::lang::Owner</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::lang</namespace>
    <member kind="define">
      <type>#define</type>
      <name>OWN</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga428418e97842561b5fa5118c120954a9</anchor>
      <arglist>(ownable)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OWN</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga428418e97842561b5fa5118c120954a9</anchor>
      <arglist>(ownable)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>plaintextlogger.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alox/core/textlogger/</path>
    <filename>plaintextlogger_8hpp</filename>
    <includes id="alox_8hpp" name="alox.hpp" local="yes" imported="no">alox/alox.hpp</includes>
    <includes id="textlogger_8hpp" name="textlogger.hpp" local="yes" imported="no">alox/core/textlogger/textlogger.hpp</includes>
    <class kind="class">aworx::lox::core::textlogger::PlainTextLogger</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::strings</namespace>
    <namespace>aworx::lox</namespace>
    <namespace>aworx::lox::core</namespace>
    <namespace>aworx::lox::core::textlogger</namespace>
  </compound>
  <compound kind="file">
    <name>plugincontainer.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/util/</path>
    <filename>plugincontainer_8hpp</filename>
    <includes id="enumbitwise_8hpp" name="enumbitwise.hpp" local="yes" imported="no">alib/lang/enumbitwise.hpp</includes>
    <includes id="threadlock_8hpp" name="threadlock.hpp" local="yes" imported="no">alib/threads/threadlock.hpp</includes>
    <includes id="substring_8hpp" name="substring.hpp" local="yes" imported="no">alib/strings/substring.hpp</includes>
    <class kind="class">aworx::lib::util::PluginContainer</class>
    <class kind="struct">aworx::lib::util::PluginContainer::Slot</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::util</namespace>
  </compound>
  <compound kind="file">
    <name>plugins.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/config/</path>
    <filename>plugins_8hpp</filename>
    <includes id="variable_8hpp" name="variable.hpp" local="yes" imported="no">alib/config/variable.hpp</includes>
    <includes id="substring_8hpp" name="substring.hpp" local="yes" imported="no">alib/strings/substring.hpp</includes>
    <class kind="class">aworx::lib::config::CLIArgs</class>
    <class kind="class">aworx::lib::config::ConfigurationPlugin</class>
    <class kind="class">aworx::lib::config::Environment</class>
    <class kind="class">aworx::lib::config::ConfigurationPlugin::Iterator</class>
    <class kind="class">aworx::lib::config::XTernalizer</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::config</namespace>
    <namespace>aworx::lib::config::detail</namespace>
    <member kind="function">
      <type>bool</type>
      <name>nextCLIArg</name>
      <anchorfile>namespaceaworx_1_1lib_1_1config_1_1detail.html</anchorfile>
      <anchor>ad600c0b6fc48730d01c6f5c0a18ec5a1</anchor>
      <arglist>(CLIArgs &amp;cliArgs, size_t &amp;nextArgNo, const String &amp;sectionName, Variable &amp;variable)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>preallocatedstring.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/strings/</path>
    <filename>preallocatedstring_8hpp</filename>
    <class kind="class">aworx::lib::strings::PreallocatedString</class>
    <class kind="struct">aworx::lib::strings::T_IsTerminatable&lt; PreallocatedString&lt; TCapacity &gt; &gt;</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::strings</namespace>
    <member kind="typedef">
      <type>aworx::lib::strings::PreallocatedString&lt; TCapacity &gt;</type>
      <name>PreallocatedString</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a2e838e65c7df891455e0466be710839f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::PreallocatedString&lt; 128 &gt;</type>
      <name>String128</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a2841f1443c3b2f3d6066d5774cf69dbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::PreallocatedString&lt; 16 &gt;</type>
      <name>String16</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a148a217c34a72b4360462205858b8f0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::PreallocatedString&lt; 1024 &gt;</type>
      <name>String1K</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a82395a8f3fac47787ebe8749679a2796</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::PreallocatedString&lt; 256 &gt;</type>
      <name>String256</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a152f787b6dac47dd3f94ae5ebf1ece53</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::PreallocatedString&lt; 2048 &gt;</type>
      <name>String2K</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a76f69ad445caecfbf03351c884637b09</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::PreallocatedString&lt; 32 &gt;</type>
      <name>String32</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a221752691fb92bcd592c045d6c368289</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::PreallocatedString&lt; 4096 &gt;</type>
      <name>String4K</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a772f06f37ace5e2b2eb8cafc0c859c44</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::PreallocatedString&lt; 512 &gt;</type>
      <name>String512</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>af634b7550d8a316ce3cf3fb6f9e86079</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::PreallocatedString&lt; 64 &gt;</type>
      <name>String64</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ac2fdc487456a994238ba4284b3859c41</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::PreallocatedString&lt; 8 &gt;</type>
      <name>String8</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ab35696c2e8d79567a528a4b6da788eb3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>prepro.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/lang/</path>
    <filename>prepro_8hpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_API_IS_DLL</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>ga370030903f61fada5d63e9285ec12dac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_API_NO_DLL</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>ga82f838e82dbcdd33416faa80718d1711</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_AVOID_ANALYZER_WARNINGS</name>
      <anchorfile>group__GrpALibCodeSelectorSymbols.html</anchorfile>
      <anchor>ga22453f45d36d0fa8790b74a270f027c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_AVOID_ANALYZER_WARNINGS_OFF</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>ga749e93d24d210c48e3b9b31a09727b82</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_AVOID_ANALYZER_WARNINGS_ON</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>gacaa316e613cf0f7bc021130c1b4e2f33</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_DEBUG</name>
      <anchorfile>group__GrpALibCodeSelectorSymbols.html</anchorfile>
      <anchor>gac56d0d10d022f28ce6bacdc612b4a743</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_DEBUG_OFF</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>ga141eac004cc6915d6217ddd591b46b4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_DEBUG_ON</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>ga3afdbe5a480e0328d115f7b6fb17f5f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_FEAT_BOOST_REGEX</name>
      <anchorfile>group__GrpALibCodeSelectorSymbols.html</anchorfile>
      <anchor>gae623ee56752a70f1e804c83db3919f15</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_FEAT_BOOST_REGEX_OFF</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>ga2e4b6bba7fbec56ff653f82e295be7da</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_FEAT_BOOST_REGEX_ON</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>ga314fe4b29310c2beb77ac4b0665249d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_FEAT_THREADS</name>
      <anchorfile>group__GrpALibCodeSelectorSymbols.html</anchorfile>
      <anchor>ga1b908cb4e15b716440551455e0a5f138</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_FEAT_THREADS_OFF</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>gac4bd86743dc96603b414fa7e517fdb9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_FEAT_THREADS_ON</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>ga1bed5257f25120726eb658164c482957</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_STRINGIFY</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga3f61373916523c0c97327c83b2d6132e</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_CONCAT</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gaf5375d121ff32a60c641c7e3a4b7810e</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_IDENTIFIER</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gaeee83bac121e3fd5d1b452269a5853f3</anchor>
      <arglist>(prefix)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_COMMA</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gaf0f36a56c88d4138438b7897c787c59f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_COMMA_DBG</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga6730e9dcdca129649f6040b3f7144d3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_API</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga74fe706f3101d8e1e21555f772da2849</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_DBG</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga5f6b7763c5f5722d7f178c04540aba9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_REL_DBG</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga8f4eaa134959341e3f98a86c53c73281</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_CPP14</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga07a1e2cab1fda254aa6463595223e523</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_CPP14_CONSTEXPR</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga90927aab45cbfd0e0bd84649d45ec929</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_CPP17</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gab1ee9c1033dc145502da25e970a5954b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_NO_RETURN</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga635f795f6036977415c87d82d385489a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_SIZEOF_WCHAR_T</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga5a044189d5dbf0a9a16c757c61b30122</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_SRCPOS</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga78aabff444ee51f21cdfa81d81a00e64</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_SRCPOS_REL_EMPTY</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga3d922ed3a0447cf1b3fd6d23fe41527e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_SRCPOS_REL_NULLED</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga171353a218bb2e8e9af924c98968b116</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_TMP_SHOW_TYPE_IN_DEBUGGER</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga474671002d5264f4e1851ddb541d848b</anchor>
      <arglist>(type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARNINGS_RESTORE</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga65685ca0f9ee1c3af3bdc8f0df4d431d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARNINGS_ALLOW_TEMPLATE_META_PROGRAMMING</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gad64afad18f0a403ccfc7703caf03a047</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARNINGS_UNINITIALIZED_OFF</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga25e88e49df3bbf7266e602b7abf62b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARNINGS_OVERLOAD_VIRTUAL_OFF</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gae0b01789678bd95eb30cf96f7806c084</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARNINGS_MACRO_NOT_USED_OFF</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gae1f79630f149afe2900be8ddc95be90b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARNINGS_ALLOW_SPARSE_ENUM_SWITCH</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga990f89d9997c78748ad4859b52810212</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARNINGS_ALLOW_BITWISE_SWITCH</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga47068005503397453b64e89db03bd3e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_FALLTHROUGH</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga1518475780abb680e932a6c564e05fd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_STRINGIFY</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga3f61373916523c0c97327c83b2d6132e</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_CONCAT</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gaf5375d121ff32a60c641c7e3a4b7810e</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_IDENTIFIER</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gaeee83bac121e3fd5d1b452269a5853f3</anchor>
      <arglist>(prefix)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_COMMA</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gaf0f36a56c88d4138438b7897c787c59f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_COMMA_DBG</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga6730e9dcdca129649f6040b3f7144d3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_API</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga74fe706f3101d8e1e21555f772da2849</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_DBG</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga5f6b7763c5f5722d7f178c04540aba9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_REL_DBG</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga8f4eaa134959341e3f98a86c53c73281</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_CPP14</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga07a1e2cab1fda254aa6463595223e523</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_CPP14_CONSTEXPR</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga90927aab45cbfd0e0bd84649d45ec929</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_CPP17</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gab1ee9c1033dc145502da25e970a5954b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_NO_RETURN</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga635f795f6036977415c87d82d385489a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_SIZEOF_WCHAR_T</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga5a044189d5dbf0a9a16c757c61b30122</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_SRCPOS</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga78aabff444ee51f21cdfa81d81a00e64</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_SRCPOS_REL_EMPTY</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga3d922ed3a0447cf1b3fd6d23fe41527e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_SRCPOS_REL_NULLED</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga171353a218bb2e8e9af924c98968b116</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_TMP_SHOW_TYPE_IN_DEBUGGER</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga474671002d5264f4e1851ddb541d848b</anchor>
      <arglist>(type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARNINGS_RESTORE</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga65685ca0f9ee1c3af3bdc8f0df4d431d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARNINGS_ALLOW_TEMPLATE_META_PROGRAMMING</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gad64afad18f0a403ccfc7703caf03a047</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARNINGS_UNINITIALIZED_OFF</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga25e88e49df3bbf7266e602b7abf62b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARNINGS_OVERLOAD_VIRTUAL_OFF</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gae0b01789678bd95eb30cf96f7806c084</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARNINGS_MACRO_NOT_USED_OFF</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gae1f79630f149afe2900be8ddc95be90b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARNINGS_ALLOW_SPARSE_ENUM_SWITCH</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga990f89d9997c78748ad4859b52810212</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARNINGS_ALLOW_BITWISE_SWITCH</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga47068005503397453b64e89db03bd3e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_FALLTHROUGH</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga1518475780abb680e932a6c564e05fd4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>process.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/system/</path>
    <filename>process_8hpp</filename>
    <class kind="class">aworx::lib::system::ProcessInfo</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::system</namespace>
    <member kind="typedef">
      <type>aworx::lib::system::ProcessInfo</type>
      <name>ProcessInfo</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a8644368b56cf61a16e37300584a1d4e2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>qt.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/compatibility/</path>
    <filename>qt_8hpp</filename>
    <class kind="struct">aworx::lib::strings::thirdparty::qt::T_Apply&lt; QByteArray &gt;</class>
    <class kind="struct">aworx::lib::strings::thirdparty::qt::T_Apply&lt; QChar &gt;</class>
    <class kind="struct">aworx::lib::strings::thirdparty::qt::T_Apply&lt; QString &gt;</class>
    <class kind="struct">aworx::lib::strings::thirdparty::qt::T_Apply&lt; QVector&lt; uint &gt; &gt;</class>
    <class kind="struct">aworx::lib::strings::thirdparty::qt::T_String&lt; QByteArray &gt;</class>
    <class kind="struct">aworx::lib::strings::thirdparty::qt::T_String&lt; QLatin1String &gt;</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::boxing</namespace>
    <namespace>aworx::lib::boxing::thirdparty</namespace>
    <namespace>aworx::lib::boxing::thirdparty::qt</namespace>
    <namespace>aworx::lib::strings</namespace>
    <namespace>aworx::lib::strings::thirdparty</namespace>
    <namespace>aworx::lib::strings::thirdparty::qt</namespace>
    <member kind="function">
      <type>void</type>
      <name>InitQTString</name>
      <anchorfile>namespaceaworx_1_1lib_1_1boxing.html</anchorfile>
      <anchor>abb1411d8d90e41eb7a84088c30da5011</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString &amp;</type>
      <name>ToQString</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1qt.html</anchorfile>
      <anchor>a883339efff1e4df28fc0eb60616c1a60</anchor>
      <arglist>(const String &amp;as, QString &amp;target, integer regionStart, integer regionLength=CString::MaxLen, lang::CurrentData targetData=lang::CurrentData::Clear)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>ToQString</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1qt.html</anchorfile>
      <anchor>a54b6094a3ee0fec23494090e4c88fe17</anchor>
      <arglist>(const String &amp;as, integer regionStart, integer regionLength=CString::MaxLen)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>ToQString</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1qt.html</anchorfile>
      <anchor>a4595248eca789097831f7ed447676505</anchor>
      <arglist>(const String &amp;as)</arglist>
    </member>
    <member kind="function">
      <type>QString &amp;</type>
      <name>ToQString</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1qt.html</anchorfile>
      <anchor>a9ccc80cd8870d752be0a0a05e47aa1cf</anchor>
      <arglist>(const String &amp;as, QString &amp;target, lang::CurrentData targetData=lang::CurrentData::Clear)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>regexmatcher.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/strings/util/</path>
    <filename>regexmatcher_8hpp</filename>
    <class kind="class">aworx::lib::strings::util::RegexMatcher</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::strings</namespace>
    <namespace>aworx::lib::strings::util</namespace>
    <member kind="typedef">
      <type>aworx::lib::strings::util::RegexMatcher</type>
      <name>RegexMatcher</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>afad591fcfec5100ba9ae2286c55500e5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>report.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/lang/</path>
    <filename>report_8hpp</filename>
    <class kind="class">aworx::lib::lang::Report::Message</class>
    <class kind="class">aworx::lib::lang::Report</class>
    <class kind="class">aworx::lib::lang::ReportWriter</class>
    <class kind="class">aworx::lib::lang::ReportWriterStdIO</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::lang</namespace>
    <namespace>aworx::lib::strings</namespace>
    <namespace>aworx::lib::threads</namespace>
  </compound>
  <compound kind="file">
    <name>resourcedtupleloader.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/lang/</path>
    <filename>resourcedtupleloader_8hpp</filename>
    <includes id="tokenizer_8hpp" name="tokenizer.hpp" local="yes" imported="no">alib/strings/util/tokenizer.hpp</includes>
    <includes id="substring_8hpp" name="substring.hpp" local="yes" imported="no">alib/strings/substring.hpp</includes>
    <class kind="class">aworx::lib::lang::ResourcedTupleLoader</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::lang</namespace>
  </compound>
  <compound kind="file">
    <name>resources.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/lang/</path>
    <filename>resources_8hpp</filename>
    <includes id="memoryblocks_8hpp" name="memoryblocks.hpp" local="yes" imported="no">alib/util/memoryblocks.hpp</includes>
    <class kind="class">aworx::lib::lang::Resources</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::config</namespace>
    <namespace>aworx::lib::lang</namespace>
    <namespace>aworx::lib::threads</namespace>
  </compound>
  <compound kind="file">
    <name>resourcestring.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/strings/</path>
    <filename>resourcestring_8hpp</filename>
    <class kind="struct">aworx::lib::strings::ResourceString</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::strings</namespace>
    <member kind="typedef">
      <type>aworx::lib::strings::ResourceString</type>
      <name>ResourceString</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a187e8487d31039acc3213da6a0b33c8b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>rtti.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/lang/</path>
    <filename>rtti_8hpp</filename>
    <class kind="class">aworx::lib::debug::TypeDemangler</class>
    <class kind="struct">aworx::lib::lang::detail::WrappedTypeInfoHasher</class>
    <class kind="struct">aworx::lib::lang::detail::WrappedTypeInfoPredEqualTo</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::debug</namespace>
    <namespace>aworx::lib::lang</namespace>
    <namespace>aworx::lib::lang::detail</namespace>
    <member kind="typedef">
      <type>std::unordered_map&lt; lib::lang::detail::WrappedTypeInfo, T, lib::lang::detail::WrappedTypeInfoHasher, lib::lang::detail::WrappedTypeInfoPredEqualTo &gt;</type>
      <name>TypeMap</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ac6a830d17aea9f0c590128b88affdc5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::reference_wrapper&lt; const std::type_info &gt;</type>
      <name>WrappedTypeInfo</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang_1_1detail.html</anchorfile>
      <anchor>ae6fadb29df248d69ddb96925f43f126d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>scopedump.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alox/core/</path>
    <filename>scopedump_8hpp</filename>
    <includes id="alox_8hpp" name="alox.hpp" local="yes" imported="no">alox/alox.hpp</includes>
    <includes id="scopestore_8hpp" name="scopestore.hpp" local="yes" imported="no">scopestore.hpp</includes>
    <class kind="class">aworx::lox::core::ScopeDump</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lox</namespace>
    <namespace>aworx::lox::core</namespace>
  </compound>
  <compound kind="file">
    <name>scopeinfo.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alox/core/</path>
    <filename>scopeinfo_8hpp</filename>
    <includes id="alox_8hpp" name="alox.hpp" local="yes" imported="no">alox/alox.hpp</includes>
    <includes id="ticks_8hpp" name="ticks.hpp" local="yes" imported="no">alib/time/ticks.hpp</includes>
    <includes id="directory_8hpp" name="directory.hpp" local="yes" imported="no">alib/system/directory.hpp</includes>
    <class kind="struct">aworx::lox::core::ScopeInfo::Scope</class>
    <class kind="class">aworx::lox::core::ScopeInfo</class>
    <class kind="struct">aworx::lox::core::ScopeInfo::SourceFile</class>
    <class kind="struct">aworx::lox::core::ScopeInfo::SourcePathTrimRule</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lox</namespace>
    <namespace>aworx::lox::core</namespace>
  </compound>
  <compound kind="file">
    <name>scopestore.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alox/core/</path>
    <filename>scopestore_8hpp</filename>
    <includes id="alox_8hpp" name="alox.hpp" local="yes" imported="no">alox/alox.hpp</includes>
    <includes id="stringtree_8hpp" name="stringtree.hpp" local="yes" imported="no">alib/util/stringtree.hpp</includes>
    <class kind="class">aworx::lox::core::ScopeStore</class>
    <class kind="class">aworx::lox::core::ScopeStoreType</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lox</namespace>
    <namespace>aworx::lox::core</namespace>
  </compound>
  <compound kind="file">
    <name>simpletext.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/strings/format/</path>
    <filename>simpletext_8hpp</filename>
    <includes id="formatterpythonstyle_8hpp" name="formatterpythonstyle.hpp" local="yes" imported="no">alib/strings/format/formatterpythonstyle.hpp</includes>
    <class kind="class">aworx::lib::strings::format::SimpleText</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::lang</namespace>
    <namespace>aworx::lib::strings</namespace>
    <namespace>aworx::lib::strings::format</namespace>
    <member kind="typedef">
      <type>aworx::lib::strings::format::SimpleText</type>
      <name>SimpleText</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ae2181ebba476f42e5f64541c40880913</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>singleton.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/lang/</path>
    <filename>singleton_8hpp</filename>
    <class kind="class">aworx::lib::lang::Singleton</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::debug</namespace>
    <namespace>aworx::lib::lang</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_FEAT_SINGLETON_MAPPED</name>
      <anchorfile>group__GrpALibCodeSelectorSymbols.html</anchorfile>
      <anchor>ga52f1ecb3310c948fcca7e0f9b706a495</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_FEAT_SINGLETON_MAPPED_OFF</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>gadd3d837a0c45194bd9d43af25c348e46</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_FEAT_SINGLETON_MAPPED_ON</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>ga854258c7143e2ab67fbd0e5abb7850dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::Singleton&lt; T &gt;</type>
      <name>Singleton</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a853db7b4d3eea2d12c2aef317b6110ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>DeleteSingletons</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a20cbd716cfc046a49f72978689279f29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API std::vector&lt; std::pair&lt; const std::type_info *, void * &gt; &gt;</type>
      <name>GetSingletons</name>
      <anchorfile>namespaceaworx_1_1lib_1_1debug.html</anchorfile>
      <anchor>afb66ffb4ac637d163d0d829db7a408e9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>smartlock.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/threads/</path>
    <filename>smartlock_8hpp</filename>
    <includes id="threadlock_8hpp" name="threadlock.hpp" local="yes" imported="no">alib/threads/threadlock.hpp</includes>
    <class kind="class">aworx::lib::threads::SmartLock</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::threads</namespace>
    <member kind="typedef">
      <type>aworx::lib::threads::SmartLock</type>
      <name>SmartLock</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>aee1cd004a3010e8ee798517d96c1ffca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>spaces.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/strings/util/</path>
    <filename>spaces_8hpp</filename>
    <class kind="class">aworx::lib::strings::util::Spaces</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::strings</namespace>
    <namespace>aworx::lib::strings::util</namespace>
    <member kind="typedef">
      <type>aworx::lib::strings::util::Spaces</type>
      <name>Spaces</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a9f69e16cb165fb1d0263890b165a5613</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>std_iostream.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/compatibility/</path>
    <filename>std__iostream_8hpp</filename>
    <class kind="class">aworx::lib::strings::thirdparty::std::ReadLineFromIStream</class>
    <class kind="struct">aworx::lib::strings::thirdparty::std::T_Apply&lt; thirdparty::std::ReadLineFromIStream &gt;</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::strings</namespace>
    <namespace>aworx::lib::strings::thirdparty</namespace>
    <namespace>aworx::lib::strings::thirdparty::std</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1std.html</anchorfile>
      <anchor>a87fbb8b7085a135eb378c01ad642ca62</anchor>
      <arglist>(std::ostream &amp;stream, const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream *</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1std.html</anchorfile>
      <anchor>a711970990a045b7ee4c78c43968db751</anchor>
      <arglist>(std::ostream *stream, const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1std.html</anchorfile>
      <anchor>a7a8be392083299363a46570e0b11d422</anchor>
      <arglist>(std::ostream &amp;stream, const TApplicable &amp;applicable)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream *</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1std.html</anchorfile>
      <anchor>ad9692972d4d2aac14983aca97a761311</anchor>
      <arglist>(std::ostream *stream, const TApplicable &amp;applicable)</arglist>
    </member>
    <member kind="function">
      <type>std::istream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1std.html</anchorfile>
      <anchor>a9651871e7daa6d9fc7cf18c22b11daa4</anchor>
      <arglist>(std::istream &amp;stream, AString &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>std::istream *</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1std.html</anchorfile>
      <anchor>a36c110c0bad310bc926dd4ba78bbb719</anchor>
      <arglist>(std::istream *stream, AString &amp;string)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>std_string.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/compatibility/</path>
    <filename>std__string_8hpp</filename>
    <class kind="struct">aworx::lib::strings::thirdparty::std::T_Apply&lt; std::u16string &gt;</class>
    <class kind="struct">aworx::lib::strings::thirdparty::std::T_Apply&lt; std::u32string &gt;</class>
    <class kind="struct">aworx::lib::strings::thirdparty::std::T_Apply&lt; std::wstring &gt;</class>
    <class kind="struct">aworx::lib::strings::thirdparty::std::T_String&lt; std::string &gt;</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::boxing</namespace>
    <namespace>aworx::lib::boxing::thirdparty</namespace>
    <namespace>aworx::lib::boxing::thirdparty::std</namespace>
    <namespace>aworx::lib::strings</namespace>
    <namespace>aworx::lib::strings::thirdparty</namespace>
    <namespace>aworx::lib::strings::thirdparty::std</namespace>
    <member kind="function">
      <type>void</type>
      <name>InitStdString</name>
      <anchorfile>namespaceaworx_1_1lib_1_1boxing_1_1thirdparty_1_1std.html</anchorfile>
      <anchor>a0084b29e1444f1d45bb9801d955ecdd3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string &amp;</type>
      <name>ToStdString</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1std.html</anchorfile>
      <anchor>a6a37f6748b43c7e24e2e203c8aaab743</anchor>
      <arglist>(const String &amp;src, std::string &amp;target, integer regionStart, integer regionLength=CString::MaxLen, lang::CurrentData targetData=lang::CurrentData::Clear)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ToStdString</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1std.html</anchorfile>
      <anchor>a2b956a880e23a42e5d82f3dcdc9d2291</anchor>
      <arglist>(const String &amp;src, integer regionStart, integer regionLength=CString::MaxLen)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ToStdString</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1std.html</anchorfile>
      <anchor>a018c67f6c1944d5152b682853b40984c</anchor>
      <arglist>(const String &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>std::string &amp;</type>
      <name>ToStdString</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1std.html</anchorfile>
      <anchor>ac781da93eaa9048f371f87be40ff7ac6</anchor>
      <arglist>(const String &amp;as, std::string &amp;target, lang::CurrentData targetData=lang::CurrentData::Clear)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>std_vector.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/compatibility/</path>
    <filename>std__vector_8hpp</filename>
    <class kind="struct">aworx::lib::strings::thirdparty::std::T_Apply&lt; std::vector&lt; char16_t &gt; &gt;</class>
    <class kind="struct">aworx::lib::strings::thirdparty::std::T_Apply&lt; std::vector&lt; char32_t &gt; &gt;</class>
    <class kind="struct">aworx::lib::strings::thirdparty::std::T_Apply&lt; std::vector&lt; wchar_t &gt; &gt;</class>
    <class kind="struct">aworx::lib::strings::thirdparty::std::T_String&lt; std::vector&lt; char &gt; &gt;</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::strings</namespace>
    <namespace>aworx::lib::strings::thirdparty</namespace>
    <namespace>aworx::lib::strings::thirdparty::std</namespace>
    <member kind="function">
      <type>std::vector&lt; char &gt; &amp;</type>
      <name>ToStdVector</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1std.html</anchorfile>
      <anchor>a0181616105e504600b35e0e356927a96</anchor>
      <arglist>(const String &amp;src, std::vector&lt; char &gt; &amp;target, integer regionStart, integer regionLength=CString::MaxLen, lang::CurrentData targetData=lang::CurrentData::Clear)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; char &gt;</type>
      <name>ToStdVector</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1std.html</anchorfile>
      <anchor>a411b4ca112d2ff50ca612f83367430fd</anchor>
      <arglist>(const String &amp;src, integer regionStart, integer regionLength=CString::MaxLen)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; char &gt;</type>
      <name>ToStdVector</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1std.html</anchorfile>
      <anchor>a59a9d0a34f4cb974f46885790649fd84</anchor>
      <arglist>(const String &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; char &gt; &amp;</type>
      <name>ToStdVector</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1std.html</anchorfile>
      <anchor>a411f0b04841847a3e326260d70c72f48</anchor>
      <arglist>(const String &amp;src, std::vector&lt; char &gt; &amp;target, lang::CurrentData targetData=lang::CurrentData::Clear)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>stopwatch.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/time/</path>
    <filename>stopwatch_8hpp</filename>
    <includes id="timestamp_8hpp" name="timestamp.hpp" local="yes" imported="no">alib/time/timestamp.hpp</includes>
    <class kind="class">aworx::lib::time::StopWatch</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::time</namespace>
    <member kind="typedef">
      <type>aworx::lib::time::StopWatch</type>
      <name>StopWatch</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a0a33224c071d1e29e6169e93249001e6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>string.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/strings/</path>
    <filename>string_8hpp</filename>
    <class kind="class">aworx::lib::strings::String::RandomAccessIteratorBase</class>
    <class kind="struct">aworx::lib::strings::std_StringEquals</class>
    <class kind="struct">aworx::lib::strings::std_StringEqualsIgnoreCase</class>
    <class kind="struct">aworx::lib::strings::std_StringHash</class>
    <class kind="struct">aworx::lib::strings::std_StringHashIgnoreCase</class>
    <class kind="class">aworx::lib::strings::String</class>
    <class kind="struct">aworx::lib::strings::T_String</class>
    <class kind="struct">aworx::lib::strings::T_String&lt; char * &gt;</class>
    <class kind="struct">aworx::lib::strings::T_String&lt; char const * &gt;</class>
    <class kind="struct">aworx::lib::strings::T_StringLiteral</class>
    <class kind="struct">aworx::lib::strings::T_StringLiteral&lt; char[TCapacity]&gt;</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::strings</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_DEBUG_STRINGS</name>
      <anchorfile>group__GrpALibCodeSelectorSymbols.html</anchorfile>
      <anchor>gae0e4a87e11482df5ecd72f6a2a648f05</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_DEBUG_STRINGS_OFF</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>gaffe4a144b888498c743d7b81d983d84b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_DEBUG_STRINGS_ON</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>ga2992625b88f70b1e01564be4e7eba2fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_STRING_CONSTRUCTOR_FIX</name>
      <anchorfile>group__GrpALibStringsMacros.html</anchorfile>
      <anchor>ga58ee5d0225baf5d3ad3d3592cb6a7a4e</anchor>
      <arglist>(TYPE)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_STRING_DBG_CHK</name>
      <anchorfile>group__GrpALibStringsMacros.html</anchorfile>
      <anchor>gae7492253da37c76b118d446494f1f632</anchor>
      <arglist>(instance)</arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::String</type>
      <name>String</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ad13481d84c6e592a41d07c64f747c95d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unordered_map&lt; String, TValue, lib::strings::std_StringHash, lib::strings::std_StringEquals &gt;</type>
      <name>UnorderedStringMap</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>acfa5286c9924bb6d00f350f7bfd97b5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unordered_map&lt; String, TValue, lib::strings::std_StringHashIgnoreCase, lib::strings::std_StringEqualsIgnoreCase &gt;</type>
      <name>UnorderedStringMapIgnoreCase</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a28589e749d035b0fc469513c5f3346b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr lib::strings::String</type>
      <name>EmptyString</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a3372961a8fb9d30455267babb4e6c26c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr lib::strings::String</type>
      <name>NullString</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ab1ed6dcfbe4628dccefbdb5633b1bf01</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>stringboxing.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/strings/boxing/</path>
    <filename>stringboxing_8hpp</filename>
    <class kind="class">aworx::lib::strings::boxing::IApply</class>
    <class kind="class">aworx::lib::strings::boxing::IApply_BoxedAs_TApplicable</class>
    <class kind="class">aworx::lib::strings::boxing::IApply_TApplicable</class>
    <class kind="class">aworx::lib::strings::boxing::IApply_Tchar16_tArr</class>
    <class kind="class">aworx::lib::strings::boxing::IApply_Tchar32_tArr</class>
    <class kind="class">aworx::lib::strings::boxing::IApply_TcharArr</class>
    <class kind="class">aworx::lib::strings::boxing::IApply_Twchar_tArr</class>
    <class kind="class">aworx::lib::strings::boxing::IFormat</class>
    <class kind="class">aworx::lib::strings::boxing::IIsLess_Tchar_arr</class>
    <class kind="class">aworx::lib::strings::util::StringTable</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; lib::boxing::Box &gt;</class>
    <class kind="struct">aworx::lib::strings::boxing::T_Boxing&lt; aworx::lib::strings::PreallocatedString&lt; TCapacity &gt; &gt;</class>
    <class kind="struct">aworx::lib::strings::boxing::T_Boxing&lt; strings::StringLiteral&lt; TLength &gt; &gt;</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::strings</namespace>
    <namespace>aworx::lib::strings::applyto</namespace>
    <namespace>aworx::lib::strings::boxing</namespace>
    <namespace>aworx::lib::strings::util</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_BOXING_DEFINE_IAPPLY_FOR_APPLICABLE_TYPE</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gafe870d103ad063d0ad15942df79d75ff</anchor>
      <arglist>(TApplicable)</arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::boxing::IApply</type>
      <name>IApply</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>af231913c4b88a341cf804f9fedf38adb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::Substring</type>
      <name>Substring</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>afed2e22d908094b0badbf8ac4d5f3900</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_BOXING_DEFINE_IAPPLY_FOR_APPLICABLE_TYPE</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gafe870d103ad063d0ad15942df79d75ff</anchor>
      <arglist>(TApplicable)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>stringlib.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/strings/</path>
    <filename>stringlib_8hpp</filename>
    <class kind="class">aworx::lib::strings::Strings</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::strings</namespace>
    <member kind="typedef">
      <type>aworx::lib::strings::Strings</type>
      <name>Strings</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a3c0dd4e93e0c8297a10ca98eff7e4ea7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>stringliteral.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/strings/</path>
    <filename>stringliteral_8hpp</filename>
    <class kind="class">aworx::lib::strings::StringLiteral</class>
    <class kind="struct">aworx::lib::strings::T_StringLiteral&lt; StringLiteral&lt; TLength &gt; &gt;</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::strings</namespace>
    <member kind="typedef">
      <type>aworx::lib::strings::StringLiteral&lt; TLength &gt;</type>
      <name>SLiteral</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>af631a26bf70ad6d6143973fadf779747</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr lib::strings::StringLiteral&lt; 4 &gt;</type>
      <name>DefaultWhitespaces</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a5feaaf6a8fb11e8ebbb0013ec9f27b01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr lib::strings::StringLiteral&lt; 2 &gt;</type>
      <name>NewLine</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>aa10e6e7d79efb2051b5e761d6980ab6e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>stringtree.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/util/</path>
    <filename>stringtree_8hpp</filename>
    <includes id="substring_8hpp" name="substring.hpp" local="yes" imported="no">alib/strings/substring.hpp</includes>
    <class kind="class">aworx::lib::util::StringTree::Cursor</class>
    <class kind="struct">aworx::lib::util::StringTree::Node</class>
    <class kind="struct">aworx::lib::util::StringTree::Walker::RecursionData</class>
    <class kind="struct">aworx::lib::util::StringTree::StdIterator::RecursionDataIt</class>
    <class kind="struct">aworx::lib::util::StringTree::Walker::Sorter</class>
    <class kind="class">aworx::lib::util::StringTree::StdIterator</class>
    <class kind="class">aworx::lib::util::StringTree</class>
    <class kind="struct">aworx::lib::util::StringTreeConstKeyAllocator</class>
    <class kind="struct">aworx::lib::util::StringTreeDefaultKeyAllocator</class>
    <class kind="class">aworx::lib::util::StringTree::Walker</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::util</namespace>
    <member kind="typedef">
      <type>aworx::lib::util::StringTree&lt; T, TKeyAllocator &gt;</type>
      <name>StringTree</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a3f529e3fce337b034a15d71babf9f109</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>StringTree&lt; T &gt;::StdIterator</type>
      <name>begin</name>
      <anchorfile>namespaceaworx_1_1lib_1_1util.html</anchorfile>
      <anchor>af73184a6ae2b740fe9730cca5b9ff634</anchor>
      <arglist>(StringTree&lt; T &gt; &amp;stringTree)</arglist>
    </member>
    <member kind="function">
      <type>StringTree&lt; T &gt;::StdIterator</type>
      <name>begin</name>
      <anchorfile>namespaceaworx_1_1lib_1_1util.html</anchorfile>
      <anchor>a1ba874bdd6acd22b07df2bcdbf728b73</anchor>
      <arglist>(typename StringTree&lt; T &gt;::Cursor &amp;cursor)</arglist>
    </member>
    <member kind="function">
      <type>StringTree&lt; T &gt;::StdIterator</type>
      <name>end</name>
      <anchorfile>namespaceaworx_1_1lib_1_1util.html</anchorfile>
      <anchor>ab0061f76ea18a421f8c29e3abfeb3c15</anchor>
      <arglist>(StringTree&lt; T &gt; &amp;stringTree)</arglist>
    </member>
    <member kind="function">
      <type>StringTree&lt; T &gt;::StdIterator</type>
      <name>end</name>
      <anchorfile>namespaceaworx_1_1lib_1_1util.html</anchorfile>
      <anchor>acb2592125edad411aac356fa3fdf5dfb</anchor>
      <arglist>(typename StringTree&lt; T &gt;::Cursor &amp;cursor)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>stringtuples.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/strings/util/</path>
    <filename>stringtuples_8hpp</filename>
    <includes id="memoryblocks_8hpp" name="memoryblocks.hpp" local="yes" imported="no">alib/util/memoryblocks.hpp</includes>
    <class kind="class">aworx::lib::strings::util::StringTable</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::strings</namespace>
    <namespace>aworx::lib::strings::util</namespace>
    <member kind="typedef">
      <type>aworx::lib::strings::util::StringTable&lt; TAssociatedTypes... &gt;</type>
      <name>StringTable</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a3e978518419b8c970cdfd8a30af02250</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::tuple&lt; T_TupleTypes... &gt; const  *</type>
      <name>FindStringInTupleVector</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1util.html</anchorfile>
      <anchor>a6a099c1324d20ad8751ca4e2f0fb5e36</anchor>
      <arglist>(const std::vector&lt; std::tuple&lt; T_TupleTypes... &gt;&gt; &amp;haystack, const String &amp;needle)</arglist>
    </member>
    <member kind="function">
      <type>std::tuple&lt; T_TupleTypes... &gt; const  *</type>
      <name>FindStringStartInTupleVector</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1util.html</anchorfile>
      <anchor>a52fca63b4787aa77d8a3ebafc567c4fa</anchor>
      <arglist>(const std::vector&lt; std::tuple&lt; T_TupleTypes... &gt;&gt; &amp;haystack, const String &amp;needle)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>substring.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/strings/</path>
    <filename>substring_8hpp</filename>
    <includes id="enumbitwise_8hpp" name="enumbitwise.hpp" local="yes" imported="no">alib/lang/enumbitwise.hpp</includes>
    <class kind="class">aworx::lib::strings::Substring</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::strings</namespace>
  </compound>
  <compound kind="file">
    <name>systemlib.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/system/</path>
    <filename>systemlib_8hpp</filename>
    <includes id="exception_8hpp" name="exception.hpp" local="yes" imported="no">alib/lang/exception.hpp</includes>
    <class kind="class">aworx::lib::system::System</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::system</namespace>
    <member kind="typedef">
      <type>aworx::lib::system::System</type>
      <name>System</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>aea0af9d6b00ede1a16d0af24fdaeebe0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Exceptions</name>
      <anchorfile>namespaceaworx_1_1lib_1_1system.html</anchorfile>
      <anchor>a8d828d7f6e0c02a7815c7e1308d3b06e</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06eae0aa021e21dddbd6d8cecec71e9cf564">OK</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ea902b0d55fddef6f8d651fe1035b7d4bd">Error</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06eaea1776502570f06ddc0569c079cb9ee2">FileExists</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ea5d0744802b24f44a161d350c25d76c7b">InvalidPath</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SystemErrors</name>
      <anchorfile>namespaceaworx_1_1lib_1_1system.html</anchorfile>
      <anchor>ac5e2a99610cedf5e55a4c97dba96bdff</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffae0aa021e21dddbd6d8cecec71e9cf564">OK</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa144cdbbe16ee31d52ba589d21df5a3b1">eperm</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa651fad99b40e827d58cdda0da4222bca">enoent</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa492d011a404eb9c5ac1190f8377662b0">esrch</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa45e9c70571d7de42ebaf26d7e58eeb0f">eintr</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa6a76c3e6f07462642ad175aa4b5043f9">eio</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa835f4221d04ed46514e4135dec17f2fd">enxio</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffab97da35a8541a71c5e1c55889c5cf3ea">e2Big</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa987201bd25717c8f04337d5b266dcb87">enoexec</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffaee434be093f39e75d31436d60aae077d">ebadf</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffab0b408b2d3a730224511eac6025cbb2b">echild</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffaaf9621315249abf16f1b6a4c9c55723b">eagain</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffaf030523857507f49aef7298e6bb28eb1">enomem</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa4b3018e9aae150fb48165bb6d703cea9">eacces</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffaa13a776763fcbe732ddd9fe7ad367994">efault</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffac3b8b3bd1b370b9f8af89c1f8096e4ef">ebusy</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa2762fb93c26068508d953b547b2b8b37">eexist</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa2b29e27615fc0b95ea8e3f703a614260">exdev</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa4730e22320f57db9887f45244ed2d4ef">enodev</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa666e7a56f93f80288edd2a9b5f7e22b5">enotdir</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa32a9e84c0daf2fea937b130be09f33e1">eisdir</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffab6881e6ad5351063e8dd0b41f0996fcd">enfile</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa2295a2e5145002d6d3aed06c8e851f70">emfile</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa8747ad866e3a6fc1786cdba9a72e10be">enotty</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffac5708577193308e721bb90c2b55e0acc">efbig</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffad18561a76d166454e4e38120e15f1fda">enospc</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa9d8518f56ff41aaca687cf2d02b30a15">espipe</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa4ea4b6e51a47215d9edb09097a9606da">erofs</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa790cec6c5eb92e199b3195c7debd1cb5">emlink</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffadeb12ada0a6c119cf8af78bb405ab2c3">epipe</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa217303e52413d95657c2ef519d5791db">edom</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffab4f8c19387e79c8501e55ec99a9a5fb0">edeadlk</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa1fb576a8ae932909526cffc8a805fd72">enametoolong</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffad4de2ab7e2063e016221633d314f4f61">enolck</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa1dc4ecf9174aa512cc8ff7f8875d7158">enosys</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa3fa04047ab83ac9cd3daba5c87aa3586">enotempty</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa4988be8c790d29e329bb2f7c2ecc7ff7">einval</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa4c17818f7e8fcc3d3cea44bc3c91e364">erange</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa071dd90ed61cf76b3026540192abf23b">eilseq</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffaedbaa1730caa5eea1df7ae946824cf27">struncate</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa8e8c1ece7b69f4974e87cd4decd8e2b0">eaddrinuse</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa5a0f5972f5bc4823d6ad1874015f06b1">eaddrnotavail</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa37aef84352292e809051ba4a51fbe7a7">eafnosupport</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa66078e177bd6c68722c5af3bf290c52e">ealready</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa6f949c91f18ae846f9ae4b08e521f2e2">ebadmsg</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa5f398386414528e56810b9f43570daee">ecanceled</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffad8020b7703a26f07b112d5a118186783">econnaborted</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa49aae993a5704a913e8b7bad322cc0c8">econnrefused</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa6f03152d2fe0514169b63193b8a21f4a">econnreset</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa9fa835f396769ec4709a11d650b81c89">edestaddrreq</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa621eb182b9c15d8f87eb9fcad47008dc">ehostunreach</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffadc62d8fc489bccf054b5bd219f68bf78">eidrm</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffae433715bb19f085af59c8c0adc192829">einprogress</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffaf6132b5977f9844d1418bfdc299c07fd">eisconn</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffaad2a3bc401b4954a35aacc4e36bcbdf0">eloop</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa2ea08a32063dbafda965dc6eb8ae1dad">emsgsize</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffad0d9b865c330f1976ce2b44706599d4e">enetdown</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffab3dc9ad0b96d1e21379ffd4c9248421b">enetreset</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa1805b948db8bad5120c958ec33b92d6d">enetunreach</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa793be526100175d963e06389a69bc42a">enobufs</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa2e5a0a6880831b17434010f6fd9c8980">enodata</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa67b51279e0577435e4e02627a9a68221">enolink</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffac68d8bef2e6de3f9ec8e3d6be56a335f">enomsg</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa674810b90f448a5127229e3f539708bb">enoprotoopt</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa0ed1967c62d713085532d79de1128b9b">enosr</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa840425b303806c47ee2d3def756e46e7">enostr</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa16cc8bc98dfa535c17b19dfca7c78294">enotconn</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa93a963911f72bceb1ed26d6d37db8cff">enotrecoverable</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa36ab7d4fc77cc4dd987e9442bcfc8f68">enotsock</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa07e2e03577b3a09134f56b4194378a2a">enotsup</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa0382d90df770146a15c6ba1b83e8c917">eopnotsupp</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa03172e9d1cc2c7b5fd98dcd3eaca97cb">eother</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa365ebcd39800f4957b513033efbee772">eoverflow</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa45dc36effb04b496df5242d651da5c81">eownerdead</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffab6d35f0f6710e069ae9b6aaf7d218a6f">eproto</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa0b0c45cf902d84caaf7fb6b35ddb34bb">eprotonosupport</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa638feab09007bea4e9b56c3e50a44a91">eprototype</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa4c16e8900ba303fe23d4cc417cab19ed">etime</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffabac9b3bb23cc7990ef5f1438e150112f">etimedout</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa143017ee04d375680dad9f8efbe350c9">etxtbsy</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa718680b066bd7f5bbf6725952fbd2cd8">ewouldblock</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>textfilelogger.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alox/loggers/</path>
    <filename>textfilelogger_8hpp</filename>
    <includes id="alox_8hpp" name="alox.hpp" local="yes" imported="no">alox/alox.hpp</includes>
    <includes id="plaintextlogger_8hpp" name="plaintextlogger.hpp" local="yes" imported="no">alox/core/textlogger/plaintextlogger.hpp</includes>
    <class kind="class">aworx::lox::loggers::TextFileLogger</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lox</namespace>
    <namespace>aworx::lox::loggers</namespace>
    <member kind="typedef">
      <type>aworx::lox::loggers::TextFileLogger</type>
      <name>TextFileLogger</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ae64ac3b33c7c180e92559a869977fda0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>textlogger.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alox/core/textlogger/</path>
    <filename>textlogger_8hpp</filename>
    <includes id="alox_8hpp" name="alox.hpp" local="yes" imported="no">alox/alox.hpp</includes>
    <includes id="logger_8hpp" name="logger.hpp" local="yes" imported="no">alox/core/logger.hpp</includes>
    <includes id="calendartime_8hpp" name="calendartime.hpp" local="yes" imported="no">alib/time/calendartime.hpp</includes>
    <includes id="formatterjavastyle_8hpp" name="formatterjavastyle.hpp" local="yes" imported="no">alib/strings/format/formatterjavastyle.hpp</includes>
    <includes id="formatterpythonstyle_8hpp" name="formatterpythonstyle.hpp" local="yes" imported="no">alib/strings/format/formatterpythonstyle.hpp</includes>
    <class kind="class">aworx::lox::core::textlogger::MetaInfo</class>
    <class kind="class">aworx::lox::core::textlogger::ObjectConverter</class>
    <class kind="class">aworx::lox::core::textlogger::StandardConverter</class>
    <class kind="class">aworx::lox::core::textlogger::TextLogger</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::strings</namespace>
    <namespace>aworx::lox</namespace>
    <namespace>aworx::lox::core</namespace>
    <namespace>aworx::lox::core::textlogger</namespace>
    <member kind="typedef">
      <type>aworx::lox::core::textlogger::TextLogger</type>
      <name>TextLogger</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a8d1a5942495395f77e31bb5d451c332b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>threadlib.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/threads/</path>
    <filename>threadlib_8hpp</filename>
    <class kind="class">aworx::lib::threads::Runnable</class>
    <class kind="class">aworx::lib::threads::Thread</class>
    <class kind="class">aworx::lib::threads::Threads</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::threads</namespace>
    <member kind="typedef">
      <type>aworx::lib::threads::Runnable</type>
      <name>Runnable</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>af259362a7fa123eef74daaf4036e02a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::threads::Thread</type>
      <name>Thread</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a42fe02133ffe8b203c4aa204d2114d49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int</type>
      <name>NullThreadId</name>
      <anchorfile>namespaceaworx_1_1lib_1_1threads.html</anchorfile>
      <anchor>ab74d46f09db54cfc6e3c0d55baca5bfc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>threadlock.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/threads/</path>
    <filename>threadlock_8hpp</filename>
    <includes id="threadlocknr_8hpp" name="threadlocknr.hpp" local="yes" imported="no">alib/threads/threadlocknr.hpp</includes>
    <includes id="threadlib_8hpp" name="threadlib.hpp" local="yes" imported="no">threadlib.hpp</includes>
    <class kind="class">aworx::lib::threads::ThreadLock</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::threads</namespace>
    <member kind="typedef">
      <type>aworx::lib::threads::ThreadLock</type>
      <name>ThreadLock</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ad941b2cb61bade9aa2478dd063154d33</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>threadlocknr.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/threads/</path>
    <filename>threadlocknr_8hpp</filename>
    <includes id="ownable_8hpp" name="ownable.hpp" local="yes" imported="no">alib/lang/ownable.hpp</includes>
    <class kind="class">aworx::lib::threads::ThreadLockNR</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::threads</namespace>
    <member kind="define">
      <type>#define</type>
      <name>LOCK_HERE</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga551a71d481fdae3cb10d7a61632bc068</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOCK_HERE_WITH</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gae04a994c8182611e544702fea0d2f7c4</anchor>
      <arglist>(lock)</arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::threads::ThreadLockNR</type>
      <name>ThreadLockNR</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>adb7e18c3a3777faf17dde8a543e30a27</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOCK_HERE</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga551a71d481fdae3cb10d7a61632bc068</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOCK_HERE_WITH</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gae04a994c8182611e544702fea0d2f7c4</anchor>
      <arglist>(lock)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ticks.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/time/</path>
    <filename>ticks_8hpp</filename>
    <includes id="timelib_8hpp" name="timelib.hpp" local="yes" imported="no">alib/time/timelib.hpp</includes>
    <class kind="class">aworx::lib::time::IFormat_TTicks</class>
    <class kind="class">aworx::lib::time::Ticks</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::time</namespace>
    <member kind="typedef">
      <type>aworx::lib::time::Ticks</type>
      <name>Ticks</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ad270463709a4ae7e7098df40e803e458</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tickspan.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/time/</path>
    <filename>tickspan_8hpp</filename>
    <includes id="ticks_8hpp" name="ticks.hpp" local="yes" imported="no">alib/time/ticks.hpp</includes>
    <class kind="class">aworx::lib::time::TickSpan</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::time</namespace>
    <member kind="typedef">
      <type>aworx::lib::time::TickSpan</type>
      <name>TickSpan</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a7b85567c52aa0abc2531be7a2a7f887f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tickwatch.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/time/</path>
    <filename>tickwatch_8hpp</filename>
    <includes id="ticks_8hpp" name="ticks.hpp" local="yes" imported="no">alib/time/ticks.hpp</includes>
    <class kind="class">aworx::lib::time::TickWatch</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::time</namespace>
    <member kind="typedef">
      <type>aworx::lib::time::TickWatch</type>
      <name>TickWatch</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a4d4926218d664dabc231ce5cf0c19afc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>timelib.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/time/</path>
    <filename>timelib_8hpp</filename>
    <includes id="substring_8hpp" name="substring.hpp" local="yes" imported="no">alib/strings/substring.hpp</includes>
    <class kind="class">aworx::lib::time::TimeLib</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::time</namespace>
  </compound>
  <compound kind="file">
    <name>timespan.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/time/</path>
    <filename>timespan_8hpp</filename>
    <includes id="timelib_8hpp" name="timelib.hpp" local="yes" imported="no">alib/time/timelib.hpp</includes>
    <class kind="class">aworx::lib::time::TimeSpan</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::time</namespace>
    <member kind="typedef">
      <type>aworx::lib::time::TimeSpan</type>
      <name>TimeSpan</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ac4d5288b8072f0241d0599ff7d61d01a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>timestamp.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/time/</path>
    <filename>timestamp_8hpp</filename>
    <includes id="timespan_8hpp" name="timespan.hpp" local="yes" imported="no">alib/time/timespan.hpp</includes>
    <class kind="class">aworx::lib::time::IFormat_TimeStamp</class>
    <class kind="class">aworx::lib::time::TimeStamp</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::time</namespace>
    <member kind="typedef">
      <type>aworx::lib::time::TimeStamp</type>
      <name>TimeStamp</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a5ace2d97050844fa3fae54664fc60623</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tokenizer.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/strings/util/</path>
    <filename>tokenizer_8hpp</filename>
    <includes id="substring_8hpp" name="substring.hpp" local="yes" imported="no">alib/strings/substring.hpp</includes>
    <class kind="class">aworx::lib::strings::util::Tokenizer</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::strings</namespace>
    <namespace>aworx::lib::strings::util</namespace>
    <member kind="typedef">
      <type>aworx::lib::strings::util::Tokenizer</type>
      <name>Tokenizer</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a2c2d5fb0afae1a62f9a9181e69db8349</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tstring.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/strings/</path>
    <filename>tstring_8hpp</filename>
    <class kind="struct">aworx::lib::strings::T_IsTerminatable</class>
    <class kind="class">aworx::lib::strings::TString</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::strings</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_STRING_DBG_UNTERMINATE</name>
      <anchorfile>group__GrpALibStringsMacros.html</anchorfile>
      <anchor>gacf96023d903e78f3b5d784a799041667</anchor>
      <arglist>(astring, offset)</arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::TString</type>
      <name>TString</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>af01fde7c67b5f30027a4135222bbde31</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>types.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/lang/</path>
    <filename>types_8hpp</filename>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::lang</namespace>
    <namespace>aworx::literals</namespace>
    <member kind="typedef">
      <type>platform_specific</type>
      <name>integer</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a050df5b24462b4a6256f2ed69c6b50ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::integer</type>
      <name>integer</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a2597f1982b18ebe4ea9e55b914bc49b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>platform_specific</type>
      <name>intGap_t</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>af9eb8b6fb1aab7d526e9419b10fd5363</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::intGap_t</type>
      <name>intGap_t</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>adea1bda61bf659bfe398c7f2f13242df</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>platform_specific</type>
      <name>uinteger</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a03b8595314b87c0141d68dc0c312f30e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::uinteger</type>
      <name>uinteger</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>af7f6fc630240316d5f04a4d5d7f331ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>platform_specific</type>
      <name>uintGap_t</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>ae89f60b8bbbc054d70fa7c5b19627b93</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::uintGap_t</type>
      <name>uintGap_t</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a34d1e1a0600952dbf9f562aed36b873f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr aworx::lib::lang::integer</type>
      <name>operator&quot;&quot; _integer</name>
      <anchorfile>namespaceaworx_1_1literals.html</anchorfile>
      <anchor>a4f8aca3025f70df27df088c7fc5b0ee7</anchor>
      <arglist>(unsigned long long int value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>variable.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/config/</path>
    <filename>variable_8hpp</filename>
    <class kind="class">aworx::lib::config::Variable</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::config</namespace>
    <namespace>aworx::lib::strings</namespace>
  </compound>
  <compound kind="file">
    <name>vstudiologger.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alox/loggers/</path>
    <filename>vstudiologger_8hpp</filename>
    <includes id="alox_8hpp" name="alox.hpp" local="yes" imported="no">alox/alox.hpp</includes>
    <includes id="plaintextlogger_8hpp" name="plaintextlogger.hpp" local="yes" imported="no">alox/core/textlogger/plaintextlogger.hpp</includes>
    <class kind="class">aworx::lox::loggers::VStudioLogger</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lox</namespace>
    <namespace>aworx::lox::loggers</namespace>
    <member kind="typedef">
      <type>aworx::lox::loggers::VStudioLogger</type>
      <name>VStudioLogger</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a747899e07def7493ae65c9569a5dc879</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>wildcardmatcher.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alib/strings/util/</path>
    <filename>wildcardmatcher_8hpp</filename>
    <class kind="class">aworx::lib::strings::util::WildcardMatcher</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::lib::strings</namespace>
    <namespace>aworx::lib::strings::util</namespace>
    <member kind="typedef">
      <type>aworx::lib::strings::util::WildcardMatcher</type>
      <name>WildcardMatcher</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ae64489804030f43a3935ba1edb687453</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>windowsconsolelogger.hpp</name>
    <path>/home/a/mnt/dev/A-Worx/ALox/src.cpp/alox/loggers/</path>
    <filename>windowsconsolelogger_8hpp</filename>
    <includes id="alox_8hpp" name="alox.hpp" local="yes" imported="no">alox/alox.hpp</includes>
    <includes id="textlogger_8hpp" name="textlogger.hpp" local="yes" imported="no">alox/core/textlogger/textlogger.hpp</includes>
    <class kind="class">aworx::lox::loggers::WindowsConsoleLogger</class>
    <namespace>aworx</namespace>
    <namespace>aworx::lox</namespace>
    <namespace>aworx::lox::loggers</namespace>
    <member kind="typedef">
      <type>aworx::lox::loggers::WindowsConsoleLogger</type>
      <name>WindowsConsoleLogger</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ad427fd161e0ad8bd4c8835c5a643cc3f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::ALib</name>
    <filename>classaworx_1_1lib_1_1ALib.html</filename>
    <base>aworx::lib::lang::Library</base>
    <member kind="variable">
      <type>threads::SmartLock &amp;</type>
      <name>StdOutputStreamsLock</name>
      <anchorfile>classaworx_1_1lib_1_1ALib.html</anchorfile>
      <anchor>a23d1ec070363dc767181ffab3f064091</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>WaitForKeyPressOnTermination</name>
      <anchorfile>classaworx_1_1lib_1_1ALib.html</anchorfile>
      <anchor>ada43e256e3815ef07e1fa43666e356da</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ALIB_API void</type>
      <name>Sleep</name>
      <anchorfile>classaworx_1_1lib_1_1ALib.html</anchorfile>
      <anchor>a36908c1eede2c297a37d4f1a342d7753</anchor>
      <arglist>(const time::Ticks &amp;ticks)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ALIB_API void</type>
      <name>SleepMicros</name>
      <anchorfile>classaworx_1_1lib_1_1ALib.html</anchorfile>
      <anchor>ab21b7edf8a1f0a583007eed2b5e5f55c</anchor>
      <arglist>(int microseconds)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ALIB_API void</type>
      <name>SleepMillis</name>
      <anchorfile>classaworx_1_1lib_1_1ALib.html</anchorfile>
      <anchor>a46ca48bff03e493e221903c050512271</anchor>
      <arglist>(int milliseconds)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ALIB_API void</type>
      <name>SleepNanos</name>
      <anchorfile>classaworx_1_1lib_1_1ALib.html</anchorfile>
      <anchor>a02a6f4bbef88d077cf5da8c145299d37</anchor>
      <arglist>(int nanoseconds)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>CheckCompatibility</name>
      <anchorfile>classaworx_1_1lib_1_1ALib.html</anchorfile>
      <anchor>a4e067ec1883226d1eed79b485be578b2</anchor>
      <arglist>(int alibVersion, uint64_t compilationFlags)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API bool</type>
      <name>HasConsoleWindow</name>
      <anchorfile>classaworx_1_1lib_1_1ALib.html</anchorfile>
      <anchor>a62821694d315ff9e9b417531bce97ce6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API bool</type>
      <name>IsDebuggerPresent</name>
      <anchorfile>classaworx_1_1lib_1_1ALib.html</anchorfile>
      <anchor>ad0e7333ca518b4965afb347b0c072680</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classaworx_1_1lib_1_1ALib.html</anchorfile>
      <anchor>a0f7439457156e6270dfd3ccfd07e1ea1</anchor>
      <arglist>(Phases phase) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>terminationCleanUp</name>
      <anchorfile>classaworx_1_1lib_1_1ALib.html</anchorfile>
      <anchor>a7f9483d9dee8eaaeae3831a8bb40731e</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lox::ALox</name>
    <filename>classaworx_1_1lox_1_1ALox.html</filename>
    <base>aworx::lib::lang::Library</base>
    <member kind="variable" static="yes">
      <type>static ALIB_API lib::config::VariableDecl</type>
      <name>CODEPAGE</name>
      <anchorfile>classaworx_1_1lox_1_1ALox.html</anchorfile>
      <anchor>ab3638b7eb5a7ec5b5b082f1c8f362417</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 2 &gt;</type>
      <name>InternalDomains</name>
      <anchorfile>classaworx_1_1lox_1_1ALox.html</anchorfile>
      <anchor>a27e1cb674b3172d5696b38af8479755d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ALOX_API Lox *</type>
      <name>Get</name>
      <anchorfile>classaworx_1_1lox_1_1ALox.html</anchorfile>
      <anchor>a91162815924f9c2460b34836c39e1a50</anchor>
      <arglist>(const String &amp;name, Create create=Create::Never)</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API Lox *</type>
      <name>Log</name>
      <anchorfile>classaworx_1_1lox_1_1ALox.html</anchorfile>
      <anchor>ae55ef9a26260880cde159c9d7591cb6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API void</type>
      <name>Register</name>
      <anchorfile>classaworx_1_1lox_1_1ALox.html</anchorfile>
      <anchor>adf95bbd67aec5e9e71e14134b0924fcf</anchor>
      <arglist>(Lox *lox, ContainerOp operation)</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API void</type>
      <name>Reset</name>
      <anchorfile>classaworx_1_1lox_1_1ALox.html</anchorfile>
      <anchor>a372de693ad40b3f42839c8ec6ac845f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Lox * &gt;</type>
      <name>loxes</name>
      <anchorfile>classaworx_1_1lox_1_1ALox.html</anchorfile>
      <anchor>a69b5aed73eb34991bbb3e77016904574</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ThreadLockNR</type>
      <name>loxManagement</name>
      <anchorfile>classaworx_1_1lox_1_1ALox.html</anchorfile>
      <anchor>aeecaf42518ee1c938a3a5f961d571f42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Lox *</type>
      <name>theLog</name>
      <anchorfile>classaworx_1_1lox_1_1ALox.html</anchorfile>
      <anchor>a96b214cd550476eaa9de2793f88a490b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classaworx_1_1lox_1_1ALox.html</anchorfile>
      <anchor>a0f7439457156e6270dfd3ccfd07e1ea1</anchor>
      <arglist>(Phases phase) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>terminationCleanUp</name>
      <anchorfile>classaworx_1_1lox_1_1ALox.html</anchorfile>
      <anchor>a7f9483d9dee8eaaeae3831a8bb40731e</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lox::ALoxReportWriter</name>
    <filename>classaworx_1_1lox_1_1ALoxReportWriter.html</filename>
    <base>aworx::lib::lang::ReportWriter</base>
    <member kind="function" static="yes">
      <type>static ALOX_API String &amp;</type>
      <name>LogDomain</name>
      <anchorfile>classaworx_1_1lox_1_1ALoxReportWriter.html</anchorfile>
      <anchor>a25d1e81288f8b2a044f14e2577bc73cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API</type>
      <name>ALoxReportWriter</name>
      <anchorfile>classaworx_1_1lox_1_1ALoxReportWriter.html</anchorfile>
      <anchor>a4b218cdb1f7e96e6cd3a851cca5f7c76</anchor>
      <arglist>(Lox *lox)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ALoxReportWriter</name>
      <anchorfile>classaworx_1_1lox_1_1ALoxReportWriter.html</anchorfile>
      <anchor>a8e2532c4efe550325c4ca204de83796b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>NotifyActivation</name>
      <anchorfile>classaworx_1_1lox_1_1ALoxReportWriter.html</anchorfile>
      <anchor>a810c6fafc7e815f40da0a7e1f30e2233</anchor>
      <arglist>(Phase)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Report</name>
      <anchorfile>classaworx_1_1lox_1_1ALoxReportWriter.html</anchorfile>
      <anchor>a5f430c0311b8ced436b6a8afedbb2023</anchor>
      <arglist>(const lib::lang::Report::Message &amp;msg)</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static String16</type>
      <name>reportDomain</name>
      <anchorfile>classaworx_1_1lox_1_1ALoxReportWriter.html</anchorfile>
      <anchor>add18036b208027dee62ed16031695ac5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Lox *</type>
      <name>lox</name>
      <anchorfile>classaworx_1_1lox_1_1ALoxReportWriter.html</anchorfile>
      <anchor>a337184443073b338364d604916737ba8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lox::loggers::AnsiConsoleLogger</name>
    <filename>classaworx_1_1lox_1_1loggers_1_1AnsiConsoleLogger.html</filename>
    <base>aworx::lox::loggers::AnsiLogger</base>
    <member kind="function">
      <type>ALOX_API</type>
      <name>AnsiConsoleLogger</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiConsoleLogger.html</anchorfile>
      <anchor>a4a099618a99a1f332153377f41e747a6</anchor>
      <arglist>(const String &amp;name=nullptr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALOX_API</type>
      <name>~AnsiConsoleLogger</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiConsoleLogger.html</anchorfile>
      <anchor>a4c8b0a449e4f27c7f745201dd0a7bdde</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lox::loggers::AnsiLogger</name>
    <filename>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</filename>
    <base>aworx::lox::core::textlogger::TextLogger</base>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 5 &gt;</type>
      <name>ANSI_BG_BLACK</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>a27e72cbc5b02a1dbcc59459b24fcac93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 5 &gt;</type>
      <name>ANSI_BG_BLUE</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>a78781c97dcd77d8e020d97f45c6ec17d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 5 &gt;</type>
      <name>ANSI_BG_CYAN</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>a55cdb14432692f0f3652ab370f737838</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 11 &gt;</type>
      <name>ANSI_BG_GRAY</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>a6a0101d01ba74803526dfe840f5908ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 5 &gt;</type>
      <name>ANSI_BG_GREEN</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>a730b918b92cd98d292027abe64c204e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 10 &gt;</type>
      <name>ANSI_BG_LIGHT_BLUE</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>a79a4977dd2c4d0c59ecc710e183dfdf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 10 &gt;</type>
      <name>ANSI_BG_LIGHT_CYAN</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>a355036b8fd63b3bc610bb2306e82fd44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 11 &gt;</type>
      <name>ANSI_BG_LIGHT_GRAY</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>add465a88b8403ce7a9958b5aef88bdec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 10 &gt;</type>
      <name>ANSI_BG_LIGHT_GREEN</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>a5b80a3c04fe8a12fd70bf03ab10ccd24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 10 &gt;</type>
      <name>ANSI_BG_LIGHT_MAGENTA</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>af730ae0af14b4635f8520b8b38c47c3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 10 &gt;</type>
      <name>ANSI_BG_LIGHT_RED</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>a3bb7b29b489ce76c545f44c537de9f11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 5 &gt;</type>
      <name>ANSI_BG_LIGHT_STD_COL</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>a30242d20b5eeab94340a1fb08aafac6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 10 &gt;</type>
      <name>ANSI_BG_LIGHT_YELLOW</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>ac0f817a36a42706066be19b714b18529</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 5 &gt;</type>
      <name>ANSI_BG_MAGENTA</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>a39a1ec9788d46db67d8070dd8ba5f9c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 5 &gt;</type>
      <name>ANSI_BG_RED</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>ad8f6edba5f4ea02b34a5ff9f47dbb823</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 5 &gt;</type>
      <name>ANSI_BG_STD_COL</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>ad347cc384960c5b3a53711db67b461a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 10 &gt;</type>
      <name>ANSI_BG_WHITE</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>a997f0ff7a14095055ca4177f2c7ee24b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 5 &gt;</type>
      <name>ANSI_BG_YELLOW</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>a0dd61828101f981ddf40596036491db2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 5 &gt;</type>
      <name>ANSI_BLACK</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>a03bb338f2071710563b5b900776ff97c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 5 &gt;</type>
      <name>ANSI_BLUE</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>af13e42075527c53826a45b701d2f11ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 4 &gt;</type>
      <name>ANSI_BOLD</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>a3673001c1ecfade29ebd998fb0a7d34d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 5 &gt;</type>
      <name>ANSI_CYAN</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>ab74c43b828d71d6a0bb8f2f638153c38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 11 &gt;</type>
      <name>ANSI_GRAY</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>a451ac488ad5845c1fd7ef00baa7c4804</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 5 &gt;</type>
      <name>ANSI_GREEN</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>a959850ecf9bb6c411bac981f96e856ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 4 &gt;</type>
      <name>ANSI_ITALICS</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>a508beb405ebff03bbe2c95f6b1ee3b2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 10 &gt;</type>
      <name>ANSI_LIGHT_BLUE</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>a26d9f5b90c0c759c2f884de2bd3b686d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 10 &gt;</type>
      <name>ANSI_LIGHT_CYAN</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>a8a7ab1c3f0c1801f4753b7688a169fb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 11 &gt;</type>
      <name>ANSI_LIGHT_GRAY</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>ae011416736a221e44aaffcfef3f3f82c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 10 &gt;</type>
      <name>ANSI_LIGHT_GREEN</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>a38253545c73c267665042f327e8c1d14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 10 &gt;</type>
      <name>ANSI_LIGHT_MAGENTA</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>a37ab8dbc850a5c7a93377533064a05e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 10 &gt;</type>
      <name>ANSI_LIGHT_RED</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>a76e632c9d3072b0787dc39f762570ecd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 5 &gt;</type>
      <name>ANSI_LIGHT_STD_COL</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>af0def5f87a98d3035be0f9458b51d819</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 10 &gt;</type>
      <name>ANSI_LIGHT_YELLOW</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>a7d398f7c3538d3e90f580b40cb3e98de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 5 &gt;</type>
      <name>ANSI_MAGENTA</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>a0ddb3aa248250fc2cfc9e11784f2b12a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 5 &gt;</type>
      <name>ANSI_RED</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>a08626922493c40a069ef1cc2b0d384a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 4 &gt;</type>
      <name>ANSI_RESET</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>a58e573cc2e2729e1c8de3f2ef2550f15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 5 &gt;</type>
      <name>ANSI_STD_COL</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>ad16f181c52a38df089565a239eb26daa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 4 &gt;</type>
      <name>ANSI_STD_STYLE</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>ac490b3694ac9f9f753bb9dda4fde4f71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 10 &gt;</type>
      <name>ANSI_WHITE</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>a7b3c274355061e30b915f2d0d30f16f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 5 &gt;</type>
      <name>ANSI_YELLOW</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>a250a3234cb0ca3abaca33bc8651a6477</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LightColorUsage</type>
      <name>UseLightColors</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>ab96a9606e7469811d93adb75f3a26ad4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ALOX_API</type>
      <name>AnsiLogger</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>a86f8dba58618ec041d1a5019d62d8507</anchor>
      <arglist>(std::basic_ostream&lt; char &gt; *pOStream, bool usesStdStreams, const String &amp;name=nullptr, const String &amp;typeName=&quot;ANSI&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALOX_API</type>
      <name>~AnsiLogger</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>ad6ebe5d417530b986e219b6a9225459b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::basic_ostream&lt; char &gt; *</type>
      <name>oStream</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>a61c72958789f761a5763f20659bd8651</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ALOX_API void</type>
      <name>logText</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>aa7e70b90717f0429abf0990e5e12ad9f</anchor>
      <arglist>(core::Domain &amp;domain, Verbosity verbosity, AString &amp;msg, core::ScopeInfo &amp;scope, int lineNumber)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>notifyMultiLineOp</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1AnsiLogger.html</anchorfile>
      <anchor>a7cf9f0c4d2657cff2f8acdfa3778f18a</anchor>
      <arglist>(lib::lang::Phase)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::boxing::ArrayBoxerT</name>
    <filename>classaworx_1_1lib_1_1boxing_1_1ArrayBoxerT.html</filename>
    <templarg></templarg>
    <base>aworx::lib::boxing::Boxer</base>
    <base>aworx::lib::lang::Singleton</base>
    <member kind="friend">
      <type>friend class</type>
      <name>lang::Singleton&lt; ArrayBoxerT&lt; TElementType &gt; &gt;</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1ArrayBoxerT.html</anchorfile>
      <anchor>af6e405c4329b8149d4eefda083f7c337</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ArrayBoxerT</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1ArrayBoxerT.html</anchorfile>
      <anchor>a1e969e35ebde39a5591972ad07b49366</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::strings::AString</name>
    <filename>classaworx_1_1lib_1_1strings_1_1AString.html</filename>
    <base>aworx::lib::strings::TString</base>
    <member kind="function">
      <type>constexpr</type>
      <name>AString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a135d849a18470b04a1f4cf761de3a17c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>aef97d18c9b0263c6024fd2165e364305</anchor>
      <arglist>(int64_t initialCapacity)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>ab1ef7d09283e821217cc54185d6ff572</anchor>
      <arglist>(int32_t initialCapacity)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>acb58a1a41566fecce231acc9e53bf185</anchor>
      <arglist>(size_t initialCapacity)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a4f3aebb5fc9bc80c4f569df5d6450025</anchor>
      <arglist>(const AString &amp;copy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>aea0679449a7bd77ef8c90909a186b0f8</anchor>
      <arglist>(AString &amp;&amp;move) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a1e35fb2898f42f037fa3f89b57d4614b</anchor>
      <arglist>(const TApplicable &amp;src)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a2930155f55c492deb317d408e78b008e</anchor>
      <arglist>(const String &amp;src, integer regionStart, integer regionLength=CString::MaxLen)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>ab93ea5df790ecc39b4f09e84cbd9805c</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>operator=</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>ab5e4f0275095724f12cb477527d2f33b</anchor>
      <arglist>(const AString &amp;copy)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>operator=</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>ad2f3657113564a044ec878b4aa3d86a7</anchor>
      <arglist>(const T &amp;arg)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>SetBuffer</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>ad47a1c5211d727f2ad83af1c0c11eedd</anchor>
      <arglist>(integer newCapacity)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>SetBuffer</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>ad9991b300e8a6f0b9a80b307ad4bf30b</anchor>
      <arglist>(char *extBuffer, integer extBufferSize, integer extLength=0, lang::Responsibility responsibility=lang::Responsibility::KeepWithSender)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLength</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a4101d7715aa5920c9271cd6c10b216f9</anchor>
      <arglist>(integer newLength)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EnsureRemainingCapacity</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>ad0ca8167792fc2b3168875eb74c52244</anchor>
      <arglist>(integer spaceNeeded)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GrowBufferAtLeastBy</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a25d230b76a42b4a326eb555317be2d27</anchor>
      <arglist>(integer minimumGrowth)</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>Capacity</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a13d8dd90ade6b047754152f7027b59ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasInternalBuffer</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a799c4f153843f7dbba7fe16cf9bfc457</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNull</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a787c9800970197d19a5452ac456d64f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>VBuffer</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a9fc1618c8160a885a88517605f5a82b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCharAt</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a54fb0604a4fa956886055a2dee1e2cfa</anchor>
      <arglist>(integer idx, char c)</arglist>
    </member>
    <member kind="function">
      <type>char &amp;</type>
      <name>operator[]</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>abfd3fe48201202d99c363ed273092540</anchor>
      <arglist>(integer op)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>Clear</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>ae4d5af65574550e39830297e4496f81b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>_</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a05403e545a0fa8171456199085790c1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>InsertAt</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>ab8e37d3a5f463e6274ef52b2f07acbf4</anchor>
      <arglist>(const String &amp;src, integer pos)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>InsertChars</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>af17757fb09bfd4a08175fa9a3f823db4</anchor>
      <arglist>(char c, integer qty, integer pos=CString::MaxLen)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>ReplaceSubstring</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>aeda9e1fea6e1f0edeef8b1f981d92e60</anchor>
      <arglist>(const String &amp;src, integer regionStart, integer regionLength)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>ReplaceRegion</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>acdf4bf81ff03d3b84bc540d1856300cf</anchor>
      <arglist>(char c, integer regionStart, integer regionLength)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>Delete</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a451b1468724b27d8736d3f5aaa8f5e74</anchor>
      <arglist>(integer regionStart, integer regionLength=CString::MaxLen)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>DeleteStart</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a5b40156b1a89b36f39df6eba210c6515</anchor>
      <arglist>(integer regionLength)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>DeleteEnd</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a2d99a6acb60c31fc07df307dccf50bf6</anchor>
      <arglist>(integer regionLength)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API AString &amp;</type>
      <name>Trim</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a5902ed6d5d02134b98ac686172f34dc9</anchor>
      <arglist>(const TString &amp;trimChars=DefaultWhitespaces)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API integer</type>
      <name>TrimAt</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>aa5ee71a4ddc4d643185c5a742c4ee3c6</anchor>
      <arglist>(integer idx, const TString &amp;trimChars=DefaultWhitespaces)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>TrimStart</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a4aacb9ead9be86623c688267f76760cf</anchor>
      <arglist>(const TString &amp;trimChars=DefaultWhitespaces)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>TrimEnd</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>abfb73aa66ba9e9ebedecd9de6ee6ed9b</anchor>
      <arglist>(const TString &amp;trimChars=DefaultWhitespaces)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>Append</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>afab2036d4883a44fc2e9d568e7e15364</anchor>
      <arglist>(const char *src, integer srcLength)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API AString &amp;</type>
      <name>Append</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>aea9f6d818d69794fdefa12dcf0e1bdd4</anchor>
      <arglist>(const wchar_t *src, integer srcLength)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API AString &amp;</type>
      <name>Append</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>aae1664c81149f820b3f308912b668c1f</anchor>
      <arglist>(const char16_t *src, integer srcLength)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>Append</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>aab62aad6a1f85e94807e797c6a0d8348</anchor>
      <arglist>(const char32_t *src, integer srcLength)</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>Apply</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>ab6c3f64bbc79da9399975d250584f428</anchor>
      <arglist>(const TApplicable &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>_</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a635ad749475cecd00e3ec3603327d78c</anchor>
      <arglist>(const T &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>_</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a3dc8631e41b21a676ce5b4221c4e7df8</anchor>
      <arglist>(const String &amp;src, integer regionStart, integer regionLength=CString::MaxLen)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>ac243bc3f2d0f61eb45d49f488ddbcb63</anchor>
      <arglist>(const T &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>NewLine</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a949cac7084e10566b50a195b60bff591</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API integer</type>
      <name>SearchAndReplace</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a3dea5149dfa72d2f65829bed4bf3f86d</anchor>
      <arglist>(char needle, char replacement, integer startIdx=0)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API integer</type>
      <name>SearchAndReplace</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a770e00f028be0ce9b94fe850efd10de9</anchor>
      <arglist>(const TString &amp;needle, const String &amp;replacement, integer startIdx=0, integer maxReplacements=CString::MaxLen, lang::Case sensitivity=lang::Case::Sensitive)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>ToUpper</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a8dad571b49b3662d587ef5265a62397b</anchor>
      <arglist>(integer regionStart=0, integer regionLength=CString::MaxLen)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>ToLower</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a99c440209106a3e01577c936c742c59a</anchor>
      <arglist>(integer regionStart=0, integer regionLength=CString::MaxLen)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>PreallocatedString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>ad3c3bba82982d562b15eb6c9f80bef1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>integer</type>
      <name>debugLastAllocRequest</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a9cc9187a87e43e81efb935dbeae6bcdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>debugBufferWithMagicBytePadding</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>aa155a96ba168342ab2ae8067d96e373e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>integer</type>
      <name>capacity</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a22bd99800edfec61833d9b066af9827f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>ReplaceExternalBuffer</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>ae6e756e6f5ccc142f9fc3ceb6ba18cf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_dbgCheck</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a7019ebc20c4e90566cc1f4235f0beec5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>constexpr</type>
      <name>AString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a27d6a071b6dae8a5c2b11a6ee11c0984</anchor>
      <arglist>(char *extBuffer, integer extBufferSize)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>AString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a135d849a18470b04a1f4cf761de3a17c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>aef97d18c9b0263c6024fd2165e364305</anchor>
      <arglist>(int64_t initialCapacity)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>ab1ef7d09283e821217cc54185d6ff572</anchor>
      <arglist>(int32_t initialCapacity)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>acb58a1a41566fecce231acc9e53bf185</anchor>
      <arglist>(size_t initialCapacity)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a4f3aebb5fc9bc80c4f569df5d6450025</anchor>
      <arglist>(const AString &amp;copy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>aea0679449a7bd77ef8c90909a186b0f8</anchor>
      <arglist>(AString &amp;&amp;move) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a1e35fb2898f42f037fa3f89b57d4614b</anchor>
      <arglist>(const TApplicable &amp;src)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a2930155f55c492deb317d408e78b008e</anchor>
      <arglist>(const String &amp;src, integer regionStart, integer regionLength=CString::MaxLen)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>ab93ea5df790ecc39b4f09e84cbd9805c</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>operator=</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>ab5e4f0275095724f12cb477527d2f33b</anchor>
      <arglist>(const AString &amp;copy)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>operator=</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>ad2f3657113564a044ec878b4aa3d86a7</anchor>
      <arglist>(const T &amp;arg)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>SetBuffer</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>ad47a1c5211d727f2ad83af1c0c11eedd</anchor>
      <arglist>(integer newCapacity)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>SetBuffer</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>ad9991b300e8a6f0b9a80b307ad4bf30b</anchor>
      <arglist>(char *extBuffer, integer extBufferSize, integer extLength=0, lang::Responsibility responsibility=lang::Responsibility::KeepWithSender)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLength</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a4101d7715aa5920c9271cd6c10b216f9</anchor>
      <arglist>(integer newLength)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EnsureRemainingCapacity</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>ad0ca8167792fc2b3168875eb74c52244</anchor>
      <arglist>(integer spaceNeeded)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GrowBufferAtLeastBy</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a25d230b76a42b4a326eb555317be2d27</anchor>
      <arglist>(integer minimumGrowth)</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>Capacity</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a13d8dd90ade6b047754152f7027b59ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasInternalBuffer</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a799c4f153843f7dbba7fe16cf9bfc457</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNull</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a787c9800970197d19a5452ac456d64f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>VBuffer</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a9fc1618c8160a885a88517605f5a82b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCharAt</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a54fb0604a4fa956886055a2dee1e2cfa</anchor>
      <arglist>(integer idx, char c)</arglist>
    </member>
    <member kind="function">
      <type>char &amp;</type>
      <name>operator[]</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>abfd3fe48201202d99c363ed273092540</anchor>
      <arglist>(integer op)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>Clear</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>ae4d5af65574550e39830297e4496f81b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>_</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a05403e545a0fa8171456199085790c1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>InsertAt</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>ab8e37d3a5f463e6274ef52b2f07acbf4</anchor>
      <arglist>(const String &amp;src, integer pos)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>InsertChars</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>af17757fb09bfd4a08175fa9a3f823db4</anchor>
      <arglist>(char c, integer qty, integer pos=CString::MaxLen)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>ReplaceSubstring</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>aeda9e1fea6e1f0edeef8b1f981d92e60</anchor>
      <arglist>(const String &amp;src, integer regionStart, integer regionLength)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>ReplaceRegion</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>acdf4bf81ff03d3b84bc540d1856300cf</anchor>
      <arglist>(char c, integer regionStart, integer regionLength)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>Delete</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a451b1468724b27d8736d3f5aaa8f5e74</anchor>
      <arglist>(integer regionStart, integer regionLength=CString::MaxLen)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>DeleteStart</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a5b40156b1a89b36f39df6eba210c6515</anchor>
      <arglist>(integer regionLength)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>DeleteEnd</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a2d99a6acb60c31fc07df307dccf50bf6</anchor>
      <arglist>(integer regionLength)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API AString &amp;</type>
      <name>Trim</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a5902ed6d5d02134b98ac686172f34dc9</anchor>
      <arglist>(const TString &amp;trimChars=DefaultWhitespaces)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API integer</type>
      <name>TrimAt</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>aa5ee71a4ddc4d643185c5a742c4ee3c6</anchor>
      <arglist>(integer idx, const TString &amp;trimChars=DefaultWhitespaces)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>TrimStart</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a4aacb9ead9be86623c688267f76760cf</anchor>
      <arglist>(const TString &amp;trimChars=DefaultWhitespaces)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>TrimEnd</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>abfb73aa66ba9e9ebedecd9de6ee6ed9b</anchor>
      <arglist>(const TString &amp;trimChars=DefaultWhitespaces)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>Append</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>afab2036d4883a44fc2e9d568e7e15364</anchor>
      <arglist>(const char *src, integer srcLength)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API AString &amp;</type>
      <name>Append</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>aea9f6d818d69794fdefa12dcf0e1bdd4</anchor>
      <arglist>(const wchar_t *src, integer srcLength)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API AString &amp;</type>
      <name>Append</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>aae1664c81149f820b3f308912b668c1f</anchor>
      <arglist>(const char16_t *src, integer srcLength)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>Append</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>aab62aad6a1f85e94807e797c6a0d8348</anchor>
      <arglist>(const char32_t *src, integer srcLength)</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>Apply</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>ab6c3f64bbc79da9399975d250584f428</anchor>
      <arglist>(const TApplicable &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>_</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a635ad749475cecd00e3ec3603327d78c</anchor>
      <arglist>(const T &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>_</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a3dc8631e41b21a676ce5b4221c4e7df8</anchor>
      <arglist>(const String &amp;src, integer regionStart, integer regionLength=CString::MaxLen)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>ac243bc3f2d0f61eb45d49f488ddbcb63</anchor>
      <arglist>(const T &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>NewLine</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a949cac7084e10566b50a195b60bff591</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API integer</type>
      <name>SearchAndReplace</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a3dea5149dfa72d2f65829bed4bf3f86d</anchor>
      <arglist>(char needle, char replacement, integer startIdx=0)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API integer</type>
      <name>SearchAndReplace</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a770e00f028be0ce9b94fe850efd10de9</anchor>
      <arglist>(const TString &amp;needle, const String &amp;replacement, integer startIdx=0, integer maxReplacements=CString::MaxLen, lang::Case sensitivity=lang::Case::Sensitive)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>ToUpper</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a8dad571b49b3662d587ef5265a62397b</anchor>
      <arglist>(integer regionStart=0, integer regionLength=CString::MaxLen)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>ToLower</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a99c440209106a3e01577c936c742c59a</anchor>
      <arglist>(integer regionStart=0, integer regionLength=CString::MaxLen)</arglist>
    </member>
    <member kind="typedef">
      <type>RandomAccessIteratorBase&lt; char *, char &amp; &gt;</type>
      <name>Iterator</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>adfbdc69365e618a3fc2c3da2dbc9149f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>begin</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>a2387033802383edbdc95f9bbb12a707e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>end</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1AString.html</anchorfile>
      <anchor>ab45dae688fc5d8983727abffa4389003</anchor>
      <arglist>()</arglist>
    </member>
    <docanchor file="classaworx_1_1lib_1_1strings_1_1AString">alib_namespace_strings_astring_move</docanchor>
    <docanchor file="classaworx_1_1lib_1_1strings_1_1AString">alib_namespace_strings_astring_write_access</docanchor>
    <docanchor file="classaworx_1_1lib_1_1strings_1_1AString">alib_namespace_strings_astring_nullable</docanchor>
    <docanchor file="classaworx_1_1lib_1_1strings_1_1AString">alib_namespace_strings_astring_applyto</docanchor>
    <docanchor file="classaworx_1_1lib_1_1strings_1_1AString">alib_namespace_strings_astring_application_vs_interface</docanchor>
  </compound>
  <compound kind="class">
    <name>aworx::lib::strings::util::AutoSizes</name>
    <filename>classaworx_1_1lib_1_1strings_1_1util_1_1AutoSizes.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>ActualIndex</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1AutoSizes.html</anchorfile>
      <anchor>acf5441aa3a2d1bcc3dfd3519d7579fee</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ALIB_API int</type>
      <name>Actual</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1AutoSizes.html</anchorfile>
      <anchor>aa92795cffe0ef4fe2fcbd338b366e0e6</anchor>
      <arglist>(integer requestedSize, integer growthPadding)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>Export</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1AutoSizes.html</anchorfile>
      <anchor>aac883c890047d2981a5d7450a10111f9</anchor>
      <arglist>(AString &amp;target)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>Import</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1AutoSizes.html</anchorfile>
      <anchor>ab84649c92a0bcd14b6a11a42efaea8d3</anchor>
      <arglist>(const String &amp;source, lib::lang::CurrentData session=lib::lang::CurrentData::Clear)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API int</type>
      <name>Next</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1AutoSizes.html</anchorfile>
      <anchor>ad4800dc113e95a6f19267e15f0b031bf</anchor>
      <arglist>(integer requestedSize, integer growthPadding)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Reset</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1AutoSizes.html</anchorfile>
      <anchor>a372de693ad40b3f42839c8ec6ac845f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Start</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1AutoSizes.html</anchorfile>
      <anchor>a07aaf1227e4d645f15e0a964f54ef291</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; integer &gt;</type>
      <name>sessionValues</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1AutoSizes.html</anchorfile>
      <anchor>a2d98fd607de7112b71da545db7352704</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; integer &gt;</type>
      <name>values</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1AutoSizes.html</anchorfile>
      <anchor>a666b5dd3fd1a34b57a7ff77570f99986</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::Format::Bin</name>
    <filename>structaworx_1_1lib_1_1strings_1_1Format_1_1Bin.html</filename>
    <member kind="variable">
      <type>NumberFormat *</type>
      <name>nf</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1Format_1_1Bin.html</anchorfile>
      <anchor>afecb8b906f7e79cb68adcdbce823de5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>theValue</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1Format_1_1Bin.html</anchorfile>
      <anchor>a395b2523d70416e8827e521cc3766db8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>theWidth</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1Format_1_1Bin.html</anchorfile>
      <anchor>af24938d824f57b7af29025dfb0556f66</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Bin</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1Format_1_1Bin.html</anchorfile>
      <anchor>abd07082ea1b5f3101d111ae1024d06d9</anchor>
      <arglist>(uint64_t value, int overrideWidth=0, NumberFormat *numberFormat=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Bin</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1Format_1_1Bin.html</anchorfile>
      <anchor>ab66c9a48d083dd68e968578c936d100f</anchor>
      <arglist>(uint64_t value, NumberFormat *numberFormat)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Bin</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1Format_1_1Bin.html</anchorfile>
      <anchor>a4600d15eec051c9ca23b2c8861631a9a</anchor>
      <arglist>(uint32_t value, int overrideWidth=0, NumberFormat *numberFormat=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Bin</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1Format_1_1Bin.html</anchorfile>
      <anchor>ab6b5f0157ec083b226ce924274076dd6</anchor>
      <arglist>(uint32_t value, NumberFormat *numberFormat)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::util::MemoryBlocks::Block</name>
    <filename>structaworx_1_1lib_1_1util_1_1MemoryBlocks_1_1Block.html</filename>
    <member kind="variable">
      <type>integer</type>
      <name>fill</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1MemoryBlocks_1_1Block.html</anchorfile>
      <anchor>a334403948172e386d94a42fc60eef175</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>mem</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1MemoryBlocks_1_1Block.html</anchorfile>
      <anchor>a601f47da241eafe81dcdd22058c22a79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>integer</type>
      <name>size</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1MemoryBlocks_1_1Block.html</anchorfile>
      <anchor>a6621c7fedbd7c7baa696edda1ef5aee6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Block</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1MemoryBlocks_1_1Block.html</anchorfile>
      <anchor>ab9fe3669cd1ef0747dd4837d66ea422c</anchor>
      <arglist>(integer pSize)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>Allocate</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1MemoryBlocks_1_1Block.html</anchorfile>
      <anchor>afa99e93da7ae8d762cfe2a9b27c93c95</anchor>
      <arglist>(integer requestedSize)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::boxing::Box</name>
    <filename>classaworx_1_1lib_1_1boxing_1_1Box.html</filename>
    <member kind="function">
      <type></type>
      <name>Box</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Box.html</anchorfile>
      <anchor>ab35f0568f1775ad9ae0b7c63c47f0362</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Box</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Box.html</anchorfile>
      <anchor>a0ac2ce6e5fab2e2f088846cee710de4d</anchor>
      <arglist>(const Box &amp;)=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Box</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Box.html</anchorfile>
      <anchor>ab9d562f23daeb465002adabc9a03cee7</anchor>
      <arglist>(Box &amp;&amp;)=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Box</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Box.html</anchorfile>
      <anchor>a11e25eb867bc754d3dbe587c596fc328</anchor>
      <arglist>(void *src)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Box</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Box.html</anchorfile>
      <anchor>ac90d52a5e3f9084ab290a399c4ab0f2c</anchor>
      <arglist>(TEnum src)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Box</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Box.html</anchorfile>
      <anchor>a438cf18a7c4cc8b5cab3ca9aea51bbee</anchor>
      <arglist>(const TBoxable &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>ArrayElementSize</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Box.html</anchorfile>
      <anchor>a0a3c77489682d92eebd69ad2a5c0824e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::type_info &amp;</type>
      <name>DbgGetReferenceType</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Box.html</anchorfile>
      <anchor>aa1b7ce5446ed5ad892af64d02eed6efc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TInterface *</type>
      <name>GetInterface</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Box.html</anchorfile>
      <anchor>aff845e5a76eb0fab90db26cda997c70b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::type_info &amp;</type>
      <name>GetTypeInfo</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Box.html</anchorfile>
      <anchor>aa5be4d1c296e19fc0097e98d8f949524</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasInterface</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Box.html</anchorfile>
      <anchor>af00a56f400aaf960349d00e50d8effd5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TReturn</type>
      <name>Invoke</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Box.html</anchorfile>
      <anchor>ae828c5649908bb8346f1187bb4187936</anchor>
      <arglist>(Args &amp;&amp;... args) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsArray</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Box.html</anchorfile>
      <anchor>aebef9889d05411b93c68c9a7d9d773cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsArrayOf</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Box.html</anchorfile>
      <anchor>ad34718fb8f3109b7ee870650ae8dedbf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsNotNull</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Box.html</anchorfile>
      <anchor>a1975261f9100a453259d7df75ad4080d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsNull</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Box.html</anchorfile>
      <anchor>ac4d637a0dec45d546495c1660c9f6047</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSameType</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Box.html</anchorfile>
      <anchor>a4c7d7c493c9172bcebf20d5324a396b3</anchor>
      <arglist>(const Box &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsType</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Box.html</anchorfile>
      <anchor>a6cfff1d08a62820fcf3a5f82922a3bba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsVoidPointer</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Box.html</anchorfile>
      <anchor>a2a7634ca57b5937c59db2299e0baeabb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>Length</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Box.html</anchorfile>
      <anchor>a78a515bdd031a8d3b713bb05edcf126c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Box.html</anchorfile>
      <anchor>aab207b1ddd2f1a9520136b9af42f8e91</anchor>
      <arglist>(const Box &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API bool</type>
      <name>operator&lt;</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Box.html</anchorfile>
      <anchor>a4b62da43ec37b35ae6477f90464c4dbd</anchor>
      <arglist>(const Box &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Box.html</anchorfile>
      <anchor>a35267b54746c4e9606e66623cc95a244</anchor>
      <arglist>(const Box &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>Box &amp;</type>
      <name>operator=</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Box.html</anchorfile>
      <anchor>a373b8473fbb454f0721ce5c6fe369b1d</anchor>
      <arglist>(const Box &amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>Box &amp;</type>
      <name>operator=</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Box.html</anchorfile>
      <anchor>aa69c7ac656903a021aefd1de808b64ed</anchor>
      <arglist>(Box &amp;&amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API bool</type>
      <name>operator==</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Box.html</anchorfile>
      <anchor>ade892ae7540dc827ee1f5928c4fda5dc</anchor>
      <arglist>(Box const &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Box.html</anchorfile>
      <anchor>a293df796606768d77881b10ae804440e</anchor>
      <arglist>(const Box &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Box.html</anchorfile>
      <anchor>af95620818d9f7f599fdbedf9621caa62</anchor>
      <arglist>(const Box &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>TBoxable</type>
      <name>Unbox</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Box.html</anchorfile>
      <anchor>a7e697abb81d1cc6d8669a75e48ec0d88</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TElementType &amp;</type>
      <name>UnboxElement</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Box.html</anchorfile>
      <anchor>a974225964bd92b7338e69557376719e1</anchor>
      <arglist>(integer idx) const</arglist>
    </member>
    <member kind="function">
      <type>boxvalue</type>
      <name>UnboxRaw</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Box.html</anchorfile>
      <anchor>a7f83d910b885d130193aaa77d472f29c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend void</type>
      <name>DefaultBoxing</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Box.html</anchorfile>
      <anchor>a34465e3dfe6a07d5e53b7c9f7d8d9b79</anchor>
      <arglist>(Box &amp;box, const TBoxable &amp;value)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend TBoxable</type>
      <name>DefaultUnboxing</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Box.html</anchorfile>
      <anchor>a28b628b92185f310ea42b146c15b9ce1</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend struct</type>
      <name>T_Boxing</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Box.html</anchorfile>
      <anchor>a0acd27547301a0bb7c2d2fbdbd709df3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Boxer *</type>
      <name>boxer</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Box.html</anchorfile>
      <anchor>ac9663bfd726a1b8c391b21f6e836c66e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>BoxData</type>
      <name>data</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Box.html</anchorfile>
      <anchor>ae873c14aa392d71bf9d5b0c4a28f4af5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::boxing::BoxData</name>
    <filename>structaworx_1_1lib_1_1boxing_1_1BoxData.html</filename>
    <member kind="variable">
      <type>integer</type>
      <name>Length</name>
      <anchorfile>structaworx_1_1lib_1_1boxing_1_1BoxData.html</anchorfile>
      <anchor>a5f38f944ed993ecb18fb7bbcee7c8f9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boxvalue</type>
      <name>Value</name>
      <anchorfile>structaworx_1_1lib_1_1boxing_1_1BoxData.html</anchorfile>
      <anchor>ae5cc2f97c501622beca5fdeffb7e755c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxData</name>
      <anchorfile>structaworx_1_1lib_1_1boxing_1_1BoxData.html</anchorfile>
      <anchor>a8f2b0d193d6262fa6dbb1b497fdfa7df</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>BoxData</name>
      <anchorfile>structaworx_1_1lib_1_1boxing_1_1BoxData.html</anchorfile>
      <anchor>ada7e7db39c438b9ec1c19f0b89b752d8</anchor>
      <arglist>(boxvalue value, integer length=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::boxing::BoxedAs</name>
    <filename>classaworx_1_1lib_1_1boxing_1_1BoxedAs.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>BoxedAs</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1BoxedAs.html</anchorfile>
      <anchor>a39ade478bd40725e0030295048f1113a</anchor>
      <arglist>(const Type &amp;val)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxedAs</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1BoxedAs.html</anchorfile>
      <anchor>a5b6e44e688f9a95034abc8ab1563dfab</anchor>
      <arglist>(Type *val)</arglist>
    </member>
    <member kind="function">
      <type>Type &amp;</type>
      <name>Get</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1BoxedAs.html</anchorfile>
      <anchor>a537098908710aef42c22525ef1d81d49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Type &amp;</type>
      <name>value</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1BoxedAs.html</anchorfile>
      <anchor>a37970b24ff8115a54b5c57718f83fb10</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::boxing::Boxer</name>
    <filename>classaworx_1_1lib_1_1boxing_1_1Boxer.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DefineDefaultInterface</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Boxer.html</anchorfile>
      <anchor>a6228b2d41176a6f8fd6489b150dfc5c3</anchor>
      <arglist>(Interface *interface)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DefineInterface</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Boxer.html</anchorfile>
      <anchor>ad4a321b8053fc083a3a91064e422795c</anchor>
      <arglist>(Interface *interface)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsArray</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Boxer.html</anchorfile>
      <anchor>aebef9889d05411b93c68c9a7d9d773cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Box</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Boxer.html</anchorfile>
      <anchor>a3f229d41a6747c1fd12cbe102d06b13c</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Boxing</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Boxer.html</anchorfile>
      <anchor>a2104d79194d9466a7b07a469d1335cd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ALIB_API TypeMap&lt; Interface * &gt;</type>
      <name>defaultInterfaces</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Boxer.html</anchorfile>
      <anchor>add576d8e90717b2cb40477c477fcb0e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const std::type_info &amp;</type>
      <name>elemType</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Boxer.html</anchorfile>
      <anchor>a7d3245b189f401a4d6a98143e975157b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TypeMap&lt; Interface * &gt;</type>
      <name>interfaces</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Boxer.html</anchorfile>
      <anchor>a7bdea690619e22d7ca324318ece7adad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const size_t</type>
      <name>sizeofElemType</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Boxer.html</anchorfile>
      <anchor>a7cd5a02858d1c75ff2e87dd0d8fcf253</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const std::type_info &amp;</type>
      <name>type</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Boxer.html</anchorfile>
      <anchor>a0cb9a6a815046da9de1d8325a8db0e72</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Boxer</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Boxer.html</anchorfile>
      <anchor>a6b4adb8000cac370d1e28ed751cc4d85</anchor>
      <arglist>(const std::type_info &amp;ptype)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Boxer</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Boxer.html</anchorfile>
      <anchor>a4af70dcdb78a57132641bb17242ef89c</anchor>
      <arglist>(const std::type_info &amp;pType, const std::type_info &amp;pElemType, size_t pSizeofElem)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~Boxer</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Boxer.html</anchorfile>
      <anchor>aa64c91f6ec57c69c9939ebc8cbbfbef6</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::boxing::BoxerT</name>
    <filename>classaworx_1_1lib_1_1boxing_1_1BoxerT.html</filename>
    <templarg>TBoxable</templarg>
    <base>aworx::lib::boxing::Boxer</base>
    <base>aworx::lib::lang::Singleton</base>
    <member kind="friend">
      <type>friend class</type>
      <name>lang::Singleton&lt; BoxerT&lt; TBoxable &gt; &gt;</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1BoxerT.html</anchorfile>
      <anchor>a5d634a6df1373ddf19444ae0bb87532c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>BoxerT</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1BoxerT.html</anchorfile>
      <anchor>a1d98a6c889d7b0b68258d64bcd48b41c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::boxing::Boxes</name>
    <filename>classaworx_1_1lib_1_1boxing_1_1Boxes.html</filename>
    <member kind="function">
      <type></type>
      <name>Boxes</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Boxes.html</anchorfile>
      <anchor>af52195798947fa8439aae0cb34216fe2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Boxes</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Boxes.html</anchorfile>
      <anchor>a8ce2d5486c0634d1359983956d9806d5</anchor>
      <arglist>(TBoxables &amp;&amp;... boxables)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Add</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Boxes.html</anchorfile>
      <anchor>a671d6542680b4e4400b81efc6b2d1ec3</anchor>
      <arglist>(TFirstBoxable &amp;&amp;first, TBoxables &amp;&amp;... rest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Add</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Boxes.html</anchorfile>
      <anchor>af794f2ae5bf7e31401050cd57fbfda56</anchor>
      <arglist>(TBoxable &amp;&amp;src)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::debug::Boxing</name>
    <filename>classaworx_1_1lib_1_1debug_1_1Boxing.html</filename>
    <member kind="typedef">
      <type>std::vector&lt; aworx::AString &gt;</type>
      <name>StringVector</name>
      <anchorfile>classaworx_1_1lib_1_1debug_1_1Boxing.html</anchorfile>
      <anchor>afd414243e71139c47514c95b350e6f69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AString</type>
      <name>dump</name>
      <anchorfile>classaworx_1_1lib_1_1debug_1_1Boxing.html</anchorfile>
      <anchor>ac12c14f62caa5def812f185580f1494b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>removeNamespaces</name>
      <anchorfile>classaworx_1_1lib_1_1debug_1_1Boxing.html</anchorfile>
      <anchor>a81097c7f5010e677484de7129688bc12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>StringVector</type>
      <name>strings</name>
      <anchorfile>classaworx_1_1lib_1_1debug_1_1Boxing.html</anchorfile>
      <anchor>a4877fe5eba7d052ddf9c9dbe87ade7c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AString</type>
      <name>target</name>
      <anchorfile>classaworx_1_1lib_1_1debug_1_1Boxing.html</anchorfile>
      <anchor>a782151d24530c70cef193f27597731cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ALIB_API String64</type>
      <name>GetType</name>
      <anchorfile>classaworx_1_1lib_1_1debug_1_1Boxing.html</anchorfile>
      <anchor>abfde53d8740093f4bb9f443438912cde</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API</type>
      <name>Boxing</name>
      <anchorfile>classaworx_1_1lib_1_1debug_1_1Boxing.html</anchorfile>
      <anchor>ad13fc2fa2999879ef7b92674f2c76c69</anchor>
      <arglist>(bool removeALibNamespaces=true)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API AString &amp;</type>
      <name>Dump</name>
      <anchorfile>classaworx_1_1lib_1_1debug_1_1Boxing.html</anchorfile>
      <anchor>a493a46ed7dffa100751f59068150cef1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>GetBoxingInfo</name>
      <anchorfile>classaworx_1_1lib_1_1debug_1_1Boxing.html</anchorfile>
      <anchor>af1f24407901f6084d1c0678648411373</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API StringVector &amp;</type>
      <name>GetInterfaces</name>
      <anchorfile>classaworx_1_1lib_1_1debug_1_1Boxing.html</anchorfile>
      <anchor>a2f85fbde29f81dc47c9db1cb5574cdfe</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API StringVector &amp;</type>
      <name>GetKnownBoxTypes</name>
      <anchorfile>classaworx_1_1lib_1_1debug_1_1Boxing.html</anchorfile>
      <anchor>a6f01cc6f5d488b2a9ef42e857ed07e31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API StringVector &amp;</type>
      <name>GetKnownInterfaceDefaults</name>
      <anchorfile>classaworx_1_1lib_1_1debug_1_1Boxing.html</anchorfile>
      <anchor>aa25a4bb1a67fb47634d517bfb3e1c48d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API StringVector &amp;</type>
      <name>GetKnownInterfaceImplementations</name>
      <anchorfile>classaworx_1_1lib_1_1debug_1_1Boxing.html</anchorfile>
      <anchor>a8ae85a6757cdd7f90254fcbd4aafb247</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API StringVector &amp;</type>
      <name>GetKnownInterfaces</name>
      <anchorfile>classaworx_1_1lib_1_1debug_1_1Boxing.html</anchorfile>
      <anchor>ae0a330283bcf5506160628c3103b7cd6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API AString &amp;</type>
      <name>GetTypeName</name>
      <anchorfile>classaworx_1_1lib_1_1debug_1_1Boxing.html</anchorfile>
      <anchor>a5c508f7d912e502d6e44743a1038bbc2</anchor>
      <arglist>(const std::type_info &amp;type)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>dumpHelper</name>
      <anchorfile>classaworx_1_1lib_1_1debug_1_1Boxing.html</anchorfile>
      <anchor>a41d5c2c23c9f7f21bda7c3b8298c7bde</anchor>
      <arglist>(const std::vector&lt; const std::type_info *&gt; &amp;list, const String &amp;headline, const String &amp;indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>typesToStrings</name>
      <anchorfile>classaworx_1_1lib_1_1debug_1_1Boxing.html</anchorfile>
      <anchor>a89c380b9a4837b30c6fe4f1a1da33cff</anchor>
      <arglist>(const std::vector&lt; const std::type_info *&gt; &amp;list)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::boxing::Boxing</name>
    <filename>classaworx_1_1lib_1_1boxing_1_1Boxing.html</filename>
    <base>aworx::lib::lang::Library</base>
    <member kind="function">
      <type>ALIB_API std::vector&lt; const std::type_info * &gt;</type>
      <name>DbgGetDefaultInterfaces</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Boxing.html</anchorfile>
      <anchor>ae3eb64b459dc5813723d650ec1da43a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API std::vector&lt; const std::type_info * &gt;</type>
      <name>DbgGetInterfaces</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Boxing.html</anchorfile>
      <anchor>a2cdb9dc37645e581ecca4a45376f287a</anchor>
      <arglist>(const std::type_info &amp;boxerType)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API std::vector&lt; const std::type_info * &gt;</type>
      <name>DbgGetKnownBoxers</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Boxing.html</anchorfile>
      <anchor>a928b4f70113d24da32ea6895b79ab2e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API std::vector&lt; const std::type_info * &gt;</type>
      <name>DbgGetKnownInterfaceImpl</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Boxing.html</anchorfile>
      <anchor>aa4c2f7712ed86c42a710b567a8570934</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API std::vector&lt; const std::type_info * &gt;</type>
      <name>DbgGetKnownInterfaces</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Boxing.html</anchorfile>
      <anchor>ad0e6afc9d06b2ddd35d5fc8f70bf3283</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Box</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Boxing.html</anchorfile>
      <anchor>a3f229d41a6747c1fd12cbe102d06b13c</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Boxer</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Boxing.html</anchorfile>
      <anchor>a7844c1eb8fd4d4c21a52d03582725afe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TypeMap&lt; Boxer * &gt;</type>
      <name>dbgKnownBoxers</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Boxing.html</anchorfile>
      <anchor>a8239ad31e0b1f5ded21b40209035b9d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TypeMap&lt; Interface * &gt;</type>
      <name>dbgKnownInterfaceImpl</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Boxing.html</anchorfile>
      <anchor>aa2dab52a399094d01a6c025ac9c6f9c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TypeMap&lt; Interface * &gt;</type>
      <name>dbgKnownInterfaces</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Boxing.html</anchorfile>
      <anchor>ad6c3af9eae7d32129983b3b2f4cfa0ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALIB_API void</type>
      <name>dbgCheckNewBoxer</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Boxing.html</anchorfile>
      <anchor>a958603264067bcbdf8b4b17b1f671415</anchor>
      <arglist>(Boxer *boxer)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALIB_API void</type>
      <name>debugCheckInterfaceExists</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Boxing.html</anchorfile>
      <anchor>a97eaa89ebc5261c53fa42ad98a3268ed</anchor>
      <arglist>(const std::type_info &amp;ifType)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Boxing.html</anchorfile>
      <anchor>a0f7439457156e6270dfd3ccfd07e1ea1</anchor>
      <arglist>(Phases phase) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>terminationCleanUp</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Boxing.html</anchorfile>
      <anchor>a7f9483d9dee8eaaeae3831a8bb40731e</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::time::CalendarTime</name>
    <filename>classaworx_1_1lib_1_1time_1_1CalendarTime.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>Day</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1CalendarTime.html</anchorfile>
      <anchor>a8f67164de537e3ec2b47e3204ddd3400</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>DayOfWeek</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1CalendarTime.html</anchorfile>
      <anchor>ac3213e69636923e6b0b41a0e388f79ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Hour</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1CalendarTime.html</anchorfile>
      <anchor>a9a7e982c278ab66497180395ad975b4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Millisecond</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1CalendarTime.html</anchorfile>
      <anchor>af3cfef93e0bc093468e23c7e8768ce62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Minute</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1CalendarTime.html</anchorfile>
      <anchor>a361937b5d839c9e24d045e2fb21933ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Month</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1CalendarTime.html</anchorfile>
      <anchor>a530b376ec91a278ac98531d3ea17f148</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Second</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1CalendarTime.html</anchorfile>
      <anchor>af95fdbfb8f07e751f4396ef15bc70b5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Year</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1CalendarTime.html</anchorfile>
      <anchor>a42e645110404fbf4f10235789577fa32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CalendarTime</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1CalendarTime.html</anchorfile>
      <anchor>aadf57e815524d304e760d3ebd3dafd09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CalendarTime</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1CalendarTime.html</anchorfile>
      <anchor>ac8ea729edd183aa317ac72af54f4a851</anchor>
      <arglist>(const TimeStamp timeStamp, lang::Timezone timezone=lang::Timezone::Local)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CalendarTime</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1CalendarTime.html</anchorfile>
      <anchor>ace637a37495c0455ee59c9bf1c671947</anchor>
      <arglist>(int year, int month=1, int day=1, int hour=0, int minute=0, int second=0, int millisecond=0)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>Clear</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1CalendarTime.html</anchorfile>
      <anchor>aa71d36872f416feaa853788a7a7a7ef8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API AString &amp;</type>
      <name>Format</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1CalendarTime.html</anchorfile>
      <anchor>a5f8b45eacc1df79cc9c57643af12defc</anchor>
      <arglist>(Substring format, AString &amp;target, lib::lang::CurrentData targetData=lib::lang::CurrentData::Keep)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API TimeStamp</type>
      <name>Get</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1CalendarTime.html</anchorfile>
      <anchor>a909dbdede4cc0d8cc7cc38e87305fd77</anchor>
      <arglist>(lang::Timezone timezone=lang::Timezone::Local)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1CalendarTime.html</anchorfile>
      <anchor>aea7027009b61ce7cbe58f16a4c132d13</anchor>
      <arglist>(TimeStamp timeStamp, lang::Timezone timezone=lang::Timezone::Local)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::config::CLIArgs</name>
    <filename>classaworx_1_1lib_1_1config_1_1CLIArgs.html</filename>
    <base>aworx::lib::config::ConfigurationPlugin</base>
    <member kind="variable">
      <type>int</type>
      <name>AllowedMinimumShortCut</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1CLIArgs.html</anchorfile>
      <anchor>ab42ae436a939016d1ca823885bbab629</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; String &gt;</type>
      <name>DefaultCategories</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1CLIArgs.html</anchorfile>
      <anchor>a4cc414f7da847e2781e4cbe1a8c8c81b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CLIArgs</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1CLIArgs.html</anchorfile>
      <anchor>ade61b01fa731f1d6ff1fac1229c6487d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CLIArgs</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1CLIArgs.html</anchorfile>
      <anchor>a6fc671e5dae4f522dabc46c08187c5ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API Iterator *</type>
      <name>GetIterator</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1CLIArgs.html</anchorfile>
      <anchor>a46faa9cb170187ab6a7d2186b3db43e5</anchor>
      <arglist>(const String &amp;sectionName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API bool</type>
      <name>Load</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1CLIArgs.html</anchorfile>
      <anchor>ae644fb31eb15b9f85800a8d3327e2433</anchor>
      <arglist>(Variable &amp;variable, bool searchOnly=false) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>Name</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1CLIArgs.html</anchorfile>
      <anchor>a8f6daf3aa257e7df25ffd8eb04a072bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetArgs</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1CLIArgs.html</anchorfile>
      <anchor>a4a51a7682dc2dadfeb3e3dea96fed5eb</anchor>
      <arglist>(int argc, void **argv=nullptr, bool areWideChar=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetArgs</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1CLIArgs.html</anchorfile>
      <anchor>ad30c5ce1da441ac596dbb911695b648f</anchor>
      <arglist>(std::vector&lt; String &gt; *unrecognizedOptions)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend bool</type>
      <name>detail::nextCLIArg</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1CLIArgs.html</anchorfile>
      <anchor>ad24fc6cc5489301e3dda46f8038a54b0</anchor>
      <arglist>(CLIArgs &amp;, size_t &amp;, const String &amp;, Variable &amp;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>argCount</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1CLIArgs.html</anchorfile>
      <anchor>a4d5543642afdc7a5bfb39bc1e190e39a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; String &gt; *</type>
      <name>args</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1CLIArgs.html</anchorfile>
      <anchor>aaee0c94daa5e616c880b8e8d5d7418d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>void **</type>
      <name>argVector</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1CLIArgs.html</anchorfile>
      <anchor>a8ebc25303c95cda1d9fc68f1c694fb5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>wArgs</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1CLIArgs.html</anchorfile>
      <anchor>aa12d3084f7f24b687e9495935fddb6ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::config::Config</name>
    <filename>classaworx_1_1lib_1_1config_1_1Config.html</filename>
    <base>aworx::lib::lang::Library</base>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Config.html</anchorfile>
      <anchor>a0f7439457156e6270dfd3ccfd07e1ea1</anchor>
      <arglist>(Phases phase) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>terminationCleanUp</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Config.html</anchorfile>
      <anchor>a7f9483d9dee8eaaeae3831a8bb40731e</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::config::Configuration</name>
    <filename>classaworx_1_1lib_1_1config_1_1Configuration.html</filename>
    <base>PluginContainer&lt; ConfigurationPlugin, Priorities &gt;</base>
    <class kind="class">aworx::lib::config::Configuration::Iterator</class>
    <member kind="variable">
      <type>strings::NumberFormat</type>
      <name>NumberFormat</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Configuration.html</anchorfile>
      <anchor>a9bfa3473e5c94dafa94ae1339fe70a48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TString</type>
      <name>SubstitutionVariableDelimiters</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Configuration.html</anchorfile>
      <anchor>a822c543b34c30995bd4b8d7df220af83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TString</type>
      <name>SubstitutionVariableEnd</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Configuration.html</anchorfile>
      <anchor>af688cf13bb219d944adb4731a227451d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TString</type>
      <name>SubstitutionVariableStart</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Configuration.html</anchorfile>
      <anchor>ab1b62c82d8f31bc322674109a0aaa905</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; String &gt;</type>
      <name>TrueValues</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Configuration.html</anchorfile>
      <anchor>a5848fc835514e61005938ea4c9b9b772</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ALIB_API</type>
      <name>Configuration</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Configuration.html</anchorfile>
      <anchor>ab7711c27e91b3aa0ad23a1ec020f1c73</anchor>
      <arglist>(bool addDefaultPlugins=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API</type>
      <name>~Configuration</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Configuration.html</anchorfile>
      <anchor>a09dcd47e8d29f55ef5515d6413d42d16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API int</type>
      <name>FetchFromDefault</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Configuration.html</anchorfile>
      <anchor>a2a8327212b95a8eb1fc6817c6376327b</anchor>
      <arglist>(ConfigurationPlugin &amp;dest, const String &amp;section=NullString)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API Iterator *</type>
      <name>GetIterator</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Configuration.html</anchorfile>
      <anchor>a86be441029df719e05e39518527bfa30</anchor>
      <arglist>(const String &amp;sectionName)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API bool</type>
      <name>IsTrue</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Configuration.html</anchorfile>
      <anchor>aa0da6e72e76dfd9415dedd65569f8d02</anchor>
      <arglist>(const String &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API Priorities</type>
      <name>Load</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Configuration.html</anchorfile>
      <anchor>a54eb8ca9a9f484609edf27bc57af2e73</anchor>
      <arglist>(Variable &amp;variable)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API int</type>
      <name>LoadFromString</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Configuration.html</anchorfile>
      <anchor>a48c507c3c7310d208de387fa51579ee8</anchor>
      <arglist>(Variable &amp;variable, const String &amp;externalizedValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PreloadVariables</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Configuration.html</anchorfile>
      <anchor>af95cc36a7e678d2107395a5f4b599ead</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API Priorities</type>
      <name>Protect</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Configuration.html</anchorfile>
      <anchor>ab16dd774047229b1e87d491cb297bdf9</anchor>
      <arglist>(Variable &amp;variable, const String &amp;externalizedValue=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCommandLineArgs</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Configuration.html</anchorfile>
      <anchor>a0b8d8859cf4ec741098d699081779432</anchor>
      <arglist>(int argc=0, char **argv=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCommandLineArgs</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Configuration.html</anchorfile>
      <anchor>ab18bdd6003c1535f7ae331e1064d8b42</anchor>
      <arglist>(int argc, wchar_t **argv)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API Priorities</type>
      <name>Store</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Configuration.html</anchorfile>
      <anchor>a972bad3145dc66bea80921d0e67eadad</anchor>
      <arglist>(Variable &amp;variable, const String &amp;externalizedValue=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API Priorities</type>
      <name>StoreDefault</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Configuration.html</anchorfile>
      <anchor>ad268402c30f7a69143567776075589df</anchor>
      <arglist>(Variable &amp;variable, const String &amp;externalizedValue=nullptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALIB_API Priorities</type>
      <name>loadImpl</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Configuration.html</anchorfile>
      <anchor>afb2f9029c27017205630b2ee39bb7ab2</anchor>
      <arglist>(Variable &amp;variable, bool substitute)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::config::ConfigurationPlugin</name>
    <filename>classaworx_1_1lib_1_1config_1_1ConfigurationPlugin.html</filename>
    <class kind="class">aworx::lib::config::ConfigurationPlugin::Iterator</class>
    <member kind="variable">
      <type>XTernalizer *</type>
      <name>StringConverter</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1ConfigurationPlugin.html</anchorfile>
      <anchor>a150967a58e76635889b4082537c67a2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConfigurationPlugin</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1ConfigurationPlugin.html</anchorfile>
      <anchor>a03ff3650053c51f7cd230cb7b8b51f3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Iterator *</type>
      <name>GetIterator</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1ConfigurationPlugin.html</anchorfile>
      <anchor>a034b330cd5763763a5b929788f00c5a9</anchor>
      <arglist>(const String &amp;sectionName)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ALIB_API bool</type>
      <name>Load</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1ConfigurationPlugin.html</anchorfile>
      <anchor>a70e67cd810ebe58dcc842dbeaa715443</anchor>
      <arglist>(Variable &amp;variable, bool searchOnly=false) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual String</type>
      <name>Name</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1ConfigurationPlugin.html</anchorfile>
      <anchor>abf72e93cf60de39c0c2d801d4af18818</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Store</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1ConfigurationPlugin.html</anchorfile>
      <anchor>a4f2a984c2c2f6283441afc5187da6f2e</anchor>
      <arglist>(Variable &amp;variable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Store</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1ConfigurationPlugin.html</anchorfile>
      <anchor>a283b076bd741a168847a799efb291b33</anchor>
      <arglist>(Variable &amp;variable, const String &amp;externalizedValue)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>XTernalizer</type>
      <name>defaultStringConverter</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1ConfigurationPlugin.html</anchorfile>
      <anchor>a3b754bcc322da1d59d62b19ba50b3a5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ConfigurationPlugin</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1ConfigurationPlugin.html</anchorfile>
      <anchor>a1b50bf18ad3d087799d832b6d15b258e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lox::loggers::ConsoleLogger</name>
    <filename>classaworx_1_1lox_1_1loggers_1_1ConsoleLogger.html</filename>
    <base>aworx::lox::core::textlogger::PlainTextLogger</base>
    <member kind="function">
      <type></type>
      <name>ConsoleLogger</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1ConsoleLogger.html</anchorfile>
      <anchor>a125af672dcbe9fbde266699050701770</anchor>
      <arglist>(const String &amp;name=nullptr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConsoleLogger</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1ConsoleLogger.html</anchorfile>
      <anchor>a804d9d5558b46a55a78a22be5d23778a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ALIB_API integer</type>
      <name>logSubstring</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1ConsoleLogger.html</anchorfile>
      <anchor>a68bd74d81d07f7f6de0293d4065b99a7</anchor>
      <arglist>(const String &amp;buffer, integer start, integer length)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ALIB_API bool</type>
      <name>notifyLogOp</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1ConsoleLogger.html</anchorfile>
      <anchor>a883624bfdbedf434421f38c800cc61f5</anchor>
      <arglist>(lib::lang::Phase phase)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>notifyMultiLineOp</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1ConsoleLogger.html</anchorfile>
      <anchor>a7cf9f0c4d2657cff2f8acdfa3778f18a</anchor>
      <arglist>(lib::lang::Phase)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::strings::CString</name>
    <filename>classaworx_1_1lib_1_1strings_1_1CString.html</filename>
    <member kind="variable" static="yes">
      <type>static const integer</type>
      <name>MaxLen</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1CString.html</anchorfile>
      <anchor>a854222d062dd7b383aff419dac1b8481</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>AdjustRegion</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1CString.html</anchorfile>
      <anchor>ab2143dda4c7bba75ef8bdf9e4276908b</anchor>
      <arglist>(integer referenceLength, integer &amp;regionStart, integer &amp;regionLength)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ALIB_API integer</type>
      <name>IndexOfAnyExcluded</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1CString.html</anchorfile>
      <anchor>a8b7fb0087e4f2bb85f43732f4f431e51</anchor>
      <arglist>(const char *haystack, integer haystackLength, const char *needles, integer needlesLength)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ALIB_API integer</type>
      <name>IndexOfAnyIncluded</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1CString.html</anchorfile>
      <anchor>a357655a103be1f5e2c2b2f5b39735949</anchor>
      <arglist>(const char *haystack, integer haystackLength, const char *needles, integer needlesLength)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ALIB_API integer</type>
      <name>IndexOfFirstDifference</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1CString.html</anchorfile>
      <anchor>a27fb0036e031eed866348bcb2b107046</anchor>
      <arglist>(const char *haystack, integer haystackLength, const char *needle, integer needleLength, lang::Case sensitivity)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ALIB_API integer</type>
      <name>LastIndexOfAnyExclude</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1CString.html</anchorfile>
      <anchor>a8cca212e51947505f8e8a34b3e368045</anchor>
      <arglist>(const char *haystack, integer startIdx, const char *needles, integer needlesLength)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ALIB_API integer</type>
      <name>LastIndexOfAnyInclude</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1CString.html</anchorfile>
      <anchor>a62b8955685572b11cce54dc5232c07a7</anchor>
      <arglist>(const char *haystack, integer startIdx, const char *needles, integer needlesLength)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ALIB_API integer</type>
      <name>LengthWhenConvertedToWChar</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1CString.html</anchorfile>
      <anchor>aa4f8fd08078e765b593e27bc6712cc74</anchor>
      <arglist>(const char *cs, integer csLength)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>strncasecmp</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1CString.html</anchorfile>
      <anchor>a807597254df1852399fd47f85b0e9a5e</anchor>
      <arglist>(const char *cs1, const char *cs2, integer cmpLength)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::util::StringTree::Cursor</name>
    <filename>classaworx_1_1lib_1_1util_1_1StringTree_1_1Cursor.html</filename>
    <member kind="function">
      <type></type>
      <name>Cursor</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Cursor.html</anchorfile>
      <anchor>aac48d32ae03fdb956a08ecc8c36e9ca9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Cursor</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Cursor.html</anchorfile>
      <anchor>a9d2203168bb2489b91572f716cf7ef02</anchor>
      <arglist>(StdIterator &amp;_iterator)</arglist>
    </member>
    <member kind="function">
      <type>StdIterator</type>
      <name>begin</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Cursor.html</anchorfile>
      <anchor>a7794c681cde49fe79ce350908e021046</anchor>
      <arglist>(int _recursionDepth=1)</arglist>
    </member>
    <member kind="function">
      <type>Cursor</type>
      <name>Clone</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Cursor.html</anchorfile>
      <anchor>a716af637049daa5f0a7c9ef4d68c4990</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeleteChild</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Cursor.html</anchorfile>
      <anchor>a7a295ee417e1a43185684997b60c1d2c</anchor>
      <arglist>(const String &amp;childName) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>DeleteChildren</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Cursor.html</anchorfile>
      <anchor>a63f4720668cc61ddf555b470b9eec188</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Depth</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Cursor.html</anchorfile>
      <anchor>a72fdcb31622fdd4b1197a207a6a6685e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StdIterator</type>
      <name>end</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Cursor.html</anchorfile>
      <anchor>a9ea1f4bf0ddd2e732a5552084cdecc45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StringTree &amp;</type>
      <name>GetStringTree</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Cursor.html</anchorfile>
      <anchor>aea0054286adc014b8b284ebfc31db385</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsInvalid</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Cursor.html</anchorfile>
      <anchor>aad9bf43dc400b86b4afe746243f6d3fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsRoot</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Cursor.html</anchorfile>
      <anchor>ac8cbef7a1c768ebd43aa897165044ecf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsValid</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Cursor.html</anchorfile>
      <anchor>a9dcb9b43a3d0fa9003d4c1c9d921f6b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MoveTo</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Cursor.html</anchorfile>
      <anchor>a21206644be243178e0e95deade9b8414</anchor>
      <arglist>(const String &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MoveToAndCreateNonExistingPart</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Cursor.html</anchorfile>
      <anchor>acb8e5ddc037c4ff8db8150ed5ccbc890</anchor>
      <arglist>(const String &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MoveToChild</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Cursor.html</anchorfile>
      <anchor>ae96a4d518a6f17184d8e5a31565f8dfe</anchor>
      <arglist>(const String &amp;childName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MoveToChildCreate</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Cursor.html</anchorfile>
      <anchor>a3c8dc99948de5c8c6cb02ef31324547d</anchor>
      <arglist>(const String &amp;childName)</arglist>
    </member>
    <member kind="function">
      <type>Substring</type>
      <name>MoveToExistingPart</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Cursor.html</anchorfile>
      <anchor>aedaf3d8965224d5bee561a01fcb66929</anchor>
      <arglist>(const String &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MoveToParent</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Cursor.html</anchorfile>
      <anchor>af240df28a6292c10753b81de82f40b47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MoveToParentUnchecked</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Cursor.html</anchorfile>
      <anchor>a92b32ed64afe9459f6b6673712e990f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Cursor.html</anchorfile>
      <anchor>a6493e37b9a61ba82726b9fb938bcc820</anchor>
      <arglist>(const Cursor &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator*</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Cursor.html</anchorfile>
      <anchor>a7dec280fcc6cd89b58980bbd6ca0d275</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Cursor.html</anchorfile>
      <anchor>ae239ee88a87c5bb30f1a81c143a0e063</anchor>
      <arglist>(const Cursor &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Cursor &amp;</type>
      <name>Root</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Cursor.html</anchorfile>
      <anchor>a4fbe8b40cbff94ba584dec59d6e868f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const String</type>
      <name>SearchName</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Cursor.html</anchorfile>
      <anchor>afb35c61dc3e6668614ce42afaede10cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SearchNodeNameAndDeleteNode</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Cursor.html</anchorfile>
      <anchor>a67b309c45890aeb5709b39ffdae0c89b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SearchPath</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Cursor.html</anchorfile>
      <anchor>aef2244cb6839ab29120afe9458c5b399</anchor>
      <arglist>(AString &amp;target, CurrentData targetData=CurrentData::Clear)</arglist>
    </member>
    <member kind="function">
      <type>StdIterator &amp;</type>
      <name>SetIterator</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Cursor.html</anchorfile>
      <anchor>af9bfedce967aba5eb6555765512bb65d</anchor>
      <arglist>(StdIterator &amp;it, int _recursionDepth=1)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Size</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Cursor.html</anchorfile>
      <anchor>af40990b9bd3d70d30e8ce7cdda1ad56f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>StringTree</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Cursor.html</anchorfile>
      <anchor>aa42c89c0eaa357d95820842673034eed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Node *</type>
      <name>node</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Cursor.html</anchorfile>
      <anchor>ab88cd70dad2e152cea983610f2a16e68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>StringTree *</type>
      <name>stringTree</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Cursor.html</anchorfile>
      <anchor>a836095184e69ee547f80ebf11de862d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static Node *</type>
      <name>createPathAndReturnLeafx</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Cursor.html</anchorfile>
      <anchor>a6ad9c435e482540972582af733a35d95</anchor>
      <arglist>(Node *node, Substring &amp;path)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static Node *</type>
      <name>followPath</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Cursor.html</anchorfile>
      <anchor>a932dda062ac3a04fa7d5edce7bc3c833</anchor>
      <arglist>(Node *node, Substring &amp;path)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Cursor</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Cursor.html</anchorfile>
      <anchor>a837dd68f9d999b0366354e09c1db4860</anchor>
      <arglist>(StringTree *_stringTree, Node *_node)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::system::Directory</name>
    <filename>classaworx_1_1lib_1_1system_1_1Directory.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>SpecialFolder</name>
      <anchorfile>classaworx_1_1lib_1_1system_1_1Directory.html</anchorfile>
      <anchor>a12c335c8e07182c17395a8f46f1965f0</anchor>
      <arglist></arglist>
      <enumvalue file="classaworx_1_1lib_1_1system_1_1Directory.html" anchor="a12c335c8e07182c17395a8f46f1965f0afa03eb688ad8aa1db593d33dabd89bad">Root</enumvalue>
      <enumvalue file="classaworx_1_1lib_1_1system_1_1Directory.html" anchor="a12c335c8e07182c17395a8f46f1965f0a222a267cc5778206b253be35ee3ddab5">Current</enumvalue>
      <enumvalue file="classaworx_1_1lib_1_1system_1_1Directory.html" anchor="a12c335c8e07182c17395a8f46f1965f0a8cf04a9734132302f96da8e113e80ce5">Home</enumvalue>
      <enumvalue file="classaworx_1_1lib_1_1system_1_1Directory.html" anchor="a12c335c8e07182c17395a8f46f1965f0ae94961474a646742838ed46f32f89a47">HomeConfig</enumvalue>
      <enumvalue file="classaworx_1_1lib_1_1system_1_1Directory.html" anchor="a12c335c8e07182c17395a8f46f1965f0ae55f75a29310d7b60f7ac1d390c8ae42">Module</enumvalue>
      <enumvalue file="classaworx_1_1lib_1_1system_1_1Directory.html" anchor="a12c335c8e07182c17395a8f46f1965f0a9a438bd942f1f19e6a641028bcfb43ff">Temp</enumvalue>
      <enumvalue file="classaworx_1_1lib_1_1system_1_1Directory.html" anchor="a12c335c8e07182c17395a8f46f1965f0ac42dbffd040a78993701573319deb9be">VarTemp</enumvalue>
    </member>
    <member kind="variable" static="yes">
      <type>static AString</type>
      <name>evaluatedTempDir</name>
      <anchorfile>classaworx_1_1lib_1_1system_1_1Directory.html</anchorfile>
      <anchor>ad0c1b40acd899ebb5f0388779ed4d1dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static AString</type>
      <name>evaluatedVarTempDir</name>
      <anchorfile>classaworx_1_1lib_1_1system_1_1Directory.html</anchorfile>
      <anchor>a4b09df20093589aae45a102d72bca303</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String256</type>
      <name>Path</name>
      <anchorfile>classaworx_1_1lib_1_1system_1_1Directory.html</anchorfile>
      <anchor>a7a1498c6111483e7acf3a52bef418c09</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ALIB_API SystemErrors</type>
      <name>Create</name>
      <anchorfile>classaworx_1_1lib_1_1system_1_1Directory.html</anchorfile>
      <anchor>a68a884e9cabe148395138363401c80fe</anchor>
      <arglist>(const TString &amp;path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ALIB_API bool</type>
      <name>CurrentDirectory</name>
      <anchorfile>classaworx_1_1lib_1_1system_1_1Directory.html</anchorfile>
      <anchor>a06845a767764e37766027392413e068f</anchor>
      <arglist>(AString &amp;target)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ALIB_API bool</type>
      <name>Exists</name>
      <anchorfile>classaworx_1_1lib_1_1system_1_1Directory.html</anchorfile>
      <anchor>a348d7a37454d70c73f2b7e4106b5389a</anchor>
      <arglist>(const TString &amp;path)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Directory</name>
      <anchorfile>classaworx_1_1lib_1_1system_1_1Directory.html</anchorfile>
      <anchor>afb2dc4e4a36ed39171b54c55bc38d136</anchor>
      <arglist>(SpecialFolder special)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Directory</name>
      <anchorfile>classaworx_1_1lib_1_1system_1_1Directory.html</anchorfile>
      <anchor>a3d2aef8216e51d8fea90c4f4b4f26959</anchor>
      <arglist>(const String &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API bool</type>
      <name>Change</name>
      <anchorfile>classaworx_1_1lib_1_1system_1_1Directory.html</anchorfile>
      <anchor>a27964fd8269b71c00bf2d4dd884c2a97</anchor>
      <arglist>(const String &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>Change</name>
      <anchorfile>classaworx_1_1lib_1_1system_1_1Directory.html</anchorfile>
      <anchor>a7368f768fd59c3290b53722fa245c319</anchor>
      <arglist>(SpecialFolder special)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lox::core::Domain</name>
    <filename>classaworx_1_1lox_1_1core_1_1Domain.html</filename>
    <class kind="struct">aworx::lox::core::Domain::LoggerData</class>
    <member kind="variable">
      <type>int</type>
      <name>CntLogCalls</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Domain.html</anchorfile>
      <anchor>a2c80e5630abe5d5042ddb4b85c0c3562</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>ConfigurationRead</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Domain.html</anchorfile>
      <anchor>a6b8f94546fd5c1c564c2bfe0fee6c770</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; LoggerData &gt;</type>
      <name>Data</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Domain.html</anchorfile>
      <anchor>ae084fa950af8593b424bb0f75fba7a0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String64</type>
      <name>FullPath</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Domain.html</anchorfile>
      <anchor>a5249fc60e18f9a0e7e7ffd24a20dbec9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String32</type>
      <name>Name</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Domain.html</anchorfile>
      <anchor>ab3c68b8a64bf47454f94bde4ebb6de0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Domain *</type>
      <name>Parent</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Domain.html</anchorfile>
      <anchor>a1d350b8d568b2886bda3a5f093adc1bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; PrefixLogable *, Inclusion &gt; &gt;</type>
      <name>PrefixLogables</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Domain.html</anchorfile>
      <anchor>a23eb999f70df20a1bfb13d33410eb3ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Domain * &gt;</type>
      <name>SubDomains</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Domain.html</anchorfile>
      <anchor>a45607390dc4f3ea0f79c1ee1a08a777b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr char</type>
      <name>Separator</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Domain.html</anchorfile>
      <anchor>a5d34c67477a6f6f1a0a3803f1300cf2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API</type>
      <name>Domain</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Domain.html</anchorfile>
      <anchor>a30f0d2a14dee624bd33d7852e9bb8670</anchor>
      <arglist>(Domain *parent, const String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API</type>
      <name>~Domain</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Domain.html</anchorfile>
      <anchor>aab7e32c77383bf3d384c5c1ab492cd2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>AddLogger</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Domain.html</anchorfile>
      <anchor>af6b2bbb7cabe76ef457594558aac85f8</anchor>
      <arglist>(core::Logger *logger)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CountLoggers</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Domain.html</anchorfile>
      <anchor>a99a4aca5fd12818f7a0718ff1bf37c9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API Domain *</type>
      <name>Find</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Domain.html</anchorfile>
      <anchor>ae1f7b406433ac2f94fff187ced67c068</anchor>
      <arglist>(Substring domainPath, int maxCreate, bool *wasCreated)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetCount</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Domain.html</anchorfile>
      <anchor>a20db10bae0149b8f99461370b2b3fd48</anchor>
      <arglist>(int loggerNo)</arglist>
    </member>
    <member kind="function">
      <type>core::Logger *</type>
      <name>GetLogger</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Domain.html</anchorfile>
      <anchor>a2c5c025862458ad7bd56bff6a0e3ea0c</anchor>
      <arglist>(const String &amp;loggerName)</arglist>
    </member>
    <member kind="function">
      <type>core::Logger *</type>
      <name>GetLogger</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Domain.html</anchorfile>
      <anchor>a7a091eb804deb77940227c78f4c36ad7</anchor>
      <arglist>(int no)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetLoggerNo</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Domain.html</anchorfile>
      <anchor>a2657f04b274350d1a8e01747e125ece4</anchor>
      <arglist>(const String &amp;loggerName)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetLoggerNo</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Domain.html</anchorfile>
      <anchor>aa47720e17d76f442124d5c279b9d0287</anchor>
      <arglist>(core::Logger *logger)</arglist>
    </member>
    <member kind="function">
      <type>Priorities</type>
      <name>GetPriority</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Domain.html</anchorfile>
      <anchor>a8050ccfd358706521ebfdff0400683ee</anchor>
      <arglist>(int loggerNo)</arglist>
    </member>
    <member kind="function">
      <type>Domain *</type>
      <name>GetRoot</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Domain.html</anchorfile>
      <anchor>a3fbb171d3b615727af29167b4cb61c4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Verbosity</type>
      <name>GetVerbosity</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Domain.html</anchorfile>
      <anchor>a19ec6c97f7e17ca51908a7174e43f2bd</anchor>
      <arglist>(int loggerNo)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsActive</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Domain.html</anchorfile>
      <anchor>a6dc8fbb3427c720adda3ed3a807f9902</anchor>
      <arglist>(int loggerNo, Verbosity statement)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveLogger</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Domain.html</anchorfile>
      <anchor>a9aa2e7ebee563c92c3335f9a3b4a574c</anchor>
      <arglist>(int loggerNo)</arglist>
    </member>
    <member kind="function">
      <type>Verbosity</type>
      <name>SetVerbosity</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Domain.html</anchorfile>
      <anchor>a52b1890fd7c1c291bdd26bb8b3ecfd48</anchor>
      <arglist>(int loggerNo, Verbosity verbosity, Priorities priority)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ToString</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Domain.html</anchorfile>
      <anchor>a40a66924a70652623c5e6bceaff3d62e</anchor>
      <arglist>(AString &amp;target)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addLoggerRecursive</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Domain.html</anchorfile>
      <anchor>a60a0f660238122080765f3d2e7a2e95d</anchor>
      <arglist>(core::Logger *logger)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Domain *</type>
      <name>findRecursive</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Domain.html</anchorfile>
      <anchor>aeee491778091286ea31ad1294b53afd8</anchor>
      <arglist>(Substring &amp;domainPath, int maxCreate, bool *wasCreated)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>removeLoggerRecursive</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Domain.html</anchorfile>
      <anchor>a1b032fcdfc7306d529107bcd28145b66</anchor>
      <arglist>(int loggerNo)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lox::Lox::DomainSubstitutionRule</name>
    <filename>structaworx_1_1lox_1_1Lox_1_1DomainSubstitutionRule.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>structaworx_1_1lox_1_1Lox_1_1DomainSubstitutionRule.html</anchorfile>
      <anchor>a1d1cfd8ffb84e947f82999c682b666a7</anchor>
      <arglist></arglist>
      <enumvalue file="structaworx_1_1lox_1_1Lox_1_1DomainSubstitutionRule.html" anchor="a1d1cfd8ffb84e947f82999c682b666a7a1649aed298f99d587e2eb30c1db5946b">Exact</enumvalue>
      <enumvalue file="structaworx_1_1lox_1_1Lox_1_1DomainSubstitutionRule.html" anchor="a1d1cfd8ffb84e947f82999c682b666a7a9d1a2cba952f9245c54397bbbf3e8183">StartsWith</enumvalue>
      <enumvalue file="structaworx_1_1lox_1_1Lox_1_1DomainSubstitutionRule.html" anchor="a1d1cfd8ffb84e947f82999c682b666a7a213068b7e25d045126e9b1702fae80db">EndsWith</enumvalue>
      <enumvalue file="structaworx_1_1lox_1_1Lox_1_1DomainSubstitutionRule.html" anchor="a1d1cfd8ffb84e947f82999c682b666a7a7ba559a2b304b4c6d34d67ed77f80345">Substring</enumvalue>
    </member>
    <member kind="variable">
      <type>String32</type>
      <name>Replacement</name>
      <anchorfile>structaworx_1_1lox_1_1Lox_1_1DomainSubstitutionRule.html</anchorfile>
      <anchor>aec5095f2fc805732629f1bfc648de05c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String32</type>
      <name>Search</name>
      <anchorfile>structaworx_1_1lox_1_1Lox_1_1DomainSubstitutionRule.html</anchorfile>
      <anchor>ac5d8cc07dc3e4eea47354e7b7f6eb8a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Type</type>
      <name>type</name>
      <anchorfile>structaworx_1_1lox_1_1Lox_1_1DomainSubstitutionRule.html</anchorfile>
      <anchor>ab6f4e6d3fde00ce906e46494f60dfe7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DomainSubstitutionRule</name>
      <anchorfile>structaworx_1_1lox_1_1Lox_1_1DomainSubstitutionRule.html</anchorfile>
      <anchor>a8c1e3c2737d4a8fc7cdba8ea546bf26d</anchor>
      <arglist>(const String &amp;s, const String &amp;r)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::config::IniFile::Entry</name>
    <filename>classaworx_1_1lib_1_1config_1_1IniFile_1_1Entry.html</filename>
    <base>aworx::lib::config::InMemoryPlugin::Entry</base>
    <member kind="variable">
      <type>AString</type>
      <name>RawValue</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1IniFile_1_1Entry.html</anchorfile>
      <anchor>a319279810337d3019a34ebd0876d09af</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Entry</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1IniFile_1_1Entry.html</anchorfile>
      <anchor>abc5302970b7c9dbce8d2303596ed5746</anchor>
      <arglist>(const String &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Entry</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1IniFile_1_1Entry.html</anchorfile>
      <anchor>a3e26c54389ec269dec020eb7a1a0a0ab</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API void</type>
      <name>FromVariable</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1IniFile_1_1Entry.html</anchorfile>
      <anchor>a7d1009ebd98fb73eef9cd9f2edf91d5d</anchor>
      <arglist>(const InMemoryPlugin &amp;parent, Variable &amp;variable) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API void</type>
      <name>ToVariable</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1IniFile_1_1Entry.html</anchorfile>
      <anchor>a38af922be0ef7e14bab9f0f9048d1ffe</anchor>
      <arglist>(const InMemoryPlugin &amp;parent, Variable &amp;variable) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::config::InMemoryPlugin::Entry</name>
    <filename>classaworx_1_1lib_1_1config_1_1InMemoryPlugin_1_1Entry.html</filename>
    <member kind="variable">
      <type>AString</type>
      <name>Comments</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1InMemoryPlugin_1_1Entry.html</anchorfile>
      <anchor>a13a7dbf15cba4c8849fdd8044b185475</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>Delim</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1InMemoryPlugin_1_1Entry.html</anchorfile>
      <anchor>a68297215ac82977611f5dee2062cc910</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FormatHints</type>
      <name>FmtHints</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1InMemoryPlugin_1_1Entry.html</anchorfile>
      <anchor>aeeb63df55d8032d350226d6e83729418</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String16</type>
      <name>FormatAttrAlignment</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1InMemoryPlugin_1_1Entry.html</anchorfile>
      <anchor>a6491695587581466d3a994ae5d9a11b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String32</type>
      <name>Name</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1InMemoryPlugin_1_1Entry.html</anchorfile>
      <anchor>ab3c68b8a64bf47454f94bde4ebb6de0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; AString &gt;</type>
      <name>Values</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1InMemoryPlugin_1_1Entry.html</anchorfile>
      <anchor>ae034b91bcff57549de332664c053c1f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Entry</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1InMemoryPlugin_1_1Entry.html</anchorfile>
      <anchor>a3a83249cddec0f05724548ff378b6fea</anchor>
      <arglist>(const String &amp;varName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Entry</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1InMemoryPlugin_1_1Entry.html</anchorfile>
      <anchor>a3dd2fcc4f5bea16effa4d6c1c04fc75d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API void</type>
      <name>FromVariable</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1InMemoryPlugin_1_1Entry.html</anchorfile>
      <anchor>a363bc8aa7b20ec279c3aca7c30eb4564</anchor>
      <arglist>(const InMemoryPlugin &amp;parent, Variable &amp;variable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API void</type>
      <name>ToVariable</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1InMemoryPlugin_1_1Entry.html</anchorfile>
      <anchor>ac2c940ca8f1f5a140cc31deab4badbaa</anchor>
      <arglist>(const InMemoryPlugin &amp;parent, Variable &amp;variable)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::lang::Exception::Entry</name>
    <filename>structaworx_1_1lib_1_1lang_1_1Exception_1_1Entry.html</filename>
    <member kind="variable">
      <type>Boxes</type>
      <name>Args</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1Exception_1_1Entry.html</anchorfile>
      <anchor>aab47361bfb602d81d213d3720f2aa677</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Enum</type>
      <name>Code</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1Exception_1_1Entry.html</anchorfile>
      <anchor>ab3cc4f545dfeafb050a7eff0c38fa7a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Library &amp;</type>
      <name>EnumLibrary</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1Exception_1_1Entry.html</anchorfile>
      <anchor>ad114770552dc497a6ca39be86169b624</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TTuple &amp;</type>
      <name>ErrorMetaData</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1Exception_1_1Entry.html</anchorfile>
      <anchor>aee098e6b11ee3a99858c3cb11271419d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const TString</type>
      <name>File</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1Exception_1_1Entry.html</anchorfile>
      <anchor>ad4b13075bee00be199f9bdd405ab7bd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const TString</type>
      <name>Func</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1Exception_1_1Entry.html</anchorfile>
      <anchor>a77e4f37c7fea6f3fe9479cc1d950390b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Line</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1Exception_1_1Entry.html</anchorfile>
      <anchor>af5b2cae791582f6f4f975f6b25290977</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Entry</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1Exception_1_1Entry.html</anchorfile>
      <anchor>a8b077f027f753b2c10b511d64270ab26</anchor>
      <arglist>(const TString &amp;file, int line, const TString &amp;func, const Enum &amp;code, Boxes &amp;args, Library &amp;enumLibrary, TTuple &amp;errorMetaData)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::lang::Enum</name>
    <filename>structaworx_1_1lib_1_1lang_1_1Enum.html</filename>
    <base>aworx::lib::boxing::Box</base>
    <member kind="function">
      <type></type>
      <name>Enum</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1Enum.html</anchorfile>
      <anchor>a09dd6cc611ad1d366ceb59e822e70592</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Enum</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1Enum.html</anchorfile>
      <anchor>a054ba945878f6c0622d32b0f4a9d1176</anchor>
      <arglist>(TEnum element)</arglist>
    </member>
    <member kind="function">
      <type>TEnum</type>
      <name>Get</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1Enum.html</anchorfile>
      <anchor>a098ddd0b61d4db50bed59bc299743a01</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSameType</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1Enum.html</anchorfile>
      <anchor>aedf382686a47103c1aadeface9ef947d</anchor>
      <arglist>(Enum const &amp;lhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsType</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1Enum.html</anchorfile>
      <anchor>aeb9aae84b52f87145a2dc958185b1e82</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1Enum.html</anchorfile>
      <anchor>a821773512beff3e662eb70c5fdfecfa6</anchor>
      <arglist>(Enum const &amp;lhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1Enum.html</anchorfile>
      <anchor>ae057f0da9955c95fece00c4d709e2f5c</anchor>
      <arglist>(TEnum lhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1Enum.html</anchorfile>
      <anchor>a7ce398a37a3b8326523465d467d4ba30</anchor>
      <arglist>(Enum const &amp;lhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1Enum.html</anchorfile>
      <anchor>a6d620337570b958bf5e70014da05ca60</anchor>
      <arglist>(Enum const &amp;lhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1Enum.html</anchorfile>
      <anchor>acd17007bb9bb2c84a4c96df9db38f864</anchor>
      <arglist>(TEnum lhs) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Value</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1Enum.html</anchorfile>
      <anchor>ae3ed6856fae3288e7d259bc756ef1382</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::lang::EnumIterator</name>
    <filename>structaworx_1_1lib_1_1lang_1_1EnumIterator.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="typedef">
      <type>RandomAccessIteratorBase&lt; const TEnum *, const TEnum &amp; &gt;</type>
      <name>ConstIterator</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1EnumIterator.html</anchorfile>
      <anchor>ae2f611f1d45d4e386427799cecf40943</anchor>
      <arglist></arglist>
    </member>
    <class kind="class">aworx::lib::lang::EnumIterator::RandomAccessIteratorBase</class>
    <member kind="function">
      <type></type>
      <name>EnumIterator</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1EnumIterator.html</anchorfile>
      <anchor>aed59af3f0b5fe4bde028361aaea7259b</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>ConstIterator</type>
      <name>begin</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1EnumIterator.html</anchorfile>
      <anchor>ad5fee900c7aee90671038c79225bf8ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ConstIterator</type>
      <name>end</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1EnumIterator.html</anchorfile>
      <anchor>a69b6e2a03c835ca5d658a1f16acbaa9c</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::lang::EnumMetaData</name>
    <filename>structaworx_1_1lib_1_1lang_1_1EnumMetaData.html</filename>
    <templarg>TEnum</templarg>
    <templarg>TEnableIf</templarg>
    <base>Singleton&lt; EnumMetaData&lt; TEnum &gt; &gt;</base>
    <member kind="typedef">
      <type>std::map&lt; typename std::underlying_type&lt; TEnum &gt;::type, typename T_EnumMetaDataDecl&lt; TEnum &gt;::TTuple &amp; &gt;</type>
      <name>TMap</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1EnumMetaData.html</anchorfile>
      <anchor>ad814bef98dead04b33a9f789a877f2e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; typename T_EnumMetaDataDecl&lt; TEnum &gt;::TTuple &gt;</type>
      <name>TTable</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1EnumMetaData.html</anchorfile>
      <anchor>a062f57574ec4a82773729a9319b72220</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TMap</type>
      <name>Map</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1EnumMetaData.html</anchorfile>
      <anchor>a81e92dd684b7ae73c72282b630d32cb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TTable</type>
      <name>Table</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1EnumMetaData.html</anchorfile>
      <anchor>a903afc19e63fb1137c661a8e595f314c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TEnum</type>
      <name>Enum</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1EnumMetaData.html</anchorfile>
      <anchor>a17aea501c724ca44514df19160b8381b</anchor>
      <arglist>(const typename T_EnumMetaDataDecl&lt; TEnum &gt;::TTuple &amp;tuple)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CheckLoad</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1EnumMetaData.html</anchorfile>
      <anchor>a715ca664eec221260f558b2a5ceffea9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CheckMap</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1EnumMetaData.html</anchorfile>
      <anchor>a36c448bf6f4a286e7504b77e6c0230d0</anchor>
      <arglist>(bool force=false)</arglist>
    </member>
    <member kind="function">
      <type>TEnum</type>
      <name>EnumAt</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1EnumMetaData.html</anchorfile>
      <anchor>a2a092f21d34317909b852ef40f548e45</anchor>
      <arglist>(size_t row)</arglist>
    </member>
    <member kind="function">
      <type>T_EnumMetaDataDecl&lt; TEnum &gt;::TTuple *</type>
      <name>Get</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1EnumMetaData.html</anchorfile>
      <anchor>a707b03cb3bac4436a7bf8b724acb6868</anchor>
      <arglist>(TEnum element)</arglist>
    </member>
    <member kind="function">
      <type>std::tuple_element&lt; TupleIdx, typename T_EnumMetaDataDecl&lt; TEnum &gt;::TTuple &gt;::type</type>
      <name>Value</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1EnumMetaData.html</anchorfile>
      <anchor>a96937a3df719b5a041b37d29e96bd62f</anchor>
      <arglist>(TEnum element)</arglist>
    </member>
    <member kind="function">
      <type>std::tuple_element&lt; TupleIdx, typename T_EnumMetaDataDecl&lt; TEnum &gt;::TTuple &gt;::type</type>
      <name>ValueAt</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1EnumMetaData.html</anchorfile>
      <anchor>af69342ea0b711f8bea0a04d0ef0631e9</anchor>
      <arglist>(size_t row)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EnumMetaData&lt; TEnum &gt;</name>
    <filename>structaworx_1_1lib_1_1lang_1_1EnumMetaData.html</filename>
    <base>Singleton&lt; EnumMetaData&lt; TEnum &gt; &gt;</base>
    <member kind="typedef">
      <type>std::map&lt; typename std::underlying_type&lt; TEnum &gt;::type, typename T_EnumMetaDataDecl&lt; TEnum &gt;::TTuple &amp;&gt;</type>
      <name>TMap</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1EnumMetaData.html</anchorfile>
      <anchor>ad814bef98dead04b33a9f789a877f2e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; typename T_EnumMetaDataDecl&lt; TEnum &gt;::TTuple &gt;</type>
      <name>TTable</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1EnumMetaData.html</anchorfile>
      <anchor>a062f57574ec4a82773729a9319b72220</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TMap</type>
      <name>Map</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1EnumMetaData.html</anchorfile>
      <anchor>a81e92dd684b7ae73c72282b630d32cb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TTable</type>
      <name>Table</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1EnumMetaData.html</anchorfile>
      <anchor>a903afc19e63fb1137c661a8e595f314c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TEnum</type>
      <name>Enum</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1EnumMetaData.html</anchorfile>
      <anchor>a17aea501c724ca44514df19160b8381b</anchor>
      <arglist>(const typename T_EnumMetaDataDecl&lt; TEnum &gt;::TTuple &amp;tuple)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CheckLoad</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1EnumMetaData.html</anchorfile>
      <anchor>a715ca664eec221260f558b2a5ceffea9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CheckMap</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1EnumMetaData.html</anchorfile>
      <anchor>a36c448bf6f4a286e7504b77e6c0230d0</anchor>
      <arglist>(bool force=false)</arglist>
    </member>
    <member kind="function">
      <type>TEnum</type>
      <name>EnumAt</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1EnumMetaData.html</anchorfile>
      <anchor>a2a092f21d34317909b852ef40f548e45</anchor>
      <arglist>(size_t row)</arglist>
    </member>
    <member kind="function">
      <type>T_EnumMetaDataDecl&lt; TEnum &gt;::TTuple *</type>
      <name>Get</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1EnumMetaData.html</anchorfile>
      <anchor>a707b03cb3bac4436a7bf8b724acb6868</anchor>
      <arglist>(TEnum element)</arglist>
    </member>
    <member kind="function">
      <type>std::tuple_element&lt; TupleIdx, typename T_EnumMetaDataDecl&lt; TEnum &gt;::TTuple &gt;::type</type>
      <name>Value</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1EnumMetaData.html</anchorfile>
      <anchor>a96937a3df719b5a041b37d29e96bd62f</anchor>
      <arglist>(TEnum element)</arglist>
    </member>
    <member kind="function">
      <type>std::tuple_element&lt; TupleIdx, typename T_EnumMetaDataDecl&lt; TEnum &gt;::TTuple &gt;::type</type>
      <name>ValueAt</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1EnumMetaData.html</anchorfile>
      <anchor>af69342ea0b711f8bea0a04d0ef0631e9</anchor>
      <arglist>(size_t row)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::lang::EnumReadWriteInfo</name>
    <filename>structaworx_1_1lib_1_1lang_1_1EnumReadWriteInfo.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>Name</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1EnumReadWriteInfo.html</anchorfile>
      <anchor>a3a4f86d809607a8ad171af4f2b86afc9</anchor>
      <arglist>(const typename T_EnumMetaDataDecl&lt; TEnum &gt;::TTuple &amp;tuple)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>Name</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1EnumReadWriteInfo.html</anchorfile>
      <anchor>a9c9088305b3f81c128818624ab91bf9f</anchor>
      <arglist>(EnumMetaData&lt; TEnum &gt; &amp;enumMetaData, TEnum element)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>Name</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1EnumReadWriteInfo.html</anchorfile>
      <anchor>abc84be266aeb51c0a6905b2f261d61c6</anchor>
      <arglist>(TEnum element)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>Name</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1EnumReadWriteInfo.html</anchorfile>
      <anchor>a5305157cb65e6ebcbc99b260ecb4b145</anchor>
      <arglist>(EnumMetaData&lt; TEnum &gt; &amp;enumMetaData, size_t row)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>Postfix</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1EnumReadWriteInfo.html</anchorfile>
      <anchor>a6fee69c29afca1dacbd134362e9deb9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>Prefix</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1EnumReadWriteInfo.html</anchorfile>
      <anchor>a69b1cbe201bba3df0b8346d040edde5e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::config::Environment</name>
    <filename>classaworx_1_1lib_1_1config_1_1Environment.html</filename>
    <base>aworx::lib::config::ConfigurationPlugin</base>
    <member kind="function">
      <type></type>
      <name>Environment</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Environment.html</anchorfile>
      <anchor>a0218891863cc545c2dcfda23f64248bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Environment</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Environment.html</anchorfile>
      <anchor>a6b8b9677be18dad35b3af83e77d1b339</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API bool</type>
      <name>Load</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Environment.html</anchorfile>
      <anchor>ae644fb31eb15b9f85800a8d3327e2433</anchor>
      <arglist>(Variable &amp;variable, bool searchOnly=false) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>Name</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Environment.html</anchorfile>
      <anchor>a8f6daf3aa257e7df25ffd8eb04a072bd</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lox::ESC</name>
    <filename>classaworx_1_1lox_1_1ESC.html</filename>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 3 &gt;</type>
      <name>BG_BLACK</name>
      <anchorfile>classaworx_1_1lox_1_1ESC.html</anchorfile>
      <anchor>aa82c6a3b4740dbc8469c438cb508c9fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 3 &gt;</type>
      <name>BG_BLUE</name>
      <anchorfile>classaworx_1_1lox_1_1ESC.html</anchorfile>
      <anchor>a32c9da22aa2e2219e6110c71c0862cab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 3 &gt;</type>
      <name>BG_CYAN</name>
      <anchorfile>classaworx_1_1lox_1_1ESC.html</anchorfile>
      <anchor>ad3ea7c45421a7fe41bef9fccf446beab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 3 &gt;</type>
      <name>BG_GRAY</name>
      <anchorfile>classaworx_1_1lox_1_1ESC.html</anchorfile>
      <anchor>ab06f1181bd398bc4a055f2e1e2505fce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 3 &gt;</type>
      <name>BG_GREEN</name>
      <anchorfile>classaworx_1_1lox_1_1ESC.html</anchorfile>
      <anchor>a7d938ef89f27d144e7b95fd249d50ade</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 3 &gt;</type>
      <name>BG_MAGENTA</name>
      <anchorfile>classaworx_1_1lox_1_1ESC.html</anchorfile>
      <anchor>aab3e5266c78e812e7a6c426367dc9071</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 3 &gt;</type>
      <name>BG_RED</name>
      <anchorfile>classaworx_1_1lox_1_1ESC.html</anchorfile>
      <anchor>afd07c8746625a0194d127cb2249aa0cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 3 &gt;</type>
      <name>BG_RESET</name>
      <anchorfile>classaworx_1_1lox_1_1ESC.html</anchorfile>
      <anchor>a187117a859affcb7261591c26ea6b0d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 3 &gt;</type>
      <name>BG_WHITE</name>
      <anchorfile>classaworx_1_1lox_1_1ESC.html</anchorfile>
      <anchor>a48c1e456dcabe4ffd80ec00ab474a0f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 3 &gt;</type>
      <name>BG_YELLOW</name>
      <anchorfile>classaworx_1_1lox_1_1ESC.html</anchorfile>
      <anchor>a630181f686ce699e803450426b341d06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 3 &gt;</type>
      <name>BLACK</name>
      <anchorfile>classaworx_1_1lox_1_1ESC.html</anchorfile>
      <anchor>a03fcfa32650e29154ebb6ddfc325f13a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 3 &gt;</type>
      <name>BLUE</name>
      <anchorfile>classaworx_1_1lox_1_1ESC.html</anchorfile>
      <anchor>aae0f71c16c24eca46ba82cb778a4511e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 3 &gt;</type>
      <name>BOLD</name>
      <anchorfile>classaworx_1_1lox_1_1ESC.html</anchorfile>
      <anchor>a9f9f2126d9e6edff3218927c04074dcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 3 &gt;</type>
      <name>CYAN</name>
      <anchorfile>classaworx_1_1lox_1_1ESC.html</anchorfile>
      <anchor>afdf0230e4d8012d7a89df6f3fa266e5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 3 &gt;</type>
      <name>EOMETA</name>
      <anchorfile>classaworx_1_1lox_1_1ESC.html</anchorfile>
      <anchor>aebb3b721c38741c6c324f5358f0f881f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 3 &gt;</type>
      <name>FG_RESET</name>
      <anchorfile>classaworx_1_1lox_1_1ESC.html</anchorfile>
      <anchor>a54cca82e07ebd6c5b7e91b1b4c5d02d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 3 &gt;</type>
      <name>GRAY</name>
      <anchorfile>classaworx_1_1lox_1_1ESC.html</anchorfile>
      <anchor>a381d37bbc1e467b09e401cd87ce6663a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 3 &gt;</type>
      <name>GREEN</name>
      <anchorfile>classaworx_1_1lox_1_1ESC.html</anchorfile>
      <anchor>a1453a2687e1c19f8c40d141c1bb89329</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 3 &gt;</type>
      <name>ITALICS</name>
      <anchorfile>classaworx_1_1lox_1_1ESC.html</anchorfile>
      <anchor>a720d5fb808c384fa2d54e4a675b66c6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 3 &gt;</type>
      <name>MAGENTA</name>
      <anchorfile>classaworx_1_1lox_1_1ESC.html</anchorfile>
      <anchor>ad7302f67367bb64d92d430db2b966744</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 3 &gt;</type>
      <name>RED</name>
      <anchorfile>classaworx_1_1lox_1_1ESC.html</anchorfile>
      <anchor>aa039ed1389702c723320be5baae61ef9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 3 &gt;</type>
      <name>RESET</name>
      <anchorfile>classaworx_1_1lox_1_1ESC.html</anchorfile>
      <anchor>aea1c3b6709bf24bb5abce06e3061fd7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 3 &gt;</type>
      <name>STYLE_RESET</name>
      <anchorfile>classaworx_1_1lox_1_1ESC.html</anchorfile>
      <anchor>a68e36419790bb4e6f1a6aa6148ae1984</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 3 &gt;</type>
      <name>TAB</name>
      <anchorfile>classaworx_1_1lox_1_1ESC.html</anchorfile>
      <anchor>a5f86c0e8a5fe6d0af38c93a5c73724ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 3 &gt;</type>
      <name>URL_END</name>
      <anchorfile>classaworx_1_1lox_1_1ESC.html</anchorfile>
      <anchor>ac4584a5ba5fec38ef5eaf0bb4e59f88a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 3 &gt;</type>
      <name>URL_START</name>
      <anchorfile>classaworx_1_1lox_1_1ESC.html</anchorfile>
      <anchor>a920c1a537a90b3f971ee0d6f17fcdc02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 3 &gt;</type>
      <name>WHITE</name>
      <anchorfile>classaworx_1_1lox_1_1ESC.html</anchorfile>
      <anchor>a7e39de6e4f8233bb0dc0a259f6169608</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API SLiteral&lt; 3 &gt;</type>
      <name>YELLOW</name>
      <anchorfile>classaworx_1_1lox_1_1ESC.html</anchorfile>
      <anchor>a929f0d422bc023cdd33e11f92a47bb6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ALOX_API void</type>
      <name>ReplaceToReadable</name>
      <anchorfile>classaworx_1_1lox_1_1ESC.html</anchorfile>
      <anchor>a1db118a4b522d0791336055bf998aab8</anchor>
      <arglist>(AString &amp;target, integer startIdx)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::Format::Escape</name>
    <filename>structaworx_1_1lib_1_1strings_1_1Format_1_1Escape.html</filename>
    <member kind="variable">
      <type>integer</type>
      <name>length</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1Format_1_1Escape.html</anchorfile>
      <anchor>af940c51e198511031f839dec6e7f1b71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Switch</type>
      <name>pSwitch</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1Format_1_1Escape.html</anchorfile>
      <anchor>a2eefa040c0bf182e5f1b5f89fe79feae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>integer</type>
      <name>startIdx</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1Format_1_1Escape.html</anchorfile>
      <anchor>ae4561411b76fba95c490128eb3cca296</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Escape</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1Format_1_1Escape.html</anchorfile>
      <anchor>aff3cb0b1408ec439c531cd4d8671f6a0</anchor>
      <arglist>(Switch escape=Switch::On, integer regionStart=0, integer regionLength=CString::MaxLen)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::lang::Exception</name>
    <filename>classaworx_1_1lib_1_1lang_1_1Exception.html</filename>
    <member kind="typedef">
      <type>T_EnumMetaDataSpecification&lt; Exception &gt;::TTuple</type>
      <name>TTuple</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Exception.html</anchorfile>
      <anchor>a51c2fc70efeb6b779bafdb6cca11b7e5</anchor>
      <arglist></arglist>
    </member>
    <class kind="struct">aworx::lib::lang::Exception::Entry</class>
    <member kind="variable">
      <type>std::vector&lt; Entry &gt;</type>
      <name>Entries</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Exception.html</anchorfile>
      <anchor>adf7b09451a6c6103cb93a87bc5b90e20</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Describe</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Exception.html</anchorfile>
      <anchor>a2c48ec10d8816d14c8e92dcf3c912320</anchor>
      <arglist>(AString &amp;target, Entry &amp;entry)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Exception</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Exception.html</anchorfile>
      <anchor>a351255f157a6d415a07f6c4a613f5c98</anchor>
      <arglist>(Exception &amp;src)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Exception</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Exception.html</anchorfile>
      <anchor>a1361be71b6603a1e8249186448a54d3d</anchor>
      <arglist>(Exception &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Exception</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Exception.html</anchorfile>
      <anchor>a9752b5464a4573b53d14b14bf17f855a</anchor>
      <arglist>(const TString &amp;file, int line, const TString &amp;func, TEnum errEnum, TArgs &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API</type>
      <name>~Exception</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Exception.html</anchorfile>
      <anchor>ac484faa15fc3891ae27c84ebe49baf22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Exception &amp;</type>
      <name>Add</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Exception.html</anchorfile>
      <anchor>a335e83e70674fc2f6e4172a20afdbddf</anchor>
      <arglist>(const TString &amp;file, int line, const TString &amp;func, TEnum errEnum, TArgs &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; std::is_same&lt; typename T_EnumMetaDataDecl&lt; TEnum &gt;::TTuple, typename T_EnumMetaDataSpecification&lt; Exception &gt;::TTuple &gt;::value, Exception &amp;&gt;::type</type>
      <name>AddFromBoxes</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Exception.html</anchorfile>
      <anchor>a774023d0b6491f31bd5997a27b887d36</anchor>
      <arglist>(const TString &amp;file, int line, const TString &amp;func, TEnum errEnum, Boxes &amp;&amp;args)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API const Enum &amp;</type>
      <name>Code</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Exception.html</anchorfile>
      <anchor>af73059d3c0862fb540cc22808afe3a46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALIB_API void</type>
      <name>copyStrings</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Exception.html</anchorfile>
      <anchor>a0a43a55cdd225e2f98047107a9c0c3ac</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::Format::Field</name>
    <filename>structaworx_1_1lib_1_1strings_1_1Format_1_1Field.html</filename>
    <member kind="variable">
      <type>char</type>
      <name>padChar</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1Format_1_1Field.html</anchorfile>
      <anchor>a8fdae00ef4d3c4f8372e573c3afe996c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>lang::Alignment</type>
      <name>theAlignment</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1Format_1_1Field.html</anchorfile>
      <anchor>aa50d7b3fc91f3f68895f40dd3a9b5ce3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Box</type>
      <name>theContent</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1Format_1_1Field.html</anchorfile>
      <anchor>acd65f20f3fc5096556f77c79e528e62d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>integer</type>
      <name>theWidth</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1Format_1_1Field.html</anchorfile>
      <anchor>aa68584e5bcf6e60ed1da7f3fedf2a4cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Field</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1Format_1_1Field.html</anchorfile>
      <anchor>a92e93680c467e15060ffa8a5b8330092</anchor>
      <arglist>(Box content, integer width, lang::Alignment alignment=lang::Alignment::Right, char fillChar=&apos; &apos;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::strings::Format</name>
    <filename>classaworx_1_1lib_1_1strings_1_1Format.html</filename>
    <class kind="struct">aworx::lib::strings::Format::Bin</class>
    <class kind="struct">aworx::lib::strings::Format::Escape</class>
    <class kind="struct">aworx::lib::strings::Format::Field</class>
    <class kind="struct">aworx::lib::strings::Format::Hex</class>
    <class kind="struct">aworx::lib::strings::Format::Oct</class>
    <class kind="struct">aworx::lib::strings::Format::Tab</class>
    <member kind="variable">
      <type>double</type>
      <name>fp</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Format.html</anchorfile>
      <anchor>af2f6bd725d898b52242b0b8826d52591</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NumberFormat *</type>
      <name>nf</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Format.html</anchorfile>
      <anchor>afecb8b906f7e79cb68adcdbce823de5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>sInt</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Format.html</anchorfile>
      <anchor>ac4ae1f776223d9471477d766a2fca973</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>theWidth</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Format.html</anchorfile>
      <anchor>af24938d824f57b7af29025dfb0556f66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>uInt</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Format.html</anchorfile>
      <anchor>ad9d337e738d698e3b57c8fe34127d82d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union aworx::lib::strings::Format::@0</type>
      <name>v</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Format.html</anchorfile>
      <anchor>a47bf8637626e089a077b1c2b62f9baee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>valueType</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Format.html</anchorfile>
      <anchor>a8005d517c7a9e379314e1ce4f90a3dce</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Format</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Format.html</anchorfile>
      <anchor>aebd2ef66a70ded7e46635a08c8226a51</anchor>
      <arglist>(int64_t value, int overrideWidth=0, NumberFormat *numberFormat=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Format</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Format.html</anchorfile>
      <anchor>a3322ae31bbaecc5f0f6bcf9e2131ec37</anchor>
      <arglist>(int64_t value, NumberFormat *numberFormat)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Format</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Format.html</anchorfile>
      <anchor>aaaa07cc619e5927618d11858d5920f07</anchor>
      <arglist>(uint64_t value, int overrideWidth=0, NumberFormat *numberFormat=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Format</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Format.html</anchorfile>
      <anchor>aee91f407d632508250de8788d8a67a23</anchor>
      <arglist>(uint64_t value, NumberFormat *numberFormat)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Format</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Format.html</anchorfile>
      <anchor>a7526933a0a402d22a0d8a10f395ca4cb</anchor>
      <arglist>(int32_t value, int overrideWidth=0, NumberFormat *numberFormat=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Format</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Format.html</anchorfile>
      <anchor>ad10c76899d27b38390b7aa400272ade5</anchor>
      <arglist>(int32_t value, NumberFormat *numberFormat)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Format</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Format.html</anchorfile>
      <anchor>a9529924d8826b0cae60b985aa84b9625</anchor>
      <arglist>(uint32_t value, int overrideWidth=0, NumberFormat *numberFormat=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Format</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Format.html</anchorfile>
      <anchor>abdb1aa89f35b549c0ce66bd11d8a6649</anchor>
      <arglist>(uint32_t value, NumberFormat *numberFormat)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Format</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Format.html</anchorfile>
      <anchor>a15fdd7eb847168f53981640201e3da03</anchor>
      <arglist>(intGap_t value, int overrideWidth=0, NumberFormat *numberFormat=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Format</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Format.html</anchorfile>
      <anchor>af47559ac9c83fe7f41e85058f99e92ec</anchor>
      <arglist>(intGap_t value, NumberFormat *numberFormat)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Format</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Format.html</anchorfile>
      <anchor>a3a381e7a3f10c3b3654e31da90e7e2d5</anchor>
      <arglist>(uintGap_t value, int overrideWidth=0, NumberFormat *numberFormat=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Format</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Format.html</anchorfile>
      <anchor>a40da695b10c2baa7623b75bc50e199f8</anchor>
      <arglist>(uintGap_t value, NumberFormat *numberFormat)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Format</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Format.html</anchorfile>
      <anchor>a9298f7e65ec41def35dd025ac60cadbd</anchor>
      <arglist>(int16_t value, int overrideWidth=0, NumberFormat *numberFormat=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Format</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Format.html</anchorfile>
      <anchor>af6c8e4e02c66733670beaf88db647ac8</anchor>
      <arglist>(int16_t value, NumberFormat *numberFormat)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Format</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Format.html</anchorfile>
      <anchor>aee13b68be463a8d1acad3f4236c83f68</anchor>
      <arglist>(uint16_t value, int overrideWidth=0, NumberFormat *numberFormat=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Format</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Format.html</anchorfile>
      <anchor>a7b84091a4d7bd0e1ee20146a855720ab</anchor>
      <arglist>(uint16_t value, NumberFormat *numberFormat)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Format</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Format.html</anchorfile>
      <anchor>a70ce9dc738fb730746d3cd6c257ebe64</anchor>
      <arglist>(double value, int overrideWidth=0, NumberFormat *numberFormat=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Format</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Format.html</anchorfile>
      <anchor>ace1d40b47c061b28410bb8a3acca9c1d</anchor>
      <arglist>(double value, NumberFormat *numberFormat)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::strings::format::Formatter</name>
    <filename>classaworx_1_1lib_1_1strings_1_1format_1_1Formatter.html</filename>
    <member kind="variable">
      <type>Formatter *</type>
      <name>Next</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1Formatter.html</anchorfile>
      <anchor>a6ca7b60794ee16a8ff620cdd8cf01d83</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ALIB_API Formatter &amp;</type>
      <name>AcquireDefault</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1Formatter.html</anchorfile>
      <anchor>ab6d5262efe7398580e38f658679cdb07</anchor>
      <arglist>(const TString &amp;file, int line, const TString &amp;func)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ALIB_API void</type>
      <name>ReleaseDefault</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1Formatter.html</anchorfile>
      <anchor>a6a61c3f0ec242f61cd268411d49d1b8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Formatter</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1Formatter.html</anchorfile>
      <anchor>ad59b4a59b13d736a623241018b6fee0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API void</type>
      <name>Format</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1Formatter.html</anchorfile>
      <anchor>ab918f1cedec331b3e2be7aaec2e3ef00</anchor>
      <arglist>(AString &amp;target, const Boxes &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Format</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1Formatter.html</anchorfile>
      <anchor>a42ecc5aa538464cddc8357a6f3b53090</anchor>
      <arglist>(AString &amp;target, const BoxedObjects &amp;... args)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Reset</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1Formatter.html</anchorfile>
      <anchor>a4c4ba0ffe635d14b93794268bd8e5995</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static Formatter *</type>
      <name>defaultFormatter</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1Formatter.html</anchorfile>
      <anchor>a85f678b49cec2912b056deaa3c5ccdd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ThreadLock</type>
      <name>defaultFormatterLock</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1Formatter.html</anchorfile>
      <anchor>a2416ba4b8147395e4d5348f6a1f79d64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Boxes</type>
      <name>boxes</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1Formatter.html</anchorfile>
      <anchor>a9c235ad71ffb912aa8ecc4e998d0eb0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AString</type>
      <name>mbsFormatString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1Formatter.html</anchorfile>
      <anchor>a07bef82c291adced447f925a27e89219</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual int</type>
      <name>format</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1Formatter.html</anchorfile>
      <anchor>a4cdbe6ee73c1a6dbbdcd4c54aa7eb546</anchor>
      <arglist>(AString &amp;target, const String &amp;formatString, const Boxes &amp;args, int startArgument)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initializeFormat</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1Formatter.html</anchorfile>
      <anchor>a7bcf7d146e09cc943691dba24cff2c86</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::strings::format::FormatterJavaStyle</name>
    <filename>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterJavaStyle.html</filename>
    <base>aworx::lib::strings::format::FormatterStdImpl</base>
    <member kind="function">
      <type>ALIB_API</type>
      <name>FormatterJavaStyle</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterJavaStyle.html</anchorfile>
      <anchor>ab7883e453dd41a7b98770def900dcaef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>phaAlternateForm</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterJavaStyle.html</anchorfile>
      <anchor>a6ac7a73efcd35310992a003e88ec5d57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>phaExtConversionUpper</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterJavaStyle.html</anchorfile>
      <anchor>a96b3d299d1b5122302024f99b06764bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>phaExtDateTime</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterJavaStyle.html</anchorfile>
      <anchor>a44601cd389c29004cc86f69c2a85e580</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>phaExtDefaultPrecision</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterJavaStyle.html</anchorfile>
      <anchor>ad69859ba8f699b6398e49454584a7e54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>phaExtPrecision</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterJavaStyle.html</anchorfile>
      <anchor>a711ff386a7bc4f7ce780bf99a09ff440</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ALIB_API bool</type>
      <name>checkStdFieldAgainstArgument</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterJavaStyle.html</anchorfile>
      <anchor>a434f3e94d1165b6005b2f36d67b3129a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ALIB_API integer</type>
      <name>findPlaceholder</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterJavaStyle.html</anchorfile>
      <anchor>a1912ceeb395891f715165cf3771af2ba</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ALIB_API bool</type>
      <name>parsePlaceholder</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterJavaStyle.html</anchorfile>
      <anchor>a60cedd7cc8a1666f656b38340eaed2b2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>parseStdFormatSpec</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterJavaStyle.html</anchorfile>
      <anchor>ac9e6327841ed1e585b2e9b2d83a39262</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ALIB_API bool</type>
      <name>preAndPostProcess</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterJavaStyle.html</anchorfile>
      <anchor>a3246085ec6b35e91bfb92b93a25cd318</anchor>
      <arglist>(integer startIdx, AString *target) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ALIB_API void</type>
      <name>replaceEscapeSequences</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterJavaStyle.html</anchorfile>
      <anchor>a045070296c080853ca45dc61b6873859</anchor>
      <arglist>(integer startIdx) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ALIB_API void</type>
      <name>resetPHAs</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterJavaStyle.html</anchorfile>
      <anchor>af148aa603a7d1dbec190711c819ccd4f</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::strings::format::FormatterPythonStyle</name>
    <filename>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterPythonStyle.html</filename>
    <base>aworx::lib::strings::format::FormatterStdImpl</base>
    <member kind="function">
      <type>ALIB_API</type>
      <name>FormatterPythonStyle</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterPythonStyle.html</anchorfile>
      <anchor>a10c4d83dfa47d59ed6cdf5fa27b00277</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API void</type>
      <name>Reset</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterPythonStyle.html</anchorfile>
      <anchor>af82f4acaed7bb39d568e689a9caa63d5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AutoSizes</type>
      <name>autoSizes</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterPythonStyle.html</anchorfile>
      <anchor>aa4f19574c48ddda56b341246abd50bcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Substring</type>
      <name>phaExtConversion</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterPythonStyle.html</anchorfile>
      <anchor>a0e981813d36090034f20a807521f0361</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>integer</type>
      <name>phaExtConversionPos</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterPythonStyle.html</anchorfile>
      <anchor>a3ce11282f4d679f778747c466023477d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>phaExtDefaultPrecision</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterPythonStyle.html</anchorfile>
      <anchor>ad69859ba8f699b6398e49454584a7e54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>phaExtPrecision</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterPythonStyle.html</anchorfile>
      <anchor>a711ff386a7bc4f7ce780bf99a09ff440</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>integer</type>
      <name>phaExtPrecisionPos</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterPythonStyle.html</anchorfile>
      <anchor>afeb90f6b32b3e350b3f12dd8a132d689</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ALIB_API bool</type>
      <name>checkStdFieldAgainstArgument</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterPythonStyle.html</anchorfile>
      <anchor>a434f3e94d1165b6005b2f36d67b3129a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ALIB_API integer</type>
      <name>findPlaceholder</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterPythonStyle.html</anchorfile>
      <anchor>a1912ceeb395891f715165cf3771af2ba</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ALIB_API void</type>
      <name>initializeFormat</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterPythonStyle.html</anchorfile>
      <anchor>a153bcd24c93aeab3a398676e6a2aff2d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ALIB_API bool</type>
      <name>parsePlaceholder</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterPythonStyle.html</anchorfile>
      <anchor>a60cedd7cc8a1666f656b38340eaed2b2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ALIB_API bool</type>
      <name>parseStdFormatSpec</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterPythonStyle.html</anchorfile>
      <anchor>ae560bfd42ef083def3f939c343b56ad7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ALIB_API bool</type>
      <name>preAndPostProcess</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterPythonStyle.html</anchorfile>
      <anchor>a3246085ec6b35e91bfb92b93a25cd318</anchor>
      <arglist>(integer startIdx, AString *target) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ALIB_API void</type>
      <name>replaceEscapeSequences</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterPythonStyle.html</anchorfile>
      <anchor>a045070296c080853ca45dc61b6873859</anchor>
      <arglist>(integer startIdx) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ALIB_API void</type>
      <name>resetPHAs</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterPythonStyle.html</anchorfile>
      <anchor>af148aa603a7d1dbec190711c819ccd4f</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::strings::format::FormatterStdImpl</name>
    <filename>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</filename>
    <base>aworx::lib::strings::format::Formatter</base>
    <member kind="variable">
      <type>NumberFormat</type>
      <name>AlternativeNumberFormat</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>a52a5cabc12ebd7e9366ebfbbb223ffd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NumberFormat</type>
      <name>DefaultNumberFormat</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>aaee9559f063ec924657853cdc18be5fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FormatterStdImpl</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>af640c4edbd3893cd0aea82c4c7917c74</anchor>
      <arglist>(const String &amp;formatterClassName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>CloneSettings</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>a9dee9e8b29527a7c4a83330eab8248bb</anchor>
      <arglist>(FormatterStdImpl &amp;reference)</arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>PHType</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>a4660396d3d3ae4a0b0985d23df5c32e8</anchor>
      <arglist></arglist>
      <enumvalue file="classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html" anchor="a4660396d3d3ae4a0b0985d23df5c32e8ab2a08319d780b24b0f694c89e549a51f">NotGiven</enumvalue>
      <enumvalue file="classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html" anchor="a4660396d3d3ae4a0b0985d23df5c32e8a27118326006d3829667a400ad23d5d98">String</enumvalue>
      <enumvalue file="classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html" anchor="a4660396d3d3ae4a0b0985d23df5c32e8a76a40e4f974fd895a0a2598c1cee28b4">Character</enumvalue>
      <enumvalue file="classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html" anchor="a4660396d3d3ae4a0b0985d23df5c32e8a961475d098a70964a7faacdb297e7cbf">IntBase10</enumvalue>
      <enumvalue file="classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html" anchor="a4660396d3d3ae4a0b0985d23df5c32e8a6b2eeef239efbc66802079aa7c8ff83e">IntBinary</enumvalue>
      <enumvalue file="classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html" anchor="a4660396d3d3ae4a0b0985d23df5c32e8abca739bcec70e57c94cb7bc53a92cb7e">IntOctal</enumvalue>
      <enumvalue file="classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html" anchor="a4660396d3d3ae4a0b0985d23df5c32e8a97515393bca97324642dd3f2ab7537ac">IntHex</enumvalue>
      <enumvalue file="classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html" anchor="a4660396d3d3ae4a0b0985d23df5c32e8a22ae0e2b89e5e3d477f988cc36d3272b">Float</enumvalue>
      <enumvalue file="classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html" anchor="a4660396d3d3ae4a0b0985d23df5c32e8ac26f15e86e3de4c398a8273272aba034">Bool</enumvalue>
      <enumvalue file="classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html" anchor="a4660396d3d3ae4a0b0985d23df5c32e8a45aac9cc79c5bfca49db69348cacbb49">HashCode</enumvalue>
      <enumvalue file="classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html" anchor="a4660396d3d3ae4a0b0985d23df5c32e8adb3e3f51c9107e26c9bccf9a188ce2ed">Fill</enumvalue>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>argOffset</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>a20caa5ddfad706ad33151aca1584d314</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>argsConsumed</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>a277c7607ec7714d48a412b5e54997ded</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>argumentCountStartsWith1</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>a66f397c319b64b37b92ac1c36cdbc7fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const Boxes *</type>
      <name>arguments</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>a330b1cca9547d0d9e838d3c2997eaaca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AString</type>
      <name>fieldBuffer</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>a010e279780e5b70b379b2b6befd295db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const String *</type>
      <name>formatString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>a7e41a5aa1fd486db364582fcbd501bcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const String</type>
      <name>formatterName</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>ab09b0aed587cc27127fed1a3b9027cb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>nextAutoIdx</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>a229659cea85046009034b301b8c772cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Substring</type>
      <name>parser</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>ac5266ddfc119218fadb17b56e0aa7f18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Alignment</type>
      <name>phaAlignment</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>a42cf696609494c55050a14311909a4c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>phaAlignmentSpecified</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>aa4fc2a97542a8043de0b8a06ce2f296d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const Box *</type>
      <name>phaArgument</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>a4d4f75b17ced003bcd78c5bb1de0854b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>phaArgumentIdx</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>a376a7b963e937b5de093019a4e66d1cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>phaCutContent</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>af12b4f7840769e0af23e0dae62d2aeff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>phaFillChar</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>a8115b31cf14bd2cbfbd3e729f4050898</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Substring</type>
      <name>phaFormatSpec</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>a0f6bad7a5f9e88d63e69e580dcecedd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>phaIsPercentage</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>a3649877f51de471b6978590d0b3be213</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NumberFormat</type>
      <name>phaNF</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>a106e87f0128a9b2a4301e00c4f95cfc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>phaPreviousArgumentIdx</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>a1b75f227aa791419710759f086af090d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>phaSignPaddingMode</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>a9ff3f3ae18aeb0b61239b7b931c15ae1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PHType</type>
      <name>phaType</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>aebfdd2fa5b4906583000a7f49550e34d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>phaTypeCode</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>a112586dce9b62d1bfc737f5fd22a0db4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>integer</type>
      <name>phaTypeCodePosition</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>a9749d5b4751fd7775dba43f14421e04f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>phaWidth</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>a3b33f3778452a5391ce1017be0c010c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>phaWriteBinOctHexPrefix</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>a2ca04da5eab57079df8abf819139e01d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AString *</type>
      <name>targetString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>aac155d9083536bec309cc838274d3585</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>integer</type>
      <name>targetStringStartLength</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>ab5af14f883fc9121e5694775bf98e11b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>checkStdFieldAgainstArgument</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>a894b330f53f267cca774d3e8fc1b7ad0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual integer</type>
      <name>findPlaceholder</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>a948eff37e025691ac599454802e7f67a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ALIB_API int</type>
      <name>format</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>a51bfbbb5fd0986a10d37aed3a2231d6a</anchor>
      <arglist>(AString &amp;targetString, const String &amp;formatString, const Boxes &amp;arguments, int argOffset) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>parsePlaceholder</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>a19926d7efa3afe9983632e0f725a36df</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>parseStdFormatSpec</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>a78d72085f4f5572a7933674c8556e8b7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>preAndPostProcess</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>a666bb1baa8bcbf0822298d491d401ab3</anchor>
      <arglist>(integer startIdx, AString *target=nullptr)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>replaceEscapeSequences</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>a21a84743815e9b2b0e88ff59d9ce30cb</anchor>
      <arglist>(integer startIdx)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>resetPHAs</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>a91f06a45332414ed6b825a1ba08e084d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>setArgument</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>a10fc87f0b20b44ee89840f369c702cf1</anchor>
      <arglist>(int pos)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>writeCustomFormat</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>ac4d13df3795298e2efc90ccbc442fea7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>writeStdArgument</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1FormatterStdImpl.html</anchorfile>
      <anchor>a778167c4f6f64bc2c3d2391790e59877</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::Format::Hex</name>
    <filename>structaworx_1_1lib_1_1strings_1_1Format_1_1Hex.html</filename>
    <member kind="variable">
      <type>NumberFormat *</type>
      <name>nf</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1Format_1_1Hex.html</anchorfile>
      <anchor>afecb8b906f7e79cb68adcdbce823de5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>theValue</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1Format_1_1Hex.html</anchorfile>
      <anchor>a395b2523d70416e8827e521cc3766db8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>theWidth</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1Format_1_1Hex.html</anchorfile>
      <anchor>af24938d824f57b7af29025dfb0556f66</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Hex</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1Format_1_1Hex.html</anchorfile>
      <anchor>ad9a8770d8fc96664e7c833f20ebfa68f</anchor>
      <arglist>(uint64_t value, int overrideWidth=0, NumberFormat *numberFormat=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Hex</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1Format_1_1Hex.html</anchorfile>
      <anchor>a0e61f1fe637746b73ef9a4297e2508b7</anchor>
      <arglist>(uint64_t value, NumberFormat *numberFormat)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Hex</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1Format_1_1Hex.html</anchorfile>
      <anchor>a8778b902545c4b8f0de42b0fce55604f</anchor>
      <arglist>(uint32_t value, int overrideWidth=0, NumberFormat *numberFormat=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Hex</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1Format_1_1Hex.html</anchorfile>
      <anchor>a1b2968f78ff9aae00c8d11b28ea3124c</anchor>
      <arglist>(uint32_t value, NumberFormat *numberFormat)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::strings::boxing::IApply</name>
    <filename>classaworx_1_1lib_1_1strings_1_1boxing_1_1IApply.html</filename>
    <base>aworx::lib::boxing::Interface</base>
    <member kind="function" static="yes">
      <type>static IApply *</type>
      <name>GetDefaultSingleton</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1boxing_1_1IApply.html</anchorfile>
      <anchor>a05e99e6e4eb939e63c5df32704cec45e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IApply</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1boxing_1_1IApply.html</anchorfile>
      <anchor>afb413adf29026820842ae7ec8b376024</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API void</type>
      <name>Invoke</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1boxing_1_1IApply.html</anchorfile>
      <anchor>a16d8e419894311838f8460c925c485f7</anchor>
      <arglist>(const Box &amp;box, AString &amp;target)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::strings::boxing::IApply_BoxedAs_TApplicable</name>
    <filename>classaworx_1_1lib_1_1strings_1_1boxing_1_1IApply__BoxedAs__TApplicable.html</filename>
    <templarg></templarg>
    <base>aworx::lib::strings::boxing::IApply</base>
    <base>aworx::lib::lang::Singleton</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Invoke</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1boxing_1_1IApply__BoxedAs__TApplicable.html</anchorfile>
      <anchor>a4afe783be9db4f1d4203fbf543db2a90</anchor>
      <arglist>(const Box &amp;box, AString &amp;target) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::strings::boxing::IApply_TApplicable</name>
    <filename>classaworx_1_1lib_1_1strings_1_1boxing_1_1IApply__TApplicable.html</filename>
    <templarg></templarg>
    <base>aworx::lib::strings::boxing::IApply</base>
    <base>aworx::lib::lang::Singleton</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Invoke</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1boxing_1_1IApply__TApplicable.html</anchorfile>
      <anchor>a4afe783be9db4f1d4203fbf543db2a90</anchor>
      <arglist>(const Box &amp;box, AString &amp;target) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::strings::boxing::IApply_Tchar16_tArr</name>
    <filename>classaworx_1_1lib_1_1strings_1_1boxing_1_1IApply__Tchar16__tArr.html</filename>
    <base>aworx::lib::strings::boxing::IApply</base>
    <base>aworx::lib::lang::Singleton</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Invoke</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1boxing_1_1IApply__Tchar16__tArr.html</anchorfile>
      <anchor>a4afe783be9db4f1d4203fbf543db2a90</anchor>
      <arglist>(const Box &amp;box, AString &amp;target) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::strings::boxing::IApply_Tchar32_tArr</name>
    <filename>classaworx_1_1lib_1_1strings_1_1boxing_1_1IApply__Tchar32__tArr.html</filename>
    <base>aworx::lib::strings::boxing::IApply</base>
    <base>aworx::lib::lang::Singleton</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Invoke</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1boxing_1_1IApply__Tchar32__tArr.html</anchorfile>
      <anchor>a4afe783be9db4f1d4203fbf543db2a90</anchor>
      <arglist>(const Box &amp;box, AString &amp;target) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::strings::boxing::IApply_TcharArr</name>
    <filename>classaworx_1_1lib_1_1strings_1_1boxing_1_1IApply__TcharArr.html</filename>
    <base>aworx::lib::strings::boxing::IApply</base>
    <base>aworx::lib::lang::Singleton</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Invoke</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1boxing_1_1IApply__TcharArr.html</anchorfile>
      <anchor>a4afe783be9db4f1d4203fbf543db2a90</anchor>
      <arglist>(const Box &amp;box, AString &amp;target) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::strings::boxing::IApply_Twchar_tArr</name>
    <filename>classaworx_1_1lib_1_1strings_1_1boxing_1_1IApply__Twchar__tArr.html</filename>
    <base>aworx::lib::strings::boxing::IApply</base>
    <base>aworx::lib::lang::Singleton</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Invoke</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1boxing_1_1IApply__Twchar__tArr.html</anchorfile>
      <anchor>a4afe783be9db4f1d4203fbf543db2a90</anchor>
      <arglist>(const Box &amp;box, AString &amp;target) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::boxing::IEquals</name>
    <filename>classaworx_1_1lib_1_1boxing_1_1IEquals.html</filename>
    <base>aworx::lib::boxing::Interface</base>
    <member kind="function" static="yes">
      <type>static IEquals *</type>
      <name>GetDefaultSingleton</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1IEquals.html</anchorfile>
      <anchor>a5fc8b9168426678a2e5c8652c37b9438</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IEquals</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1IEquals.html</anchorfile>
      <anchor>ab11719299226c51d732f92764685fbe4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API bool</type>
      <name>Invoke</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1IEquals.html</anchorfile>
      <anchor>a2a49fbffb7b0fa8ea731f8ed25d717f9</anchor>
      <arglist>(const Box &amp;lhs, const Box &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::boxing::ftypes::IEquals_Tchar16_tArr</name>
    <filename>classaworx_1_1lib_1_1boxing_1_1ftypes_1_1IEquals__Tchar16__tArr.html</filename>
    <base>aworx::lib::boxing::IEquals</base>
    <base>aworx::lib::lang::Singleton</base>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual ALIB_API bool</type>
      <name>Invoke</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1ftypes_1_1IEquals__Tchar16__tArr.html</anchorfile>
      <anchor>a2a49fbffb7b0fa8ea731f8ed25d717f9</anchor>
      <arglist>(const Box &amp;lhs, const Box &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::boxing::ftypes::IEquals_Tchar32_tArr</name>
    <filename>classaworx_1_1lib_1_1boxing_1_1ftypes_1_1IEquals__Tchar32__tArr.html</filename>
    <base>aworx::lib::boxing::IEquals</base>
    <base>aworx::lib::lang::Singleton</base>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual ALIB_API bool</type>
      <name>Invoke</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1ftypes_1_1IEquals__Tchar32__tArr.html</anchorfile>
      <anchor>a2a49fbffb7b0fa8ea731f8ed25d717f9</anchor>
      <arglist>(const Box &amp;lhs, const Box &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::boxing::ftypes::IEquals_TcharArr</name>
    <filename>classaworx_1_1lib_1_1boxing_1_1ftypes_1_1IEquals__TcharArr.html</filename>
    <base>aworx::lib::boxing::IEquals</base>
    <base>aworx::lib::lang::Singleton</base>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual ALIB_API bool</type>
      <name>Invoke</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1ftypes_1_1IEquals__TcharArr.html</anchorfile>
      <anchor>a2a49fbffb7b0fa8ea731f8ed25d717f9</anchor>
      <arglist>(const Box &amp;lhs, const Box &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::boxing::IEquals_TComparable</name>
    <filename>classaworx_1_1lib_1_1boxing_1_1IEquals__TComparable.html</filename>
    <templarg></templarg>
    <base>aworx::lib::boxing::IEquals</base>
    <base>aworx::lib::lang::Singleton</base>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Invoke</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1IEquals__TComparable.html</anchorfile>
      <anchor>adfe5057404ad3bfcc728782039c3a0d0</anchor>
      <arglist>(const Box &amp;lhs, const Box &amp;rhs) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::boxing::ftypes::IEquals_Tdouble</name>
    <filename>classaworx_1_1lib_1_1boxing_1_1ftypes_1_1IEquals__Tdouble.html</filename>
    <base>aworx::lib::boxing::IEquals</base>
    <base>aworx::lib::lang::Singleton</base>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual ALIB_API bool</type>
      <name>Invoke</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1ftypes_1_1IEquals__Tdouble.html</anchorfile>
      <anchor>a2a49fbffb7b0fa8ea731f8ed25d717f9</anchor>
      <arglist>(const Box &amp;lhs, const Box &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::boxing::ftypes::IEquals_Twchar_tArr</name>
    <filename>classaworx_1_1lib_1_1boxing_1_1ftypes_1_1IEquals__Twchar__tArr.html</filename>
    <base>aworx::lib::boxing::IEquals</base>
    <base>aworx::lib::lang::Singleton</base>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual ALIB_API bool</type>
      <name>Invoke</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1ftypes_1_1IEquals__Twchar__tArr.html</anchorfile>
      <anchor>a2a49fbffb7b0fa8ea731f8ed25d717f9</anchor>
      <arglist>(const Box &amp;lhs, const Box &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::strings::boxing::IFormat</name>
    <filename>classaworx_1_1lib_1_1strings_1_1boxing_1_1IFormat.html</filename>
    <base>aworx::lib::boxing::Interface</base>
    <member kind="function">
      <type></type>
      <name>IFormat</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1boxing_1_1IFormat.html</anchorfile>
      <anchor>a916d55799df029023264205db7e2fe81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Invoke</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1boxing_1_1IFormat.html</anchorfile>
      <anchor>a9242c45fb83459cecd2cee1cd3df5b66</anchor>
      <arglist>(const Box &amp;box, const String &amp;formatSpec, AString &amp;target)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::time::IFormat_TimeStamp</name>
    <filename>classaworx_1_1lib_1_1time_1_1IFormat__TimeStamp.html</filename>
    <base>aworx::lib::strings::boxing::IFormat</base>
    <base>aworx::lib::lang::Singleton</base>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual ALIB_API void</type>
      <name>Invoke</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1IFormat__TimeStamp.html</anchorfile>
      <anchor>add5f25b21b66b78676ec81227eb2d939</anchor>
      <arglist>(const Box &amp;box, const String &amp;formatSpec, AString &amp;target) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::time::IFormat_TTicks</name>
    <filename>classaworx_1_1lib_1_1time_1_1IFormat__TTicks.html</filename>
    <base>aworx::lib::strings::boxing::IFormat</base>
    <base>aworx::lib::lang::Singleton</base>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual ALIB_API void</type>
      <name>Invoke</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1IFormat__TTicks.html</anchorfile>
      <anchor>add5f25b21b66b78676ec81227eb2d939</anchor>
      <arglist>(const Box &amp;box, const String &amp;formatSpec, AString &amp;target) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::boxing::IIsEmpty</name>
    <filename>classaworx_1_1lib_1_1boxing_1_1IIsEmpty.html</filename>
    <base>aworx::lib::boxing::Interface</base>
    <member kind="function" static="yes">
      <type>static IIsEmpty *</type>
      <name>GetDefaultSingleton</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1IIsEmpty.html</anchorfile>
      <anchor>a0e7c89a02c9d2eef019c0c0f890f044c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IIsEmpty</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1IIsEmpty.html</anchorfile>
      <anchor>a6f08e46cfadbe5c262c99926c095d7d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API bool</type>
      <name>Invoke</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1IIsEmpty.html</anchorfile>
      <anchor>af07c982e656c05e504eb6795781e16c4</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::boxing::IIsLess</name>
    <filename>classaworx_1_1lib_1_1boxing_1_1IIsLess.html</filename>
    <base>aworx::lib::boxing::Interface</base>
    <member kind="function" static="yes">
      <type>static IIsLess *</type>
      <name>GetDefaultSingleton</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1IIsLess.html</anchorfile>
      <anchor>a753ad1ce0f1dba6b1b46c5313a8b5043</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IIsLess</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1IIsLess.html</anchorfile>
      <anchor>ae721e35e564ec0e9b714ab1f2ff2cfa0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Invoke</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1IIsLess.html</anchorfile>
      <anchor>a2a49fbffb7b0fa8ea731f8ed25d717f9</anchor>
      <arglist>(const Box &amp;lhs, const Box &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::boxing::ftypes::IIsLess_boxed_int</name>
    <filename>classaworx_1_1lib_1_1boxing_1_1ftypes_1_1IIsLess__boxed__int.html</filename>
    <base>aworx::lib::boxing::IIsLess</base>
    <base>aworx::lib::lang::Singleton</base>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual ALIB_API bool</type>
      <name>Invoke</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1ftypes_1_1IIsLess__boxed__int.html</anchorfile>
      <anchor>a2a49fbffb7b0fa8ea731f8ed25d717f9</anchor>
      <arglist>(const Box &amp;lhs, const Box &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::boxing::ftypes::IIsLess_boxed_uint</name>
    <filename>classaworx_1_1lib_1_1boxing_1_1ftypes_1_1IIsLess__boxed__uint.html</filename>
    <base>aworx::lib::boxing::IIsLess</base>
    <base>aworx::lib::lang::Singleton</base>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual ALIB_API bool</type>
      <name>Invoke</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1ftypes_1_1IIsLess__boxed__uint.html</anchorfile>
      <anchor>a2a49fbffb7b0fa8ea731f8ed25d717f9</anchor>
      <arglist>(const Box &amp;lhs, const Box &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::boxing::ftypes::IIsLess_double</name>
    <filename>classaworx_1_1lib_1_1boxing_1_1ftypes_1_1IIsLess__double.html</filename>
    <base>aworx::lib::boxing::IIsLess</base>
    <base>aworx::lib::lang::Singleton</base>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual ALIB_API bool</type>
      <name>Invoke</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1ftypes_1_1IIsLess__double.html</anchorfile>
      <anchor>a2a49fbffb7b0fa8ea731f8ed25d717f9</anchor>
      <arglist>(const Box &amp;lhs, const Box &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::strings::boxing::IIsLess_Tchar_arr</name>
    <filename>classaworx_1_1lib_1_1strings_1_1boxing_1_1IIsLess__Tchar__arr.html</filename>
    <base>aworx::lib::boxing::IIsLess</base>
    <base>aworx::lib::lang::Singleton</base>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual ALIB_API bool</type>
      <name>Invoke</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1boxing_1_1IIsLess__Tchar__arr.html</anchorfile>
      <anchor>a2a49fbffb7b0fa8ea731f8ed25d717f9</anchor>
      <arglist>(const Box &amp;lhs, const Box &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::boxing::IIsNull</name>
    <filename>classaworx_1_1lib_1_1boxing_1_1IIsNull.html</filename>
    <base>aworx::lib::boxing::Interface</base>
    <member kind="function" static="yes">
      <type>static IIsNull *</type>
      <name>GetDefaultSingleton</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1IIsNull.html</anchorfile>
      <anchor>afbcdc42bcbb4ed6ff67d3c5f21f379b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IIsNull</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1IIsNull.html</anchorfile>
      <anchor>a34e9bb75919814251d526be4de30dbf8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Invoke</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1IIsNull.html</anchorfile>
      <anchor>aee3793eda103cdfa9cc904721eda09d5</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::boxing::IIsNull_false</name>
    <filename>classaworx_1_1lib_1_1boxing_1_1IIsNull__false.html</filename>
    <base>aworx::lib::boxing::IIsNull</base>
    <base>aworx::lib::lang::Singleton</base>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Invoke</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1IIsNull__false.html</anchorfile>
      <anchor>aee3793eda103cdfa9cc904721eda09d5</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::boxing::IIsTrue</name>
    <filename>classaworx_1_1lib_1_1boxing_1_1IIsTrue.html</filename>
    <base>aworx::lib::boxing::Interface</base>
    <member kind="function" static="yes">
      <type>static IIsTrue *</type>
      <name>GetDefaultSingleton</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1IIsTrue.html</anchorfile>
      <anchor>ab56409702184cbacc012373014fca602</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IIsTrue</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1IIsTrue.html</anchorfile>
      <anchor>a7f97df9c53e3568e8483e399da56319b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API bool</type>
      <name>Invoke</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1IIsTrue.html</anchorfile>
      <anchor>af07c982e656c05e504eb6795781e16c4</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::config::IniFile</name>
    <filename>classaworx_1_1lib_1_1config_1_1IniFile.html</filename>
    <base>aworx::lib::config::InMemoryPlugin</base>
    <class kind="class">aworx::lib::config::IniFile::Entry</class>
    <class kind="class">aworx::lib::config::IniFile::Section</class>
    <member kind="variable" static="yes">
      <type>static String</type>
      <name>DefaultFileExtension</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1IniFile.html</anchorfile>
      <anchor>a2eaa2333f2f0f3ee2b95eb569798ec80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>AutoSave</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1IniFile.html</anchorfile>
      <anchor>a297ce080be0d2d8b0f5245def3fd1b79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>DefaultCommentPrefix</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1IniFile.html</anchorfile>
      <anchor>a4476ecda6d3ab51725c78ffc7da2ecda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AString</type>
      <name>FileComments</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1IniFile.html</anchorfile>
      <anchor>a83074eb05e084e3cc5d0f9f3bb78f01b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AString</type>
      <name>FileName</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1IniFile.html</anchorfile>
      <anchor>a8bea19241a8e12acb6725e40dd6f2d74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>FormatIncludeDelimInAttrAlignment</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1IniFile.html</anchorfile>
      <anchor>adf4fc6544160ee73eafc6310d2085a12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>FormatSpaceAfterDelim</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1IniFile.html</anchorfile>
      <anchor>a0745166b66e5abe95006b75eeff309ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>FormatSpaceBeforeDelim</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1IniFile.html</anchorfile>
      <anchor>a4bac2e411ff2f25c16dedaba0de76d3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; int &gt;</type>
      <name>LinesWithReadErrors</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1IniFile.html</anchorfile>
      <anchor>a40fc3347bdd13c78626393bce4f4b7af</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ALIB_API</type>
      <name>IniFile</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1IniFile.html</anchorfile>
      <anchor>a941e3deeb4b8a4591a828fc06cfce59b</anchor>
      <arglist>(const String &amp;filePathAndName=nullptr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IniFile</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1IniFile.html</anchorfile>
      <anchor>ae196a3ba5e4598d6823ce0e77bbf75d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>virtual ALIB_API bool</type>
      <name>Load</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1IniFile.html</anchorfile>
      <anchor>ae644fb31eb15b9f85800a8d3327e2433</anchor>
      <arglist>(Variable &amp;variable, bool searchOnly=false) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>Name</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1IniFile.html</anchorfile>
      <anchor>a8f6daf3aa257e7df25ffd8eb04a072bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>ReadFile</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1IniFile.html</anchorfile>
      <anchor>a2f5ee87b16391fcd6d7fc804ad90613a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API void</type>
      <name>Reset</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1IniFile.html</anchorfile>
      <anchor>a372de693ad40b3f42839c8ec6ac845f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>virtual ALIB_API bool</type>
      <name>Store</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1IniFile.html</anchorfile>
      <anchor>af5e89a0424aac137a3b55e367958e144</anchor>
      <arglist>(Variable &amp;variable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Store</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1IniFile.html</anchorfile>
      <anchor>a4f2a984c2c2f6283441afc5187da6f2e</anchor>
      <arglist>(Variable &amp;variable)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>WriteFile</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1IniFile.html</anchorfile>
      <anchor>a2b1a265765a4780144983bd1e736e8fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ALIB_API Section *</type>
      <name>createSection</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1IniFile.html</anchorfile>
      <anchor>ac86a924344ead65a5aece542176c1e7b</anchor>
      <arglist>(const String &amp;sectionName)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALIB_API void</type>
      <name>writeComments</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1IniFile.html</anchorfile>
      <anchor>a8c63931fbc79dff0c0e014d63faa14d9</anchor>
      <arglist>(std::ostream &amp;os, const AString &amp;comments)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::config::InMemoryPlugin</name>
    <filename>classaworx_1_1lib_1_1config_1_1InMemoryPlugin.html</filename>
    <base>aworx::lib::config::ConfigurationPlugin</base>
    <class kind="class">aworx::lib::config::InMemoryPlugin::Entry</class>
    <class kind="class">aworx::lib::config::InMemoryPlugin::Section</class>
    <member kind="variable">
      <type>std::vector&lt; Section * &gt;</type>
      <name>Sections</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1InMemoryPlugin.html</anchorfile>
      <anchor>a4db383e1b52ed42586b8aaf43836c88d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InMemoryPlugin</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1InMemoryPlugin.html</anchorfile>
      <anchor>ace0bcdcc50a2d5a3fa3d00b105f51dc7</anchor>
      <arglist>(String pName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API</type>
      <name>~InMemoryPlugin</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1InMemoryPlugin.html</anchorfile>
      <anchor>a8eefe3405efd8f140e9fecd0f5becfec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API Iterator *</type>
      <name>GetIterator</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1InMemoryPlugin.html</anchorfile>
      <anchor>a46faa9cb170187ab6a7d2186b3db43e5</anchor>
      <arglist>(const String &amp;sectionName)</arglist>
    </member>
    <member kind="function">
      <type>virtual ALIB_API bool</type>
      <name>Load</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1InMemoryPlugin.html</anchorfile>
      <anchor>aaec23e950b7817d25b5ed184dc7848a4</anchor>
      <arglist>(Variable &amp;variable, bool searchOnly=false) const=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API bool</type>
      <name>Load</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1InMemoryPlugin.html</anchorfile>
      <anchor>ae644fb31eb15b9f85800a8d3327e2433</anchor>
      <arglist>(Variable &amp;variable, bool searchOnly=false) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>Name</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1InMemoryPlugin.html</anchorfile>
      <anchor>a8f6daf3aa257e7df25ffd8eb04a072bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API void</type>
      <name>Reset</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1InMemoryPlugin.html</anchorfile>
      <anchor>a372de693ad40b3f42839c8ec6ac845f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API Section *</type>
      <name>SearchOrCreateSection</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1InMemoryPlugin.html</anchorfile>
      <anchor>a7d7c49047053b1bbd38e3fd79e9b1d02</anchor>
      <arglist>(const String &amp;sectionName, const String &amp;comments)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API Section *</type>
      <name>SearchSection</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1InMemoryPlugin.html</anchorfile>
      <anchor>ad904a7ca1569a0481b5d6cbaccb65c88</anchor>
      <arglist>(const String &amp;sectionName) const</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>Store</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1InMemoryPlugin.html</anchorfile>
      <anchor>a4f2a984c2c2f6283441afc5187da6f2e</anchor>
      <arglist>(Variable &amp;variable)</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>Store</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1InMemoryPlugin.html</anchorfile>
      <anchor>a283b076bd741a168847a799efb291b33</anchor>
      <arglist>(Variable &amp;variable, const String &amp;externalizedValue)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API bool</type>
      <name>Store</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1InMemoryPlugin.html</anchorfile>
      <anchor>af5e89a0424aac137a3b55e367958e144</anchor>
      <arglist>(Variable &amp;variable)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>String</type>
      <name>name</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1InMemoryPlugin.html</anchorfile>
      <anchor>a9a2326f35466e54c36c070829245c557</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Section *</type>
      <name>createSection</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1InMemoryPlugin.html</anchorfile>
      <anchor>a0b698de4481d70da02ee89efa4e0cb3a</anchor>
      <arglist>(const String &amp;sectionName)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::boxing::Interface</name>
    <filename>classaworx_1_1lib_1_1boxing_1_1Interface.html</filename>
    <member kind="function">
      <type></type>
      <name>Interface</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Interface.html</anchorfile>
      <anchor>a7fc03ce9a2c1652fdb17279f1b25e652</anchor>
      <arglist>(const std::type_info &amp;type)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Interface</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Interface.html</anchorfile>
      <anchor>a8d07a756bb96ccfc79568730847385b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>aworx::lib::boxing::Boxer</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Interface.html</anchorfile>
      <anchor>aa51c5470cc108a53bfc48323c94d0212</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const std::type_info &amp;</type>
      <name>typeInfo</name>
      <anchorfile>classaworx_1_1lib_1_1boxing_1_1Interface.html</anchorfile>
      <anchor>a850d0a52a5a9215400d3f7e4d3b12025</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::config::Configuration::Iterator</name>
    <filename>classaworx_1_1lib_1_1config_1_1Configuration_1_1Iterator.html</filename>
    <member kind="variable">
      <type>Variable</type>
      <name>Actual</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Configuration_1_1Iterator.html</anchorfile>
      <anchor>ab749d6d11a9936609113ecfb2209de79</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Iterator</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Configuration_1_1Iterator.html</anchorfile>
      <anchor>a47b331bac1d130f2bab2c40e76ccb54a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Next</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Configuration_1_1Iterator.html</anchorfile>
      <anchor>acb5deb25968a0e5136263625e359c37b</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::config::ConfigurationPlugin::Iterator</name>
    <filename>classaworx_1_1lib_1_1config_1_1ConfigurationPlugin_1_1Iterator.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Iterator</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1ConfigurationPlugin_1_1Iterator.html</anchorfile>
      <anchor>a47b331bac1d130f2bab2c40e76ccb54a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Next</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1ConfigurationPlugin_1_1Iterator.html</anchorfile>
      <anchor>a7133fd05c93e1ca5fed272b46bc4bfd5</anchor>
      <arglist>(Variable &amp;variable)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::lang::Lang</name>
    <filename>classaworx_1_1lib_1_1lang_1_1Lang.html</filename>
    <base>aworx::lib::lang::Library</base>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Lang.html</anchorfile>
      <anchor>a0f7439457156e6270dfd3ccfd07e1ea1</anchor>
      <arglist>(Phases phase) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>terminationCleanUp</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Lang.html</anchorfile>
      <anchor>a7f9483d9dee8eaaeae3831a8bb40731e</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::lang::Library</name>
    <filename>classaworx_1_1lib_1_1lang_1_1Library.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>InitLevels</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Library.html</anchorfile>
      <anchor>af5f7af5636e8a1e1baf1076f08e79b02</anchor>
      <arglist></arglist>
      <enumvalue file="classaworx_1_1lib_1_1lang_1_1Library.html" anchor="af5f7af5636e8a1e1baf1076f08e79b02a7dcd6d6e6de3f9da7811cbf193be4cfd">PrepareResources</enumvalue>
      <enumvalue file="classaworx_1_1lib_1_1lang_1_1Library.html" anchor="af5f7af5636e8a1e1baf1076f08e79b02a804e592cd86d9e2a58f4ee431fb7ac53">PrepareConfig</enumvalue>
      <enumvalue file="classaworx_1_1lib_1_1lang_1_1Library.html" anchor="af5f7af5636e8a1e1baf1076f08e79b02ab1c94ca2fbc3e78fc30069c8d0f01680">All</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Phases</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Library.html</anchorfile>
      <anchor>a5d32d09cde4f13ec4fb05a824d3e3219</anchor>
      <arglist></arglist>
      <enumvalue file="classaworx_1_1lib_1_1lang_1_1Library.html" anchor="a5d32d09cde4f13ec4fb05a824d3e3219a3a093dc14f7d2052c85990fe5719492c">resourceset</enumvalue>
      <enumvalue file="classaworx_1_1lib_1_1lang_1_1Library.html" anchor="a5d32d09cde4f13ec4fb05a824d3e3219a995aba3172a166a517d35ef8074e6a7f">resourceload</enumvalue>
      <enumvalue file="classaworx_1_1lib_1_1lang_1_1Library.html" anchor="a5d32d09cde4f13ec4fb05a824d3e3219a2a1585a864d9e67627c6ae04c807a2c5">final</enumvalue>
      <enumvalue file="classaworx_1_1lib_1_1lang_1_1Library.html" anchor="a5d32d09cde4f13ec4fb05a824d3e3219aba61548e71fe29cca4b4d5eeb161541e">END_OF_ITERATION</enumvalue>
      <enumvalue file="classaworx_1_1lib_1_1lang_1_1Library.html" anchor="a5d32d09cde4f13ec4fb05a824d3e3219ab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="classaworx_1_1lib_1_1lang_1_1Library.html" anchor="a5d32d09cde4f13ec4fb05a824d3e3219a5fb1f955b45e38e31789286a1790398d">ALL</enumvalue>
      <enumvalue file="classaworx_1_1lib_1_1lang_1_1Library.html" anchor="a5d32d09cde4f13ec4fb05a824d3e3219a9d725163e44a2e9cf094059c0abfdef1">TERMINATED</enumvalue>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; const char *, uint64_t &gt; &gt;</type>
      <name>CompilationFlagMeanings</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Library.html</anchorfile>
      <anchor>a78772e213364571dd5a4135621b15645</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint64_t</type>
      <name>CompilationFlags</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Library.html</anchorfile>
      <anchor>ad3c1e7a231e88307d2484c7d6af833a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>config::Configuration *</type>
      <name>Config</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Library.html</anchorfile>
      <anchor>a7e8a1c3ae5bce4e178fa1d122021bb7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Resources *</type>
      <name>Res</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Library.html</anchorfile>
      <anchor>ab627750b141ce5fb08acab78e8ec3da8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>strings::TString</type>
      <name>ResourceCategory</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Library.html</anchorfile>
      <anchor>a20b7d9378dd73fde6c94341091af9445</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>Revision</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Library.html</anchorfile>
      <anchor>a9c8cddb79a23b8e57370078da95de8ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>Version</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Library.html</anchorfile>
      <anchor>a8d88b5f159f3cd597cdd92f942340024</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Library</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Library.html</anchorfile>
      <anchor>a217742c83da8907d623e338a236d8cfe</anchor>
      <arglist>(int version, int revision, const String &amp;resourceCategory, uint64_t compilationFlags=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Library</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Library.html</anchorfile>
      <anchor>a56c4af2b2bbb1ed2dfaff13956a23ab6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddResource</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Library.html</anchorfile>
      <anchor>a2a0209bcb29d417d43cecd3cfb7dc8f9</anchor>
      <arglist>(const String &amp;name, const String &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>Get</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Library.html</anchorfile>
      <anchor>a03dfa90a21c8ab81873b3bf246ad0a33</anchor>
      <arglist>(const String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>GetTry</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Library.html</anchorfile>
      <anchor>a05ecef2aeced2c15b98f4387370dd935</anchor>
      <arglist>(const String &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API bool</type>
      <name>Init</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Library.html</anchorfile>
      <anchor>abad644913fc967938ede0607a353e29c</anchor>
      <arglist>(InitLevels level=InitLevels::All)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API bool</type>
      <name>Init</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Library.html</anchorfile>
      <anchor>a34e021aa2764ee7bf81035878f84de6f</anchor>
      <arglist>(int argc, char **argv, InitLevels level=InitLevels::All)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API bool</type>
      <name>Init</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Library.html</anchorfile>
      <anchor>a5c188865d1f19ef09faa3a9a99079bdb</anchor>
      <arglist>(int argc, wchar_t **argv, InitLevels level=InitLevels::All)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsInitialized</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Library.html</anchorfile>
      <anchor>a5d722e33d5e4075d4f0fc88c7cb54bd2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReplaceResource</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Library.html</anchorfile>
      <anchor>a492ec7a07a27159dbdb72d131bd678dc</anchor>
      <arglist>(const String &amp;name, const String &amp;data, const String &amp;expectedResource=NullString)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API void</type>
      <name>TerminationCleanUp</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Library.html</anchorfile>
      <anchor>a768e7aa880b198b033d2bde1dd66c7b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API bool</type>
      <name>VerifyCompilationFlags</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Library.html</anchorfile>
      <anchor>a2f125437b5a6d80e4026f4153c1cb8c5</anchor>
      <arglist>(uint64_t compilationFlags)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Library * &gt;</type>
      <name>dependencies</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Library.html</anchorfile>
      <anchor>a3c06d37894e88f199e4b81218b870278</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Phases</type>
      <name>initState</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Library.html</anchorfile>
      <anchor>a3140b8a0756ba094c4b4ef748859bb8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>isResourceAndConfigOwner</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Library.html</anchorfile>
      <anchor>aa1f55900afd0fbf2792d560f10aceb5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>doInit</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Library.html</anchorfile>
      <anchor>a0bbaaca5c9aea78dd452f10854820897</anchor>
      <arglist>(Phases phases, int argc, char **argv, wchar_t **wargv)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doInitRecursion</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Library.html</anchorfile>
      <anchor>af98704b02585a327a14304d252997f11</anchor>
      <arglist>(Phases phase)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Library.html</anchorfile>
      <anchor>a53c148f92b7958bbb2ac3a216f193807</anchor>
      <arglist>(Phases phase)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>terminationCleanUp</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Library.html</anchorfile>
      <anchor>a10834966488a8a64a820af0c9b8db1e7</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lox::Log</name>
    <filename>classaworx_1_1lox_1_1Log.html</filename>
    <member kind="variable" static="yes">
      <type>static ALOX_API core::textlogger::TextLogger *</type>
      <name>DebugLogger</name>
      <anchorfile>classaworx_1_1lox_1_1Log.html</anchorfile>
      <anchor>a6dab5611a4ba1574d65dfcdcb0f77cd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALoxReportWriter *</type>
      <name>DebugReportWriter</name>
      <anchorfile>classaworx_1_1lox_1_1Log.html</anchorfile>
      <anchor>a3fc6107634a1988540d4f827c3586233</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALOX_API core::textlogger::TextLogger *</type>
      <name>IDELogger</name>
      <anchorfile>classaworx_1_1lox_1_1Log.html</anchorfile>
      <anchor>a7764bec073718f0cc7c022afbc17b4b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ALOX_API void</type>
      <name>AddALibReportWriter</name>
      <anchorfile>classaworx_1_1lox_1_1Log.html</anchorfile>
      <anchor>abb8bfbfc93fc3b5b0d8bd9bcac6b7235</anchor>
      <arglist>(Lox *lox)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ALOX_API void</type>
      <name>AddDebugLogger</name>
      <anchorfile>classaworx_1_1lox_1_1Log.html</anchorfile>
      <anchor>a06444d2e7a321e26fe1d4c309cb8ed49</anchor>
      <arglist>(Lox *lox)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ALOX_API void</type>
      <name>RemoveALibReportWriter</name>
      <anchorfile>classaworx_1_1lox_1_1Log.html</anchorfile>
      <anchor>a9bd252035e8769cec5f74ca014b46817</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ALOX_API void</type>
      <name>RemoveDebugLogger</name>
      <anchorfile>classaworx_1_1lox_1_1Log.html</anchorfile>
      <anchor>a6d4775cac3c6e185f454a5e1fbf9325a</anchor>
      <arglist>(Lox *lox)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lox::core::Logger</name>
    <filename>classaworx_1_1lox_1_1core_1_1Logger.html</filename>
    <base>aworx::lib::threads::SmartLock</base>
    <member kind="variable">
      <type>int</type>
      <name>CntLogs</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Logger.html</anchorfile>
      <anchor>ac0d4236906004de0129b9ff90108fdff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>lib::time::Ticks</type>
      <name>TimeOfCreation</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Logger.html</anchorfile>
      <anchor>a23018e698fe55b2e42a8982828188801</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>lib::time::Ticks</type>
      <name>TimeOfLastLog</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Logger.html</anchorfile>
      <anchor>a82a500fb8edf826b0c802fce0bee6f67</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Logger</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Logger.html</anchorfile>
      <anchor>a7a62719474beac5f447b376e0c9d5b44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const TString &amp;</type>
      <name>GetName</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Logger.html</anchorfile>
      <anchor>a5bf41c888bd6020da88c1bb5460419a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const TString &amp;</type>
      <name>GetTypeName</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Logger.html</anchorfile>
      <anchor>a69ee5edf3543e8dee4110f04d3efa9dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Log</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Logger.html</anchorfile>
      <anchor>aad1169d160da5e3443144dca9a2c2e05</anchor>
      <arglist>(Domain &amp;dom, Verbosity verbosity, Boxes &amp;logables, ScopeInfo &amp;scope)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>String32</type>
      <name>Name</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Logger.html</anchorfile>
      <anchor>ab3c68b8a64bf47454f94bde4ebb6de0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>String32</type>
      <name>TypeName</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Logger.html</anchorfile>
      <anchor>a5a295fb1c491a3a0bc84efbe8ebe28c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>_apiInitializer</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Logger.html</anchorfile>
      <anchor>aaa96ca32f5b8d83954f9d77629c1b036</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Logger</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1Logger.html</anchorfile>
      <anchor>aee3bfe16d6478e9f80bf37786712bfe9</anchor>
      <arglist>(const String &amp;name, const String &amp;typeName)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lox::core::Domain::LoggerData</name>
    <filename>structaworx_1_1lox_1_1core_1_1Domain_1_1LoggerData.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>LogCallsPerDomain</name>
      <anchorfile>structaworx_1_1lox_1_1core_1_1Domain_1_1LoggerData.html</anchorfile>
      <anchor>a2eb0308f7da72022ce5a09987b3f14bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>core::Logger *</type>
      <name>Logger</name>
      <anchorfile>structaworx_1_1lox_1_1core_1_1Domain_1_1LoggerData.html</anchorfile>
      <anchor>ab0f0a9542542d6c8782e1ad65fdc708b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Verbosity</type>
      <name>LoggerVerbosity</name>
      <anchorfile>structaworx_1_1lox_1_1core_1_1Domain_1_1LoggerData.html</anchorfile>
      <anchor>a312c13a4f141e167f5b82a483b9a9edd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Priorities</type>
      <name>Priority</name>
      <anchorfile>structaworx_1_1lox_1_1core_1_1Domain_1_1LoggerData.html</anchorfile>
      <anchor>a785160bb624ffbba18242691580e55c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LoggerData</name>
      <anchorfile>structaworx_1_1lox_1_1core_1_1Domain_1_1LoggerData.html</anchorfile>
      <anchor>a7665b2385a58790b8ef821caeea4f7bf</anchor>
      <arglist>(core::Logger *logger)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lox::LogTools</name>
    <filename>classaworx_1_1lox_1_1LogTools.html</filename>
    <member kind="function" static="yes">
      <type>static ALIB_API void</type>
      <name>Exception</name>
      <anchorfile>classaworx_1_1lox_1_1LogTools.html</anchorfile>
      <anchor>ad9659c873a905d67b12dcdef5dcc7bed</anchor>
      <arglist>(Lox &amp;lox, aworx::Exception &amp;e, Verbosity verbosity=Verbosity::Error, const String &amp;domainPrefix=&quot;/ERR&quot;, const String &amp;logPrefix=&quot;  &quot;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lox::Lox</name>
    <filename>classaworx_1_1lox_1_1Lox.html</filename>
    <base protection="protected">aworx::lib::threads::ThreadLock</base>
    <member kind="enumeration">
      <type></type>
      <name>StateInfo</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>aa2916fda7c89ab56ba7645d99879df31</anchor>
      <arglist></arglist>
      <enumvalue file="classaworx_1_1lox_1_1Lox.html" anchor="aa2916fda7c89ab56ba7645d99879df31ab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="classaworx_1_1lox_1_1Lox.html" anchor="aa2916fda7c89ab56ba7645d99879df31a972e73b7a882d0802a4e3a16946a2f94">Basic</enumvalue>
      <enumvalue file="classaworx_1_1lox_1_1Lox.html" anchor="aa2916fda7c89ab56ba7645d99879df31a34b6cd75171affba6957e308dcbd92be">Version</enumvalue>
      <enumvalue file="classaworx_1_1lox_1_1Lox.html" anchor="aa2916fda7c89ab56ba7645d99879df31a96b1c552ca6ed5ee0ee3d0af174530ab">Loggers</enumvalue>
      <enumvalue file="classaworx_1_1lox_1_1Lox.html" anchor="aa2916fda7c89ab56ba7645d99879df31a78cd2c7d5422ffdb6d9545211ca49eeb">Domains</enumvalue>
      <enumvalue file="classaworx_1_1lox_1_1Lox.html" anchor="aa2916fda7c89ab56ba7645d99879df31a31113a0541f0520765177c7069ba8ca1">InternalDomains</enumvalue>
      <enumvalue file="classaworx_1_1lox_1_1Lox.html" anchor="aa2916fda7c89ab56ba7645d99879df31a068b63932226b23a03535d36d8d2eb22">ScopeDomains</enumvalue>
      <enumvalue file="classaworx_1_1lox_1_1Lox.html" anchor="aa2916fda7c89ab56ba7645d99879df31a2f83cd74c1361769a936e39b22fdc603">DSR</enumvalue>
      <enumvalue file="classaworx_1_1lox_1_1Lox.html" anchor="aa2916fda7c89ab56ba7645d99879df31a4febf3aa9c543957a624d0e01118ad99">PrefixLogables</enumvalue>
      <enumvalue file="classaworx_1_1lox_1_1Lox.html" anchor="aa2916fda7c89ab56ba7645d99879df31ae1a9dc9f23534e63de9df0d540ac1611">Once</enumvalue>
      <enumvalue file="classaworx_1_1lox_1_1Lox.html" anchor="aa2916fda7c89ab56ba7645d99879df31a8252db9108bed0cc77b9108ef2e5b215">LogData</enumvalue>
      <enumvalue file="classaworx_1_1lox_1_1Lox.html" anchor="aa2916fda7c89ab56ba7645d99879df31afb1cd41460e08ac954abd863f3e769b4">ThreadMappings</enumvalue>
      <enumvalue file="classaworx_1_1lox_1_1Lox.html" anchor="aa2916fda7c89ab56ba7645d99879df31acb272fa6b5049b35cc46afdbea004556">SPTR</enumvalue>
      <enumvalue file="classaworx_1_1lox_1_1Lox.html" anchor="aa2916fda7c89ab56ba7645d99879df31a20dd27d31849969ca1a1a73a5a1593ac">CompilationFlags</enumvalue>
      <enumvalue file="classaworx_1_1lox_1_1Lox.html" anchor="aa2916fda7c89ab56ba7645d99879df31ab1c94ca2fbc3e78fc30069c8d0f01680">All</enumvalue>
    </member>
    <class kind="struct">aworx::lox::Lox::DomainSubstitutionRule</class>
    <member kind="variable">
      <type>int</type>
      <name>CntLogCalls</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a2c80e5630abe5d5042ddb4b85c0c3562</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ALOX_API core::textlogger::TextLogger *</type>
      <name>CreateConsoleLogger</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>ae92c4ae884c3cd723deb9b5e8d27b6ac</anchor>
      <arglist>(const String &amp;name=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API</type>
      <name>Lox</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a1c1585d0800185380c13eb475249aa58</anchor>
      <arglist>(const String &amp;name, bool doRegister=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALOX_API</type>
      <name>~Lox</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>afdd4c34686526f164c1bddccb183bd45</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_WARNINGS_OVERLOAD_VIRTUAL_OFF void</type>
      <name>Acquire</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a988585c51f422fdb6b6882fd46896c2d</anchor>
      <arglist>(const TString &amp;file, int line, const TString &amp;func) ALIB_DBG(override)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Assert</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a95e4dff854b14da3b9e1705ab99add29</anchor>
      <arglist>(bool condition, BoxedObjects &amp;&amp;... logables)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearSourcePathTrimRules</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a197f9ceb9fba85ebe74a375f0c3dc29c</anchor>
      <arglist>(Reach reach=Reach::Global, bool allowAutoRule=true)</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API void</type>
      <name>Entry</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>af6caffa31ef8d6220e9aaa9e00eb3ecd</anchor>
      <arglist>(const String &amp;domain, Verbosity verbosity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EntryDetectDomain</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a8bc0b8686b418eea110be695a6646450</anchor>
      <arglist>(Verbosity verbosity, BoxedObjects &amp;&amp;... logables)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Error</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a04f4500374e0206bf2f2e9b8c5b8008f</anchor>
      <arglist>(BoxedObjects &amp;&amp;... logables)</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API Boxes &amp;</type>
      <name>GetLogableContainer</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>aa7a44092299209cb04df6c8c7cf9cda7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API core::Logger *</type>
      <name>GetLogger</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a829395dc991b4aed5a09ef5aa77e3e12</anchor>
      <arglist>(const String &amp;loggerName)</arglist>
    </member>
    <member kind="function">
      <type>const String</type>
      <name>GetName</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>acf83cc2cb9e495e07808a4aaa1bed50e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API void</type>
      <name>GetState</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>ab493d2adc9a5bc4a79cfba532af998e3</anchor>
      <arglist>(AString &amp;buf, StateInfo flags=StateInfo::All)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>If</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>ad0d10a1dcd8f0b252edd5b17751e5c90</anchor>
      <arglist>(bool condition, const String &amp;domain, Verbosity verbosity, BoxedObjects &amp;&amp;... logables)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>If</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a2b0a0635440c46527d70d48c6bc32ca9</anchor>
      <arglist>(bool condition, Verbosity verbosity, BoxedObjects &amp;&amp;... logables)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Info</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a06ea69bd0319ab11bc8dab5241fe88ae</anchor>
      <arglist>(BoxedObjects &amp;&amp;... logables)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsRegistered</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a7232acc9ffe4595630e4abdaf6918ef9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API void</type>
      <name>MapThreadName</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a3911541857ea84938dede341ceb64ddd</anchor>
      <arglist>(const String &amp;threadName, int id=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Once</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a79bebcd15b9f6a526c4e5d9d3c79c46f</anchor>
      <arglist>(const String &amp;domain, Verbosity verbosity, const Box &amp;logables, const String &amp;group, Scope scope=Scope::Global, int quantity=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Once</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a5653789ebccf06d0dd06e29066a754ed</anchor>
      <arglist>(Verbosity verbosity, const Box &amp;logables, const String &amp;group, Scope scope, int quantity=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Once</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a450a4772747076c4152c273220a0a975</anchor>
      <arglist>(Verbosity verbosity, const Box &amp;logables, const String &amp;group, int quantity=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Once</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a9bb447f6b679132af1df88e837338b73</anchor>
      <arglist>(Verbosity verbosity, const Box &amp;logables, int quantity=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Once</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>aa9232e0176b4e91bc117a6533bf7e1df</anchor>
      <arglist>(const Box &amp;logables, const String &amp;group, Scope scope, int quantity=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Once</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a34a8880e2a278ffdfc0814188f87421b</anchor>
      <arglist>(const String &amp;domain, Verbosity verbosity, const Box &amp;logables, Scope scope=Scope::Global, int quantity=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Once</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>ae745689d03c1ea393c94f403230c04e0</anchor>
      <arglist>(Verbosity verbosity, const Box &amp;logables, Scope scope, int quantity=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Once</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a0c48a9ee258285ac970bc06ec5913774</anchor>
      <arglist>(const Box &amp;logables, Scope scope, int quantity=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Once</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a1a333fcf4915ba4157e4c2c78c11ef34</anchor>
      <arglist>(const Box &amp;logables, int quantity=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Once</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a4ae77c879297e411e02878a3a56c0d9a</anchor>
      <arglist>(const Box &amp;logables, const String &amp;group, int quantity=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_WARNINGS_RESTORE void</type>
      <name>Release</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a044393918deb33780c17d010fa8ef27c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API bool</type>
      <name>RemoveLogger</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>ab2aa68c613846fce90749385f1c373e1</anchor>
      <arglist>(core::Logger *logger)</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API core::Logger *</type>
      <name>RemoveLogger</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>aa919db1f8e24e600d7f648f52a240487</anchor>
      <arglist>(const String &amp;loggerName)</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API void</type>
      <name>RemoveThreadDomain</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>adb89a8f794afb0b6551fe45499dea973</anchor>
      <arglist>(const String &amp;scopeDomain, Scope scope, Thread *thread=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API void</type>
      <name>Reset</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a372de693ad40b3f42839c8ec6ac845f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API Box</type>
      <name>Retrieve</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>aaac0bce32cf17e137a2cb53598eb65bc</anchor>
      <arglist>(const String &amp;key, Scope scope=Scope::Global)</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API Box</type>
      <name>Retrieve</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a81447b86b8fab91e4a44163b063ec737</anchor>
      <arglist>(Scope scope=Scope::Global)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDomain</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a230b89005c93ffdbfe0dd689d7eb0f11</anchor>
      <arglist>(const String &amp;scopeDomain, Scope scope)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDomain</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a7400e88de124219833bcf081835d2ce0</anchor>
      <arglist>(const String &amp;scopeDomain, Scope scope, Thread *thread)</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API void</type>
      <name>SetDomainSubstitutionRule</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a29833c62d41ae3049594a81c7651dfdc</anchor>
      <arglist>(const String &amp;domainPath, const String &amp;replacement)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPrefix</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a868d9d33d9456b6380abf3bf39cd8b16</anchor>
      <arglist>(const Box &amp;prefix, Scope scope)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPrefix</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a264c932c18a338a9759309825a08b16a</anchor>
      <arglist>(const Box &amp;prefix, Scope scope, Thread *thread)</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API void</type>
      <name>SetPrefix</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a73b0ea069f4b4e068e61acc88f8c65d3</anchor>
      <arglist>(const Box &amp;prefix, const String &amp;domain=nullptr, lib::lang::Inclusion otherPLs=lib::lang::Inclusion::Include)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSourcePathTrimRule</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a30d2d3a359e2aba54ed0a53388e90ba0</anchor>
      <arglist>(const String &amp;path, Inclusion includeString=Inclusion::Exclude, int trimOffset=0, Case sensitivity=Case::Ignore, const String &amp;trimReplacement=NullString, Reach reach=Reach::Global, Priorities priority=Priorities::DefaultValues)</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API void</type>
      <name>SetStartTime</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a38f1b49d9a57c65ea233c6cf8f96c5f3</anchor>
      <arglist>(Ticks startTime=lib::time::Ticks(0), const String &amp;loggerName=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API void</type>
      <name>SetStartTime</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a717cc8dfcf1a68396ca4bd060eca1c75</anchor>
      <arglist>(time_t startTime, const String &amp;loggerName=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API void</type>
      <name>SetStartTime</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a264248c9c72e3e8aaa8b6ec61dbd2a56</anchor>
      <arglist>(const FILETIME &amp;startTime, const String &amp;loggerName=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API void</type>
      <name>SetVerbosity</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>ae0996e2acc9b8e4f43cbe144cf623177</anchor>
      <arglist>(core::Logger *logger, Verbosity verbosity, const String &amp;domain=&quot;/&quot;, Priorities priority=Priorities::DefaultValues)</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API void</type>
      <name>SetVerbosity</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>ad98aedbb5397b9150d3e3ae9e9f8f8c5</anchor>
      <arglist>(const String &amp;loggerName, Verbosity verbosity, const String &amp;domain=&quot;/&quot;, Priorities priority=Priorities::DefaultValues)</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API void</type>
      <name>State</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a8396987d83aaa22cb36dad2d9d2254dd</anchor>
      <arglist>(const String &amp;domain, Verbosity verbosity, const String &amp;headLine, StateInfo flags=StateInfo::All)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Store</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a8148cc441fc8a094d28eb998b363d211</anchor>
      <arglist>(const Box &amp;data, const String &amp;key, Scope scope=Scope::Global)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Store</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a2aed7a14111c67285b0c9f63f81cea94</anchor>
      <arglist>(const Box &amp;data, Scope scope=Scope::Global)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Verbose</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a6eabd60bb346393885053a79b0878062</anchor>
      <arglist>(BoxedObjects &amp;&amp;... logables)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Warning</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a9bd60e42f5dd47901101aad5c0e25f4d</anchor>
      <arglist>(BoxedObjects &amp;&amp;... logables)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>core::Domain</type>
      <name>domains</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>af7a1bb606d5ac72b03aa6cf35988405a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; DomainSubstitutionRule &gt;</type>
      <name>domainSubstitutions</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a7f3139c0b1ac2de972db69d485a9481e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>core::Domain</type>
      <name>internalDomains</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>aa3529fb39b5e80492452d6fb4b669b4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Boxes * &gt;</type>
      <name>internalLogables</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a7f5630f0510932d63198d29a729373e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>internalLogRecursionCounter</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a5e22390c19a647e38a318f563a189dea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Boxes * &gt;</type>
      <name>logableContainers</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a313c8423be63c22ca37ef10c0468a261</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>loggerAddedSinceLastDebugState</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>ae1d2d3f00029eeccb82c286b93314df0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>integer</type>
      <name>maxDomainPathLength</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>ad0dfadfaabce0aaeb460840342b1bedb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>integer</type>
      <name>maxLoggerNameLength</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>aa39b6b0d2f42bdf6d087da6ca02a4f88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const aworx::String</type>
      <name>noKeyHashKey</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>af2884f385d8b26ee5c2182af4b17d849</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>oneTimeWarningCircularDS</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a1ff634203235e02dab39d057469ec3db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>core::ScopeStore&lt; AString * &gt;</type>
      <name>scopeDomains</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a0b8621c72cad2bd075810e7d8641c327</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>core::ScopeInfo</type>
      <name>scopeInfo</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a39702a71b03e2768266e8bfbef7d6c62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>core::ScopeStore&lt; std::map&lt; AString, Box &gt; * &gt;</type>
      <name>scopeLogData</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a4eb70a6efea29f698f3c26edcf2819fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>core::ScopeStore&lt; std::map&lt; AString, int &gt; * &gt;</type>
      <name>scopeLogOnce</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a4fe9fdff3ef94ccf56c20bba13571e72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>core::ScopeStore&lt; Box * &gt;</type>
      <name>scopePrefixes</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a16203901444c9c452c071b0e3a480bb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>core::ScopeInfo::ThreadDictionary</type>
      <name>threadDictionary</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>aaa1e0a8fb5a0deba7ca52242bfa582c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Boxes &amp;</type>
      <name>acquireInternalLogables</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a73bbed03ab83327061dafd3e38f47248</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALOX_API int</type>
      <name>checkScopeInformation</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a3a5ef7a33feed1022db5eaa588f04c25</anchor>
      <arglist>(Scope &amp;scope, const String &amp;internalDomain)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALOX_API void</type>
      <name>clear</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>ac8bb3912a3ce86b15842e79d0b421204</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALOX_API void</type>
      <name>dumpStateOnLoggerRemoval</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a8801e9bd1ba933633227c2d83339ef14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALOX_API void</type>
      <name>entryDetectDomainImpl</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a4898ec5010e16764661194024bf98e0d</anchor>
      <arglist>(Verbosity verbosity)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALOX_API core::Domain *</type>
      <name>evaluateResultDomain</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a8726cc323411194c683b6a8ff0b1a895</anchor>
      <arglist>(const String &amp;domainPath)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALOX_API core::Domain *</type>
      <name>findDomain</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a6626bfcd61951612dc87c92e648727f6</anchor>
      <arglist>(core::Domain &amp;domainSystem, String domainPath)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALOX_API void</type>
      <name>getAllVerbosities</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a28ad49d8a4527349a06263fcdd486a2c</anchor>
      <arglist>(core::Logger *logger, core::Domain *dom, Variable &amp;variable)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALOX_API void</type>
      <name>getDomainPrefixFromConfig</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a030358e0f73b889aaf603e4d3371a845</anchor>
      <arglist>(core::Domain *dom)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALOX_API void</type>
      <name>getVerbosityFromConfig</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a94820d7e42dec81154d350d91f04fe27</anchor>
      <arglist>(core::Logger *logger, core::Domain *dom, Variable &amp;variable)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALOX_API bool</type>
      <name>isThreadRelatedScope</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a28d8099108a0e54af2abd18a2f58e112</anchor>
      <arglist>(Scope scope)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALOX_API void</type>
      <name>log</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a1460f4390fb67afcb68adb549d81a1d5</anchor>
      <arglist>(core::Domain *dom, Verbosity verbosity, Boxes &amp;logables, Inclusion prefixes)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALOX_API void</type>
      <name>logInternal</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a867453b588d52f7ad7501b70c5b0570d</anchor>
      <arglist>(Verbosity verbosity, const String &amp;subDomain, Boxes &amp;msg)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALOX_API void</type>
      <name>logInternal</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a2a3c8a81a3153c230b1780bcc53a282d</anchor>
      <arglist>(Verbosity verbosity, const String &amp;subDomain, const String &amp;msg)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALOX_API void</type>
      <name>once</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a7d09e0cf8ecb25a5b19080966fc98656</anchor>
      <arglist>(const String &amp;domain, Verbosity verbosity, const Box &amp;logables, const String &amp;pGroup, Scope scope, int quantity)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALOX_API Box</type>
      <name>retrieveImpl</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a7aef738aa944623c13764d8e71b89d6a</anchor>
      <arglist>(const String &amp;pKey, Scope scope)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALOX_API void</type>
      <name>setDomainImpl</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>abda16fbeffc7202d32738f51cc14437d</anchor>
      <arglist>(const String &amp;scopeDomain, Scope scope, bool removeNTRSD, Thread *thread)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALOX_API void</type>
      <name>setPrefixImpl</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>ab4721f7a04801212d2f74307c3c7443e</anchor>
      <arglist>(const Box &amp;prefix, Scope scope, Thread *thread)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALOX_API void</type>
      <name>storeImpl</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a87c74f0b69c7563f13c6f77b498c221d</anchor>
      <arglist>(const Box &amp;data, const String &amp;pKey, Scope scope)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALOX_API void</type>
      <name>writeVerbositiesOnLoggerRemoval</name>
      <anchorfile>classaworx_1_1lox_1_1Lox.html</anchorfile>
      <anchor>a177e884c9baeadb15e900176501150fe</anchor>
      <arglist>(Logger *logger)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::util::MemoryBlocks</name>
    <filename>classaworx_1_1lib_1_1util_1_1MemoryBlocks.html</filename>
    <class kind="struct">aworx::lib::util::MemoryBlocks::Block</class>
    <member kind="function">
      <type>ALIB_API</type>
      <name>MemoryBlocks</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1MemoryBlocks.html</anchorfile>
      <anchor>a6841865f27b3c18751b1317d9e474e5f</anchor>
      <arglist>(int stdBlockSize)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API</type>
      <name>~MemoryBlocks</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1MemoryBlocks.html</anchorfile>
      <anchor>a4bae7cf642f3f88ae62c8e58d73d5719</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>Clear</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1MemoryBlocks.html</anchorfile>
      <anchor>a5adf136d81c5f74751d1f612765eed63</anchor>
      <arglist>(CurrentData currentData=CurrentData::Keep)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>Copy</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1MemoryBlocks.html</anchorfile>
      <anchor>a81816594c3ea2adecef005c51246814b</anchor>
      <arglist>(const String &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API char *</type>
      <name>GetMemory</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1MemoryBlocks.html</anchorfile>
      <anchor>a2d57320c14db61d7332d91454927c665</anchor>
      <arglist>(integer size)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; MemoryBlocks::Block &gt;::iterator</type>
      <name>actBlock</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1MemoryBlocks.html</anchorfile>
      <anchor>a8f27840cec926c0258ed08574810282e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>integer</type>
      <name>blockAllocationSize</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1MemoryBlocks.html</anchorfile>
      <anchor>a716207b6d42fa3556bd14fea9d447a59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; MemoryBlocks::Block &gt;</type>
      <name>blocks</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1MemoryBlocks.html</anchorfile>
      <anchor>a8233bb73a8902511160c088a35036f8f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lox::loggers::MemoryLogger</name>
    <filename>classaworx_1_1lox_1_1loggers_1_1MemoryLogger.html</filename>
    <base>aworx::lox::core::textlogger::PlainTextLogger</base>
    <member kind="variable">
      <type>AString</type>
      <name>MemoryLog</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1MemoryLogger.html</anchorfile>
      <anchor>ab885e710ebb2c0ae44ee92604a4d56f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>UseWCharLengthForTabAdjustments</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1MemoryLogger.html</anchorfile>
      <anchor>a3a7dfded816c72283193efb178b3c0fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MemoryLogger</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1MemoryLogger.html</anchorfile>
      <anchor>a59248830037daf331304554a19a18fa1</anchor>
      <arglist>(const String &amp;name=nullptr, bool pruneESCSequences=true, bool useWCharLengthForTabAdjustments=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MemoryLogger</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1MemoryLogger.html</anchorfile>
      <anchor>a4c1e470f494f74e508a4854c6331e7b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual integer</type>
      <name>logSubstring</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1MemoryLogger.html</anchorfile>
      <anchor>a2998b950ec670bcf7b7bc3753dbfa0ad</anchor>
      <arglist>(const String &amp;buffer, integer start, integer length)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>notifyLogOp</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1MemoryLogger.html</anchorfile>
      <anchor>ac940fa5e315f926a268a107289ed9935</anchor>
      <arglist>(lib::lang::Phase phase)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>notifyMultiLineOp</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1MemoryLogger.html</anchorfile>
      <anchor>a7cf9f0c4d2657cff2f8acdfa3778f18a</anchor>
      <arglist>(lib::lang::Phase)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::lang::Report::Message</name>
    <filename>classaworx_1_1lib_1_1lang_1_1Report_1_1Message.html</filename>
    <base>aworx::lib::boxing::Boxes</base>
    <member kind="variable">
      <type>const strings::TString &amp;</type>
      <name>File</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Report_1_1Message.html</anchorfile>
      <anchor>ab4336abc4c74ecd888729fd0af580e53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const strings::TString &amp;</type>
      <name>Func</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Report_1_1Message.html</anchorfile>
      <anchor>a2b44f701383104187505a36037238027</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Line</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Report_1_1Message.html</anchorfile>
      <anchor>af5b2cae791582f6f4f975f6b25290977</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Type</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Report_1_1Message.html</anchorfile>
      <anchor>ae011432eaca3858364b05a111f4011d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Message</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Report_1_1Message.html</anchorfile>
      <anchor>a6f3cf9d6e0d4aa1d2b6c1cb8eea97b40</anchor>
      <arglist>(const strings::TString &amp;file, int line, const strings::TString &amp;func, int type, TBoxables &amp;&amp;... boxables)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lox::core::textlogger::MetaInfo</name>
    <filename>classaworx_1_1lox_1_1core_1_1textlogger_1_1MetaInfo.html</filename>
    <member kind="variable">
      <type>String32</type>
      <name>DateFormat</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1MetaInfo.html</anchorfile>
      <anchor>a1fbed1c474077f1de310990f68692ef6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AString</type>
      <name>Format</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1MetaInfo.html</anchorfile>
      <anchor>a5f73a9d6a9bfabaa4a33c34831006d07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>FormatWarning</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1MetaInfo.html</anchorfile>
      <anchor>a9b4dcaaa0d0c31151f28626b539b2c78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>LogNumberMinDigits</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1MetaInfo.html</anchorfile>
      <anchor>a72c44479ec3d128c1208b49e4b8ede08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Ticks</type>
      <name>MaxElapsedTime</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1MetaInfo.html</anchorfile>
      <anchor>ade3c3fa6f130947ef6aa22e72a4d1efd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String16</type>
      <name>NoMethodInfo</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1MetaInfo.html</anchorfile>
      <anchor>abd38b6803cf4301827357a54195f180c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String16</type>
      <name>NoSourceFileInfo</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1MetaInfo.html</anchorfile>
      <anchor>a8d08768c3fc9055cf9d17f3714ec87ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String16</type>
      <name>TimeDiffDays</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1MetaInfo.html</anchorfile>
      <anchor>aa3f98d2aa27c33f8dc7c3cf4c6b1a0d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String16</type>
      <name>TimeDiffHours</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1MetaInfo.html</anchorfile>
      <anchor>a20d1d3b476a6aafeeb5e87fbfacc5e52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String16</type>
      <name>TimeDiffMicros</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1MetaInfo.html</anchorfile>
      <anchor>a661a09a8e1eb17581bc67aff1f132d56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String16</type>
      <name>TimeDiffMillis</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1MetaInfo.html</anchorfile>
      <anchor>ad78fde89caeb4ccbe776b1d351d52413</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>TimeDiffMinimum</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1MetaInfo.html</anchorfile>
      <anchor>ac157e75e392d65f6a31ec429d8939342</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String16</type>
      <name>TimeDiffMins</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1MetaInfo.html</anchorfile>
      <anchor>a6781ce4c72ba2117380b0ee0b803e4bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String16</type>
      <name>TimeDiffNanos</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1MetaInfo.html</anchorfile>
      <anchor>a64f81ff97c47cac44c8c03890bdf62b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String16</type>
      <name>TimeDiffNone</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1MetaInfo.html</anchorfile>
      <anchor>a1e70c1adc386d8704fd62c4978a0a3d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String16</type>
      <name>TimeDiffSecs</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1MetaInfo.html</anchorfile>
      <anchor>a12c8df15357e02da8b11708cb294cfd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String16</type>
      <name>TimeElapsedDays</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1MetaInfo.html</anchorfile>
      <anchor>a41d26c37bd02bb24b9428af4896aa074</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String16</type>
      <name>TimeOfDayFormat</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1MetaInfo.html</anchorfile>
      <anchor>a84bddee7b379ee961f0d8dc745401985</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String16</type>
      <name>VerbosityError</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1MetaInfo.html</anchorfile>
      <anchor>a697a4af23750f87b2cc13aaaecc056eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String16</type>
      <name>VerbosityInfo</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1MetaInfo.html</anchorfile>
      <anchor>a807b208f28b840290a9784dbef53e5bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String16</type>
      <name>VerbosityVerbose</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1MetaInfo.html</anchorfile>
      <anchor>a9959513d319bcf3d5bbd6d4d49b2ef27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String16</type>
      <name>VerbosityWarning</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1MetaInfo.html</anchorfile>
      <anchor>aec7b4b89c7f2ec594514bd36388f7cc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MetaInfo</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1MetaInfo.html</anchorfile>
      <anchor>aef8deedd002add9fa92b6776af338ddb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MetaInfo</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1MetaInfo.html</anchorfile>
      <anchor>a7d8a1047142018ffc32e85ca0bf21df0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALOX_API int</type>
      <name>Write</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1MetaInfo.html</anchorfile>
      <anchor>a037523cdb14e8bae567b8fef2d102009</anchor>
      <arglist>(TextLogger &amp;logger, AString &amp;buffer, core::Domain &amp;domain, Verbosity verbosity, ScopeInfo &amp;scope)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>lib::time::TicksCalendarTime</type>
      <name>callerDateTime</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1MetaInfo.html</anchorfile>
      <anchor>a594357dd2afccbf86f5b6dfcdda82bbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ALOX_API int</type>
      <name>processVariable</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1MetaInfo.html</anchorfile>
      <anchor>adea560dbe05cd27b8d3313d5bd202817</anchor>
      <arglist>(TextLogger &amp;logger, core::Domain &amp;domain, Verbosity verbosity, ScopeInfo &amp;scope, AString &amp;dest, Substring &amp;variable)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ALOX_API void</type>
      <name>writeTimeDiff</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1MetaInfo.html</anchorfile>
      <anchor>a1552646f1c2d55a45edd487147c377c3</anchor>
      <arglist>(AString &amp;buffer, int64_t diffNanos)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::util::StringTree::Node</name>
    <filename>structaworx_1_1lib_1_1util_1_1StringTree_1_1Node.html</filename>
    <member kind="variable">
      <type>TMap</type>
      <name>children</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1StringTree_1_1Node.html</anchorfile>
      <anchor>ac37f26f9defa51c300e3f29fb591cfe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Node *</type>
      <name>parent</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1StringTree_1_1Node.html</anchorfile>
      <anchor>a15358e51f4bc699859aef344484ae4a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>T</type>
      <name>value</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1StringTree_1_1Node.html</anchorfile>
      <anchor>a4fc7f59e3113e19697159919a5aad095</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Node</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1StringTree_1_1Node.html</anchorfile>
      <anchor>ab8a9be2be80cb737fe017becff054cec</anchor>
      <arglist>(Node *_parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Node</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1StringTree_1_1Node.html</anchorfile>
      <anchor>a6fa6bf60f34f1e3efb0e59333428c9c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Node *</type>
      <name>createChild</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1StringTree_1_1Node.html</anchorfile>
      <anchor>ac73b1e901363b189cd0edee4fc48c851</anchor>
      <arglist>(const String &amp;childName)</arglist>
    </member>
    <member kind="function">
      <type>Node *</type>
      <name>createChildNoCheck</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1StringTree_1_1Node.html</anchorfile>
      <anchor>ae875d1a5a1d29cfcef7658ef760053b3</anchor>
      <arglist>(const String &amp;childName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deleteChild</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1StringTree_1_1Node.html</anchorfile>
      <anchor>a0a3922cb188865f3e4f562fea816b97b</anchor>
      <arglist>(const String &amp;childName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteChildren</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1StringTree_1_1Node.html</anchorfile>
      <anchor>abf67d882cbea8b20d80544fe5f604e4a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>depth</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1StringTree_1_1Node.html</anchorfile>
      <anchor>acf8e2f791de955ccde3115b485b94dc9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Node *</type>
      <name>getChild</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1StringTree_1_1Node.html</anchorfile>
      <anchor>afec5af9c58eadb62cfba0930c152974e</anchor>
      <arglist>(const String &amp;childName)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Node *, bool &gt;</type>
      <name>getOrCreateChild</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1StringTree_1_1Node.html</anchorfile>
      <anchor>ad98567ca3dbb8150615c55c304d38f04</anchor>
      <arglist>(const String &amp;childName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRoot</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1StringTree_1_1Node.html</anchorfile>
      <anchor>ad78e3dab6fc481769907b77419fe4bac</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::strings::NumberFormat</name>
    <filename>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</filename>
    <member kind="variable" static="yes">
      <type>static ALIB_API NumberFormat</type>
      <name>Computational</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>acf46ddfeb324ad3027ecf50f6f48e149</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ALIB_API NumberFormat</type>
      <name>Global</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>a9c9a27c7479023730cc33644fc6c9164</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>BinByteGroupChar</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>ade8533df8da8765093139ab54d06488f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>BinFieldWidth</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>a3bc6f3d1550a4d2a5210ddd33fa794ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TString</type>
      <name>BinLiteralPrefix</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>ac280b7884d17a2e01420081dc97040be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>BinNibbleGroupChar</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>a52fb2bece64bb3a4adf24e044e17e510</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>BinWord32GroupChar</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>af3718aaa08f434d1d0debee4fbbd644a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>BinWordGroupChar</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>acaa2bcb7c8ec0e16cd3a4a8ef42f9196</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>DecimalPointChar</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>ad283a34604408f7d20bc724f9b68e723</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>DecMinimumFieldWidth</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>a2c4bcfc167e7e3890a911508e8d3611f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TString</type>
      <name>ExponentSeparator</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>a3540c96e146a5c929f05b4a3d4f2cd64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>ForceDecimalPoint</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>acd495e7cc1a2cbe9356f593f65ea7432</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>ForceScientific</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>a4abcf6e13582e3d8c9d0dbf893f831f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>FractionalPartWidth</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>a97e091f874fd75c5506bd2adf6288d48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>HexByteGroupChar</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>af11061663cf5a8beaee0770f639da119</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>HexFieldWidth</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>a7304036b69935cb425cbf850e0e993ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TString</type>
      <name>HexLiteralPrefix</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>a88219d8571872b8d3e7c1162051b1b5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>HexLowerCase</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>aed301d26ea468e5d52ab2344b622a30c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>HexWord32GroupChar</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>a96a6e97358e865265ebd08402e2d6eb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>HexWordGroupChar</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>a1681171be43099b162cbabd2f6b66b15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TString</type>
      <name>INFLiteral</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>a4cc2fe9387873552ba7934d551e12e49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>IntegralPartMinimumWidth</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>a2a4db10f06c84cfd604377afdf6d3678</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>LeadingGroupCharReplacement</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>aa2765e4ca203eddcddc204992bb12f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TString</type>
      <name>NANLiteral</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>a4b2e8501e611c992c787ad09f5cae9eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>OctFieldWidth</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>a4c23a1f8226dff3b90bd58bc2d0fdc61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>OctGroupChar</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>ad3c12e2e8b719b892c3f4fc2e3b05dd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TString</type>
      <name>OctLiteralPrefix</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>a4a5db98ee426384036b2241eb3a1bdc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>OmitTrailingFractionalZeros</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>ae0dd4b7525e685cda0529171819b1f00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>PlusSign</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>a47b728ba91b6729f1a6c2a07e66fbf06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>ReadGroupChars</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>aee7723fe1353a222ebf36638e542da8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>ThousandsGroupChar</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>a7635f548490932c61e74373b1122eaf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TString</type>
      <name>Whitespaces</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>a9930366fb06415d9ff341fc79da323fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>WriteExponentPlusSign</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>a6c00bcda73309af42240644e7b354a35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>WriteGroupChars</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>a877af5f03733426bed72938e52874da7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ALIB_API uint64_t</type>
      <name>ParseDecDigits</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>abd58b87517e4426468b2523e19149394</anchor>
      <arglist>(const String &amp;src, integer &amp;idx)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NumberFormat</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>a9542c335f9afa5fe0f51857ed9cdaaf3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API uint64_t</type>
      <name>ParseBin</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>a8e59c1e4538a1b671bbb00a67ee6c69c</anchor>
      <arglist>(const String &amp;src, integer &amp;idx)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API uint64_t</type>
      <name>ParseDec</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>afc38a5eee53f6649d43fa1e0d53108ca</anchor>
      <arglist>(const String &amp;src, integer &amp;idx)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API double</type>
      <name>ParseFloat</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>a6be15202eae48c8e0b2e4bbef2ea6783</anchor>
      <arglist>(const String &amp;src, integer &amp;idx)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API uint64_t</type>
      <name>ParseHex</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>a1ac7780cc55cd76894e0abc8e111e996</anchor>
      <arglist>(const String &amp;src, integer &amp;idx)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API int64_t</type>
      <name>ParseInt</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>acbc2577785db35d2351c36a4f3c2ff2a</anchor>
      <arglist>(const String &amp;src, integer &amp;idx)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API uint64_t</type>
      <name>ParseOct</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>a6a3d711103554f1eca89df777400b71b</anchor>
      <arglist>(const String &amp;src, integer &amp;idx)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>Set</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>af44f23e7a91224b998c10eb4500654f9</anchor>
      <arglist>(NumberFormat *other=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>SetComputational</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>ad3db6c2cbd7606d63136f8bffd82c6d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>SetFromLocale</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>a286f8e0f3c8b0faa574522a25fbb0912</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API integer</type>
      <name>WriteBin</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>aecd4c0a566f29a2d18accf22ae5b955f</anchor>
      <arglist>(uint64_t value, char *buffer, integer idx, int overrideWidth)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API integer</type>
      <name>WriteDecSigned</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>a56559e48e2b817ae33b1cd72d52169c5</anchor>
      <arglist>(int64_t value, char *buffer, integer idx, int overrideWidth)</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>WriteDecUnsigned</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>ad4399372eba982b9a72b834e231c8939</anchor>
      <arglist>(uint64_t value, char *buffer, integer idx, int overrideWidth)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API integer</type>
      <name>writeDecUnsigned</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>a9d6440aa000e8fecb15b9c5b594f5f5a</anchor>
      <arglist>(uint64_t value, char *buffer, integer idx, int width)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API integer</type>
      <name>WriteFloat</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>aa769aff22c52a371394bdf80f3d12ecb</anchor>
      <arglist>(double value, char *buffer, integer idx, int overrideWidth)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API integer</type>
      <name>WriteHex</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>a2da883ca34b9aee8c923411ea067f9fa</anchor>
      <arglist>(uint64_t value, char *buffer, integer idx, int overrideWidth)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API integer</type>
      <name>WriteOct</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1NumberFormat.html</anchorfile>
      <anchor>a2fc8ebcc6d6b03d7a15345bdbb322915</anchor>
      <arglist>(uint64_t value, char *buffer, integer idx, int overrideWidth)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lox::core::textlogger::ObjectConverter</name>
    <filename>classaworx_1_1lox_1_1core_1_1textlogger_1_1ObjectConverter.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjectConverter</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1ObjectConverter.html</anchorfile>
      <anchor>a6e913a253720dcb333b6205b4272709d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>ConvertObjects</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1ObjectConverter.html</anchorfile>
      <anchor>a55f0f6e1278bd55091cc85108652da96</anchor>
      <arglist>(AString &amp;target, Boxes &amp;logables)=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::Format::Oct</name>
    <filename>structaworx_1_1lib_1_1strings_1_1Format_1_1Oct.html</filename>
    <member kind="variable">
      <type>NumberFormat *</type>
      <name>nf</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1Format_1_1Oct.html</anchorfile>
      <anchor>afecb8b906f7e79cb68adcdbce823de5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>theValue</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1Format_1_1Oct.html</anchorfile>
      <anchor>a395b2523d70416e8827e521cc3766db8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>theWidth</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1Format_1_1Oct.html</anchorfile>
      <anchor>af24938d824f57b7af29025dfb0556f66</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Oct</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1Format_1_1Oct.html</anchorfile>
      <anchor>a717ad2fec922e9bfc0bfd86fe66359c5</anchor>
      <arglist>(uint64_t value, int overrideWidth=0, NumberFormat *numberFormat=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Oct</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1Format_1_1Oct.html</anchorfile>
      <anchor>a96b1f248550a975ad793d09ff266e592</anchor>
      <arglist>(uint64_t value, NumberFormat *numberFormat)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Oct</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1Format_1_1Oct.html</anchorfile>
      <anchor>ab8f23f1156f36969a17b4b1215fb1775</anchor>
      <arglist>(uint32_t value, int overrideWidth=0, NumberFormat *numberFormat=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Oct</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1Format_1_1Oct.html</anchorfile>
      <anchor>a728e07a32736b4b5c68f45224b010201</anchor>
      <arglist>(uint32_t value, NumberFormat *numberFormat)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::lang::Ownable</name>
    <filename>classaworx_1_1lib_1_1lang_1_1Ownable.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Ownable</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Ownable.html</anchorfile>
      <anchor>a0cf51e767ecc62f4adc80e8d69e066df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Acquire</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Ownable.html</anchorfile>
      <anchor>a07a42f9930e2b2f9b94a3d47d3088532</anchor>
      <arglist>(const TString &amp;file, int line, const TString &amp;func)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Release</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Ownable.html</anchorfile>
      <anchor>a4dc7ecb0d192d6cccc9287daaf0eca0f</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>acquirementLineNumber</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Ownable.html</anchorfile>
      <anchor>a7d085fb917fb26fa76fad94d9296665d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>strings::TString</type>
      <name>acquirementMethodName</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Ownable.html</anchorfile>
      <anchor>a34743946c0a8598a13feea2b3c7944eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>strings::TString</type>
      <name>acquirementSourcefile</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Ownable.html</anchorfile>
      <anchor>ae9f15c83b17c4bab35858650c98c44d5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::lang::Owner</name>
    <filename>structaworx_1_1lib_1_1lang_1_1Owner.html</filename>
    <member kind="function">
      <type></type>
      <name>Owner</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1Owner.html</anchorfile>
      <anchor>a514baed722d3c59c870ad9579f7002ae</anchor>
      <arglist>(Ownable &amp;ownable, const TString &amp;file, int line, const TString &amp;func)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Owner</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1Owner.html</anchorfile>
      <anchor>ac22eca8fa24d998053adc01cde626b52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Ownable &amp;</type>
      <name>theOwnable</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1Owner.html</anchorfile>
      <anchor>a7db872f63d70d3345d0168940fdf1a7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void *</type>
      <name>operator new</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1Owner.html</anchorfile>
      <anchor>a5b996753d27ee6aa451e57a8ad036ff2</anchor>
      <arglist>(size_t)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void *</type>
      <name>operator new</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1Owner.html</anchorfile>
      <anchor>a8b8a5b77612e74d607419f697801f78c</anchor>
      <arglist>(size_t, void *)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void *</type>
      <name>operator new[]</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1Owner.html</anchorfile>
      <anchor>af0072d761e6c74c852e9c08861249007</anchor>
      <arglist>(size_t)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void *</type>
      <name>operator new[]</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1Owner.html</anchorfile>
      <anchor>a712ceeb8f0cad22b42d82c702b750eac</anchor>
      <arglist>(size_t, void *)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Owner &amp;</type>
      <name>operator=</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1Owner.html</anchorfile>
      <anchor>abc04222281a5040c88978fc8cc5410f0</anchor>
      <arglist>(const Owner &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lox::core::textlogger::PlainTextLogger</name>
    <filename>classaworx_1_1lox_1_1core_1_1textlogger_1_1PlainTextLogger.html</filename>
    <base>aworx::lox::core::textlogger::TextLogger</base>
    <member kind="variable">
      <type>bool</type>
      <name>PruneESCSequences</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1PlainTextLogger.html</anchorfile>
      <anchor>a9d44a2f52e37f22c5893a1c174251749</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PlainTextLogger</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1PlainTextLogger.html</anchorfile>
      <anchor>a2f3dfc9db13a16de7292abe4ca45bc82</anchor>
      <arglist>(const String &amp;name, const String &amp;typeName, bool usesStdStreams)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~PlainTextLogger</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1PlainTextLogger.html</anchorfile>
      <anchor>a2780280e08368bd1ee9de360d1c07a6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual integer</type>
      <name>logSubstring</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1PlainTextLogger.html</anchorfile>
      <anchor>a40fd6b0eaf7b2754a6f505db3687e6a8</anchor>
      <arglist>(const String &amp;buffer, integer start, integer length)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ALOX_API void</type>
      <name>logText</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1PlainTextLogger.html</anchorfile>
      <anchor>aa7e70b90717f0429abf0990e5e12ad9f</anchor>
      <arglist>(core::Domain &amp;domain, Verbosity verbosity, AString &amp;msg, core::ScopeInfo &amp;scope, int lineNumber)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>notifyLogOp</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1PlainTextLogger.html</anchorfile>
      <anchor>a85cbe194c271ccc0c031a9fa9aeb3f51</anchor>
      <arglist>(lib::lang::Phase phase)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::util::PluginContainer</name>
    <filename>classaworx_1_1lib_1_1util_1_1PluginContainer.html</filename>
    <templarg>pTPlugin</templarg>
    <templarg>pTPriorities</templarg>
    <base>aworx::lib::threads::ThreadLock</base>
    <member kind="typedef">
      <type>pTPlugin</type>
      <name>TPlugin</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1PluginContainer.html</anchorfile>
      <anchor>a2013d0a728b075dfbffc40f77876b0b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pTPriorities</type>
      <name>TPriorities</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1PluginContainer.html</anchorfile>
      <anchor>a3f949b8609e855c63a0be04e4f582d34</anchor>
      <arglist></arglist>
    </member>
    <class kind="struct">aworx::lib::util::PluginContainer::Slot</class>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PluginContainer</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1PluginContainer.html</anchorfile>
      <anchor>af37e3c575ca5138ee9ffae6ae54cee1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>CountPlugins</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1PluginContainer.html</anchorfile>
      <anchor>aebfadd8b53d13e193db717c967b21602</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TPlugin *</type>
      <name>GetPlugin</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1PluginContainer.html</anchorfile>
      <anchor>a5ab6bd858ba0f2643076b151c5b52098</anchor>
      <arglist>(size_t number)</arglist>
    </member>
    <member kind="function">
      <type>TPlugin *</type>
      <name>GetPlugin</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1PluginContainer.html</anchorfile>
      <anchor>a41dac85fdbba7b39e5be3b2c82b48aad</anchor>
      <arglist>(TPriorities priority)</arglist>
    </member>
    <member kind="function">
      <type>TPluginType *</type>
      <name>GetPluginTypeSafe</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1PluginContainer.html</anchorfile>
      <anchor>a8789353278d2b1e6929397521a540ff4</anchor>
      <arglist>(TPriorities priority)</arglist>
    </member>
    <member kind="function">
      <type>TPluginType *</type>
      <name>GetPluginTypeSafe</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1PluginContainer.html</anchorfile>
      <anchor>a28b3a28e42db5000c6794a61720d0a94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasPlugins</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1PluginContainer.html</anchorfile>
      <anchor>a06922a119b8659b7852d3cd04009bea9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InsertPlugin</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1PluginContainer.html</anchorfile>
      <anchor>a0fbe8a829205bbd2cc9b5249e9cc5dae</anchor>
      <arglist>(TPlugin *plugin, TPriorities priority, lang::Responsibility responsibility=lang::Responsibility::KeepWithSender)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RemovePlugin</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1PluginContainer.html</anchorfile>
      <anchor>a12da6b5f9ce8fe0c80261384ab45e071</anchor>
      <arglist>(TPlugin *plugin)</arglist>
    </member>
    <member kind="function">
      <type>TPlugin *</type>
      <name>RemovePlugin</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1PluginContainer.html</anchorfile>
      <anchor>a17b7431786aa6fa8ec8323e647993a0c</anchor>
      <arglist>(TPriorities priority)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Slot &gt;</type>
      <name>plugins</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1PluginContainer.html</anchorfile>
      <anchor>aefb0e5aa78574294360aa4404def1546</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; TPlugin * &gt;</type>
      <name>pluginsOwned</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1PluginContainer.html</anchorfile>
      <anchor>ae123e42288639003e21f988cba43d8e1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PluginContainer&lt; ConfigurationPlugin, Priorities &gt;</name>
    <filename>classaworx_1_1lib_1_1util_1_1PluginContainer.html</filename>
    <base>aworx::lib::threads::ThreadLock</base>
    <member kind="typedef">
      <type>ConfigurationPlugin</type>
      <name>TPlugin</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1PluginContainer.html</anchorfile>
      <anchor>a2013d0a728b075dfbffc40f77876b0b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Priorities</type>
      <name>TPriorities</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1PluginContainer.html</anchorfile>
      <anchor>a3f949b8609e855c63a0be04e4f582d34</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PluginContainer</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1PluginContainer.html</anchorfile>
      <anchor>af37e3c575ca5138ee9ffae6ae54cee1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>CountPlugins</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1PluginContainer.html</anchorfile>
      <anchor>aebfadd8b53d13e193db717c967b21602</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TPlugin *</type>
      <name>GetPlugin</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1PluginContainer.html</anchorfile>
      <anchor>a5ab6bd858ba0f2643076b151c5b52098</anchor>
      <arglist>(size_t number)</arglist>
    </member>
    <member kind="function">
      <type>TPlugin *</type>
      <name>GetPlugin</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1PluginContainer.html</anchorfile>
      <anchor>a41dac85fdbba7b39e5be3b2c82b48aad</anchor>
      <arglist>(TPriorities priority)</arglist>
    </member>
    <member kind="function">
      <type>TPluginType *</type>
      <name>GetPluginTypeSafe</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1PluginContainer.html</anchorfile>
      <anchor>a8789353278d2b1e6929397521a540ff4</anchor>
      <arglist>(TPriorities priority)</arglist>
    </member>
    <member kind="function">
      <type>TPluginType *</type>
      <name>GetPluginTypeSafe</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1PluginContainer.html</anchorfile>
      <anchor>a28b3a28e42db5000c6794a61720d0a94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasPlugins</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1PluginContainer.html</anchorfile>
      <anchor>a06922a119b8659b7852d3cd04009bea9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InsertPlugin</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1PluginContainer.html</anchorfile>
      <anchor>a0fbe8a829205bbd2cc9b5249e9cc5dae</anchor>
      <arglist>(TPlugin *plugin, TPriorities priority, lang::Responsibility responsibility=lang::Responsibility::KeepWithSender)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RemovePlugin</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1PluginContainer.html</anchorfile>
      <anchor>a12da6b5f9ce8fe0c80261384ab45e071</anchor>
      <arglist>(TPlugin *plugin)</arglist>
    </member>
    <member kind="function">
      <type>TPlugin *</type>
      <name>RemovePlugin</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1PluginContainer.html</anchorfile>
      <anchor>a17b7431786aa6fa8ec8323e647993a0c</anchor>
      <arglist>(TPriorities priority)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Slot &gt;</type>
      <name>plugins</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1PluginContainer.html</anchorfile>
      <anchor>aefb0e5aa78574294360aa4404def1546</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; TPlugin *&gt;</type>
      <name>pluginsOwned</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1PluginContainer.html</anchorfile>
      <anchor>ae123e42288639003e21f988cba43d8e1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::strings::PreallocatedString</name>
    <filename>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</filename>
    <templarg>TCapacity</templarg>
    <base>aworx::lib::strings::AString</base>
    <member kind="function">
      <type>constexpr</type>
      <name>PreallocatedString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>ac585a9d67e12366867f16cdf65db1593</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PreallocatedString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>a8fcc38ef326fb2c1d64ee7e2fa6df7b8</anchor>
      <arglist>(const PreallocatedString &amp;copy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PreallocatedString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>a66fcd18865b8c604df35c29578f3f3d7</anchor>
      <arglist>(PreallocatedString &amp;&amp;move) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PreallocatedString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>a026da30134930f13e104ee6a552bdc6d</anchor>
      <arglist>(AString &amp;&amp;move) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PreallocatedString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>ad716f6b3fe53cf699bf3a680d89ca3d9</anchor>
      <arglist>(const T &amp;src)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PreallocatedString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>a86f75b346f992b3ae21302622d40f87c</anchor>
      <arglist>(const String &amp;src, integer regionStart, integer regionLength=CString::MaxLen)</arglist>
    </member>
    <member kind="function">
      <type>PreallocatedString&lt; TCapacity &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>a8d45c282eb1069917c4a0a1a5b76caac</anchor>
      <arglist>(const PreallocatedString &amp;copy)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>preAllocBuf</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>a8b9dbb4b7dcd6efcb8275318c285f811</anchor>
      <arglist>[TCapacity]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PreallocatedString&lt; 16 &gt;</name>
    <filename>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</filename>
    <base>aworx::lib::strings::AString</base>
    <member kind="function">
      <type>constexpr</type>
      <name>PreallocatedString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>ac585a9d67e12366867f16cdf65db1593</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PreallocatedString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>a8fcc38ef326fb2c1d64ee7e2fa6df7b8</anchor>
      <arglist>(const PreallocatedString &amp;copy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PreallocatedString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>a66fcd18865b8c604df35c29578f3f3d7</anchor>
      <arglist>(PreallocatedString &amp;&amp;move) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PreallocatedString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>a026da30134930f13e104ee6a552bdc6d</anchor>
      <arglist>(AString &amp;&amp;move) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PreallocatedString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>ad716f6b3fe53cf699bf3a680d89ca3d9</anchor>
      <arglist>(const T &amp;src)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PreallocatedString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>a86f75b346f992b3ae21302622d40f87c</anchor>
      <arglist>(const String &amp;src, integer regionStart, integer regionLength=CString::MaxLen)</arglist>
    </member>
    <member kind="function">
      <type>PreallocatedString&lt; TCapacity &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>a8d45c282eb1069917c4a0a1a5b76caac</anchor>
      <arglist>(const PreallocatedString &amp;copy)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>preAllocBuf</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>a8b9dbb4b7dcd6efcb8275318c285f811</anchor>
      <arglist>[TCapacity]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PreallocatedString&lt; 256 &gt;</name>
    <filename>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</filename>
    <base>aworx::lib::strings::AString</base>
    <member kind="function">
      <type>constexpr</type>
      <name>PreallocatedString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>ac585a9d67e12366867f16cdf65db1593</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PreallocatedString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>a8fcc38ef326fb2c1d64ee7e2fa6df7b8</anchor>
      <arglist>(const PreallocatedString &amp;copy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PreallocatedString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>a66fcd18865b8c604df35c29578f3f3d7</anchor>
      <arglist>(PreallocatedString &amp;&amp;move) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PreallocatedString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>a026da30134930f13e104ee6a552bdc6d</anchor>
      <arglist>(AString &amp;&amp;move) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PreallocatedString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>ad716f6b3fe53cf699bf3a680d89ca3d9</anchor>
      <arglist>(const T &amp;src)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PreallocatedString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>a86f75b346f992b3ae21302622d40f87c</anchor>
      <arglist>(const String &amp;src, integer regionStart, integer regionLength=CString::MaxLen)</arglist>
    </member>
    <member kind="function">
      <type>PreallocatedString&lt; TCapacity &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>a8d45c282eb1069917c4a0a1a5b76caac</anchor>
      <arglist>(const PreallocatedString &amp;copy)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>preAllocBuf</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>a8b9dbb4b7dcd6efcb8275318c285f811</anchor>
      <arglist>[TCapacity]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PreallocatedString&lt; 32 &gt;</name>
    <filename>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</filename>
    <base>aworx::lib::strings::AString</base>
    <member kind="function">
      <type>constexpr</type>
      <name>PreallocatedString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>ac585a9d67e12366867f16cdf65db1593</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PreallocatedString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>a8fcc38ef326fb2c1d64ee7e2fa6df7b8</anchor>
      <arglist>(const PreallocatedString &amp;copy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PreallocatedString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>a66fcd18865b8c604df35c29578f3f3d7</anchor>
      <arglist>(PreallocatedString &amp;&amp;move) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PreallocatedString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>a026da30134930f13e104ee6a552bdc6d</anchor>
      <arglist>(AString &amp;&amp;move) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PreallocatedString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>ad716f6b3fe53cf699bf3a680d89ca3d9</anchor>
      <arglist>(const T &amp;src)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PreallocatedString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>a86f75b346f992b3ae21302622d40f87c</anchor>
      <arglist>(const String &amp;src, integer regionStart, integer regionLength=CString::MaxLen)</arglist>
    </member>
    <member kind="function">
      <type>PreallocatedString&lt; TCapacity &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>a8d45c282eb1069917c4a0a1a5b76caac</anchor>
      <arglist>(const PreallocatedString &amp;copy)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>preAllocBuf</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>a8b9dbb4b7dcd6efcb8275318c285f811</anchor>
      <arglist>[TCapacity]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PreallocatedString&lt; 64 &gt;</name>
    <filename>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</filename>
    <base>aworx::lib::strings::AString</base>
    <member kind="function">
      <type>constexpr</type>
      <name>PreallocatedString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>ac585a9d67e12366867f16cdf65db1593</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PreallocatedString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>a8fcc38ef326fb2c1d64ee7e2fa6df7b8</anchor>
      <arglist>(const PreallocatedString &amp;copy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PreallocatedString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>a66fcd18865b8c604df35c29578f3f3d7</anchor>
      <arglist>(PreallocatedString &amp;&amp;move) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PreallocatedString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>a026da30134930f13e104ee6a552bdc6d</anchor>
      <arglist>(AString &amp;&amp;move) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PreallocatedString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>ad716f6b3fe53cf699bf3a680d89ca3d9</anchor>
      <arglist>(const T &amp;src)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PreallocatedString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>a86f75b346f992b3ae21302622d40f87c</anchor>
      <arglist>(const String &amp;src, integer regionStart, integer regionLength=CString::MaxLen)</arglist>
    </member>
    <member kind="function">
      <type>PreallocatedString&lt; TCapacity &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>a8d45c282eb1069917c4a0a1a5b76caac</anchor>
      <arglist>(const PreallocatedString &amp;copy)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>preAllocBuf</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1PreallocatedString.html</anchorfile>
      <anchor>a8b9dbb4b7dcd6efcb8275318c285f811</anchor>
      <arglist>[TCapacity]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lox::PrefixLogable</name>
    <filename>classaworx_1_1lox_1_1PrefixLogable.html</filename>
    <base>aworx::lib::boxing::Box</base>
    <member kind="function">
      <type></type>
      <name>PrefixLogable</name>
      <anchorfile>classaworx_1_1lox_1_1PrefixLogable.html</anchorfile>
      <anchor>ab30280c8d9e9e55d2725aff35b020a3a</anchor>
      <arglist>(const Box &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>PrefixLogable &amp;</type>
      <name>operator=</name>
      <anchorfile>classaworx_1_1lox_1_1PrefixLogable.html</anchorfile>
      <anchor>a48ef5fab45a19df1e0b6e374931cfdb1</anchor>
      <arglist>(PrefixLogable &amp;&amp;move)=default</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AString *</type>
      <name>copy</name>
      <anchorfile>classaworx_1_1lox_1_1PrefixLogable.html</anchorfile>
      <anchor>a4fac41c902ddaad2b6310b8261395dc7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::system::ProcessInfo</name>
    <filename>classaworx_1_1lib_1_1system_1_1ProcessInfo.html</filename>
    <member kind="variable">
      <type>AString</type>
      <name>CmdLine</name>
      <anchorfile>classaworx_1_1lib_1_1system_1_1ProcessInfo.html</anchorfile>
      <anchor>a38741324f2f4c6aa56dc430d4388a76c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AString</type>
      <name>ConsoleTitle</name>
      <anchorfile>classaworx_1_1lib_1_1system_1_1ProcessInfo.html</anchorfile>
      <anchor>a39dfc3f00493a74b8ab6907dec8c80ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AString</type>
      <name>ExecFileName</name>
      <anchorfile>classaworx_1_1lib_1_1system_1_1ProcessInfo.html</anchorfile>
      <anchor>a4261537d8a445f836cc32174e8ff0fd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AString</type>
      <name>ExecFilePath</name>
      <anchorfile>classaworx_1_1lib_1_1system_1_1ProcessInfo.html</anchorfile>
      <anchor>a6e88f1772ab15c3f177dfa4deed1612b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AString</type>
      <name>Name</name>
      <anchorfile>classaworx_1_1lib_1_1system_1_1ProcessInfo.html</anchorfile>
      <anchor>a0de551a5eb98c9fa084c954655523d7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uinteger</type>
      <name>PID</name>
      <anchorfile>classaworx_1_1lib_1_1system_1_1ProcessInfo.html</anchorfile>
      <anchor>a7fa145446254e1da190b5d700fd0630c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uinteger</type>
      <name>PPID</name>
      <anchorfile>classaworx_1_1lib_1_1system_1_1ProcessInfo.html</anchorfile>
      <anchor>aece676fc673e074a778283e35c4ed4d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AString</type>
      <name>Stat</name>
      <anchorfile>classaworx_1_1lib_1_1system_1_1ProcessInfo.html</anchorfile>
      <anchor>aa1d0ce36cf7d7f9338610388ff42fa29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AString</type>
      <name>StatPGRP</name>
      <anchorfile>classaworx_1_1lib_1_1system_1_1ProcessInfo.html</anchorfile>
      <anchor>addc0af2b9734569aba692c8c2600cefb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AString</type>
      <name>StatState</name>
      <anchorfile>classaworx_1_1lib_1_1system_1_1ProcessInfo.html</anchorfile>
      <anchor>aa313b8c5a87a49b703b0887651b1eef7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ALIB_API const ProcessInfo &amp;</type>
      <name>Current</name>
      <anchorfile>classaworx_1_1lib_1_1system_1_1ProcessInfo.html</anchorfile>
      <anchor>a759e289a0ea1b35c1bd0fea90896432e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProcessInfo</name>
      <anchorfile>classaworx_1_1lib_1_1system_1_1ProcessInfo.html</anchorfile>
      <anchor>ae81eb55996ac9f9c3647146eceaed7a9</anchor>
      <arglist>(uinteger processID)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API bool</type>
      <name>Get</name>
      <anchorfile>classaworx_1_1lib_1_1system_1_1ProcessInfo.html</anchorfile>
      <anchor>a148d2d2389c5ae499f4eea5c34781251</anchor>
      <arglist>(uinteger processID)</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ALIB_API ProcessInfo</type>
      <name>current</name>
      <anchorfile>classaworx_1_1lib_1_1system_1_1ProcessInfo.html</anchorfile>
      <anchor>afabfc6a52ba3d7842fe4c2b0bdc7cf6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ProcessInfo</name>
      <anchorfile>classaworx_1_1lib_1_1system_1_1ProcessInfo.html</anchorfile>
      <anchor>a4219f7fc14fa3ed88a6511e0efc33e90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALIB_API bool</type>
      <name>get</name>
      <anchorfile>classaworx_1_1lib_1_1system_1_1ProcessInfo.html</anchorfile>
      <anchor>a810cf60d53741c69b5b8702746572d9a</anchor>
      <arglist>(uinteger PID)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>getStatField</name>
      <anchorfile>classaworx_1_1lib_1_1system_1_1ProcessInfo.html</anchorfile>
      <anchor>a68f488906daa9480289d6291877a1521</anchor>
      <arglist>(int fieldNo, AString &amp;target)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::strings::format::PropertyFormatter</name>
    <filename>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatter.html</filename>
    <templarg>TFormattable</templarg>
    <templarg>TESCIdentifier</templarg>
    <member kind="typedef">
      <type>Box(&amp;)(TFormattable &amp;, AString &amp;)</type>
      <name>TCallback</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatter.html</anchorfile>
      <anchor>af7f8660738c419d93f773c71076201f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; TCallbackTableEntry &gt;</type>
      <name>TCallbackTable</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatter.html</anchorfile>
      <anchor>ac1afadc6413a8b3bbf96543425cabd68</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::tuple&lt; String, int, TCallback &gt;</type>
      <name>TCallbackTableEntry</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatter.html</anchorfile>
      <anchor>aa58330f4b28f399d6a471177daaedb01</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyFormatter</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatter.html</anchorfile>
      <anchor>a03fd1a3a177988ffa84402a9a5310cde</anchor>
      <arglist>(const String customFormatString, const TCallbackTable &amp;propertyTable, Formatter *formatter=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Format</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatter.html</anchorfile>
      <anchor>a10b39af126757226cb9dce5283afd1b3</anchor>
      <arglist>(AString &amp;target, TFormattable &amp;src)</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::vector&lt; const TCallbackTableEntry * &gt;</type>
      <name>TCallbackResultTable</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatter.html</anchorfile>
      <anchor>ae2f43583c0d4aa1d4be57b741fb8e2fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TCallbackResultTable</type>
      <name>callBacks</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatter.html</anchorfile>
      <anchor>ae3daf3750096d91e4fe693ae286ccdc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AString</type>
      <name>formatString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatter.html</anchorfile>
      <anchor>a14c51abb0f4a3f3140bd1c77e0614e65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AString</type>
      <name>propertyFormatString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatter.html</anchorfile>
      <anchor>a89c37804df1649a5be1408ef1f9f5510</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Boxes</type>
      <name>results</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatter.html</anchorfile>
      <anchor>ad5aa27248b266384f5ad04392c0b522e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Formatter *</type>
      <name>theFormatter</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatter.html</anchorfile>
      <anchor>a7694ac1e4ac81ec793259e94214feb7d</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatter" title="Introduction">alib_namespace_strings_propertyformatter_overview</docanchor>
    <docanchor file="classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatter" title="Sample">alib_namespace_strings_propertyformatter_sample</docanchor>
    <docanchor file="classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatter" title="Callback Functions">alib_namespace_strings_propertyformatter_callbacks</docanchor>
    <docanchor file="classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatter" title="Identifiers And The Escape Character &apos;@&apos;">alib_namespace_strings_propertyformatter_escape</docanchor>
  </compound>
  <compound kind="class">
    <name>PropertyFormatter&lt; TFormattable &gt;</name>
    <filename>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatter.html</filename>
    <member kind="typedef">
      <type>Box(&amp;)(TFormattable &amp;, AString &amp;)</type>
      <name>TCallback</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatter.html</anchorfile>
      <anchor>af7f8660738c419d93f773c71076201f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; TCallbackTableEntry &gt;</type>
      <name>TCallbackTable</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatter.html</anchorfile>
      <anchor>ac1afadc6413a8b3bbf96543425cabd68</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::tuple&lt; String, int, TCallback &gt;</type>
      <name>TCallbackTableEntry</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatter.html</anchorfile>
      <anchor>aa58330f4b28f399d6a471177daaedb01</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyFormatter</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatter.html</anchorfile>
      <anchor>a03fd1a3a177988ffa84402a9a5310cde</anchor>
      <arglist>(const String customFormatString, const TCallbackTable &amp;propertyTable, Formatter *formatter=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Format</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatter.html</anchorfile>
      <anchor>a10b39af126757226cb9dce5283afd1b3</anchor>
      <arglist>(AString &amp;target, TFormattable &amp;src)</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::vector&lt; const TCallbackTableEntry *&gt;</type>
      <name>TCallbackResultTable</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatter.html</anchorfile>
      <anchor>ae2f43583c0d4aa1d4be57b741fb8e2fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TCallbackResultTable</type>
      <name>callBacks</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatter.html</anchorfile>
      <anchor>ae3daf3750096d91e4fe693ae286ccdc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AString</type>
      <name>formatString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatter.html</anchorfile>
      <anchor>a14c51abb0f4a3f3140bd1c77e0614e65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AString</type>
      <name>propertyFormatString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatter.html</anchorfile>
      <anchor>a89c37804df1649a5be1408ef1f9f5510</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Boxes</type>
      <name>results</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatter.html</anchorfile>
      <anchor>ad5aa27248b266384f5ad04392c0b522e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Formatter *</type>
      <name>theFormatter</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatter.html</anchorfile>
      <anchor>a7694ac1e4ac81ec793259e94214feb7d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::format::PropertyFormatterMapApplicable</name>
    <filename>structaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatterMapApplicable.html</filename>
    <templarg>TFormattable</templarg>
    <templarg>TOptionEnum</templarg>
    <member kind="variable">
      <type>TFormattable &amp;</type>
      <name>Formattable</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatterMapApplicable.html</anchorfile>
      <anchor>a0161174c853506120b57ae7962b082c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PropertyFormatters&lt; TFormattable, TOptionEnum &gt; &amp;</type>
      <name>FormatterMap</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatterMapApplicable.html</anchorfile>
      <anchor>a721749d8329787a88ae54e7c606548b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TOptionEnum</type>
      <name>Option</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatterMapApplicable.html</anchorfile>
      <anchor>abb06c661156b72ea6baf8be38cf1c64d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyFormatterMapApplicable</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatterMapApplicable.html</anchorfile>
      <anchor>a85489943640a318813039f0c46c585fd</anchor>
      <arglist>(PropertyFormatters&lt; TFormattable, TOptionEnum &gt; &amp;pFormatterMap, TOptionEnum pOption, TFormattable &amp;pFormattable)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::strings::format::PropertyFormatters</name>
    <filename>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatters.html</filename>
    <templarg>TFormattable</templarg>
    <templarg>TVariable</templarg>
    <member kind="function">
      <type></type>
      <name>PropertyFormatters</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatters.html</anchorfile>
      <anchor>a6b562c84eff15da8e11ddba3bdef5e24</anchor>
      <arglist>(typename PropertyFormatter&lt; TFormattable &gt;::TCallbackTable &amp;callbackTable, Formatter *formatter=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PropertyFormatters</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatters.html</anchorfile>
      <anchor>aa50605fb93d447aa15497041cd65544d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Format</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatters.html</anchorfile>
      <anchor>a281e37ff5f700fffd34e0951f0cca995</anchor>
      <arglist>(AString &amp;target, TVariable option, TFormattable &amp;formattable)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Formatter *</type>
      <name>baseFormatter</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatters.html</anchorfile>
      <anchor>a7712996e4edbd081b054ae2cf8bf049a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PropertyFormatter&lt; TFormattable &gt;::TCallbackTable &amp;</type>
      <name>callbacks</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatters.html</anchorfile>
      <anchor>a1042aa552ca47a92f6c25b105c4b4cf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; TVariable, PropertyFormatter&lt; TFormattable &gt; *&gt;</type>
      <name>formatters</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatters.html</anchorfile>
      <anchor>a8bde81b555ec739ab981df90abe86f11</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatters" title="Introduction">alib_namespace_strings_propertyformatter_map_overview</docanchor>
    <docanchor file="classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatters" title="Sample">alib_namespace_strings_propertyformatter_map_sample</docanchor>
    <docanchor file="classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatters" title="Using The Applicable With Formatters">alib_namespace_strings_propertyformatter_map_usingwithfmts</docanchor>
  </compound>
  <compound kind="class">
    <name>PropertyFormatters&lt; TFormattable, TOptionEnum &gt;</name>
    <filename>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatters.html</filename>
    <member kind="function">
      <type></type>
      <name>PropertyFormatters</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatters.html</anchorfile>
      <anchor>a6b562c84eff15da8e11ddba3bdef5e24</anchor>
      <arglist>(typename PropertyFormatter&lt; TFormattable &gt;::TCallbackTable &amp;callbackTable, Formatter *formatter=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PropertyFormatters</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatters.html</anchorfile>
      <anchor>aa50605fb93d447aa15497041cd65544d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Format</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatters.html</anchorfile>
      <anchor>a281e37ff5f700fffd34e0951f0cca995</anchor>
      <arglist>(AString &amp;target, TOptionEnum option, TFormattable &amp;formattable)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Formatter *</type>
      <name>baseFormatter</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatters.html</anchorfile>
      <anchor>a7712996e4edbd081b054ae2cf8bf049a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PropertyFormatter&lt; TFormattable &gt;::TCallbackTable &amp;</type>
      <name>callbacks</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatters.html</anchorfile>
      <anchor>a1042aa552ca47a92f6c25b105c4b4cf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; TOptionEnum, PropertyFormatter&lt; TFormattable &gt; * &gt;</type>
      <name>formatters</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1PropertyFormatters.html</anchorfile>
      <anchor>a8bde81b555ec739ab981df90abe86f11</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::strings::String::RandomAccessIteratorBase</name>
    <filename>classaworx_1_1lib_1_1strings_1_1String_1_1RandomAccessIteratorBase.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>RandomAccessIteratorBase</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>a210929bd5a3d05843c11b2aeca89e9ed</anchor>
      <arglist>(TPointer _p=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>ac535bbad4c12775c9b4a9b7c69e9ab91</anchor>
      <arglist>(RandomAccessIteratorBase other) const</arglist>
    </member>
    <member kind="function">
      <type>TReference</type>
      <name>operator*</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>abd0ae882f3714356e96618419de6dc28</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RandomAccessIteratorBase</type>
      <name>operator+</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>a6272bac1615fc3ecf4c745195d24a8e0</anchor>
      <arglist>(integer n) const</arglist>
    </member>
    <member kind="function">
      <type>RandomAccessIteratorBase &amp;</type>
      <name>operator++</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>a29203e952bae155a43f5c00572389868</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RandomAccessIteratorBase</type>
      <name>operator++</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>ac192f9d63d5cfe7c8bf25017267e6a1f</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>RandomAccessIteratorBase &amp;</type>
      <name>operator+=</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>a303e2f6a9cbe69611fa015f5bee623d9</anchor>
      <arglist>(integer n)</arglist>
    </member>
    <member kind="function">
      <type>RandomAccessIteratorBase</type>
      <name>operator-</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>aba67300401432d183ca6fae1fbb84da1</anchor>
      <arglist>(integer n) const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>operator-</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>ad4a8677a0874293f8a46d9ac0b516848</anchor>
      <arglist>(RandomAccessIteratorBase other) const</arglist>
    </member>
    <member kind="function">
      <type>RandomAccessIteratorBase &amp;</type>
      <name>operator--</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>ad75ad5cf28c907e0f3b3a22519dbc4e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RandomAccessIteratorBase</type>
      <name>operator--</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>aaaccaeb7614e26a93c341c233573fdf9</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>RandomAccessIteratorBase &amp;</type>
      <name>operator-=</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>a6d49d7d597b16f7dd1917c0b55f70121</anchor>
      <arglist>(integer n)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>a3f6d00616a91cdaca01b5dc8f5670e13</anchor>
      <arglist>(RandomAccessIteratorBase other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>a622a82503c16b9a421a9e7d6f471b459</anchor>
      <arglist>(RandomAccessIteratorBase other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>a24312c555a0cacca9a9dee44445d9318</anchor>
      <arglist>(RandomAccessIteratorBase other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>a8cd4073e8d596a3c574bc9a5cfe6a360</anchor>
      <arglist>(RandomAccessIteratorBase other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>a9755572ecd49ffe06b76c995b92dbc4b</anchor>
      <arglist>(RandomAccessIteratorBase other) const</arglist>
    </member>
    <member kind="function">
      <type>TReference</type>
      <name>operator[]</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>a4ed6aceeebc1ea1c8abf867d1b460c08</anchor>
      <arglist>(integer n) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TPointer</type>
      <name>p</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>a38a46c299fc0937bc4fbce0f71fcc373</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::lang::EnumIterator::RandomAccessIteratorBase</name>
    <filename>classaworx_1_1lib_1_1lang_1_1EnumIterator_1_1RandomAccessIteratorBase.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type>constexpr</type>
      <name>RandomAccessIteratorBase</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1EnumIterator_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>af0f3a9241794115ad2dbe9fefa61253a</anchor>
      <arglist>(TEnum _p=TEnum(0))</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator!=</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1EnumIterator_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>ac921900ad8ba2133cbecc25c015bb033</anchor>
      <arglist>(RandomAccessIteratorBase other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr TEnum</type>
      <name>operator*</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1EnumIterator_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>addd246df37532cf80cf64431a338af22</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RandomAccessIteratorBase</type>
      <name>operator+</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1EnumIterator_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>a8f3fcc422ab9626db39d90475bd818ae</anchor>
      <arglist>(TEnumAsInt n) const</arglist>
    </member>
    <member kind="function">
      <type>RandomAccessIteratorBase &amp;</type>
      <name>operator++</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1EnumIterator_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>a29203e952bae155a43f5c00572389868</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RandomAccessIteratorBase</type>
      <name>operator++</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1EnumIterator_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>ac192f9d63d5cfe7c8bf25017267e6a1f</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>RandomAccessIteratorBase &amp;</type>
      <name>operator+=</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1EnumIterator_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>a2cc685593e00e28f6b1cfc8c3c15b0d3</anchor>
      <arglist>(TEnumAsInt n)</arglist>
    </member>
    <member kind="function">
      <type>RandomAccessIteratorBase</type>
      <name>operator-</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1EnumIterator_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>a0fc605622edd01969b06028608a4b270</anchor>
      <arglist>(TEnumAsInt n) const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>operator-</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1EnumIterator_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>ad4a8677a0874293f8a46d9ac0b516848</anchor>
      <arglist>(RandomAccessIteratorBase other) const</arglist>
    </member>
    <member kind="function">
      <type>RandomAccessIteratorBase &amp;</type>
      <name>operator--</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1EnumIterator_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>ad75ad5cf28c907e0f3b3a22519dbc4e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RandomAccessIteratorBase</type>
      <name>operator--</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1EnumIterator_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>aaaccaeb7614e26a93c341c233573fdf9</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>RandomAccessIteratorBase &amp;</type>
      <name>operator-=</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1EnumIterator_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>a26bd5602b46ac81f2e4a13b23a9d88ea</anchor>
      <arglist>(TEnumAsInt n)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1EnumIterator_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>a3f6d00616a91cdaca01b5dc8f5670e13</anchor>
      <arglist>(RandomAccessIteratorBase other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1EnumIterator_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>a622a82503c16b9a421a9e7d6f471b459</anchor>
      <arglist>(RandomAccessIteratorBase other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator==</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1EnumIterator_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>ae5a0f74dfd3e8bc39ac75907f6398bf3</anchor>
      <arglist>(RandomAccessIteratorBase other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1EnumIterator_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>a8cd4073e8d596a3c574bc9a5cfe6a360</anchor>
      <arglist>(RandomAccessIteratorBase other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1EnumIterator_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>a9755572ecd49ffe06b76c995b92dbc4b</anchor>
      <arglist>(RandomAccessIteratorBase other) const</arglist>
    </member>
    <member kind="function">
      <type>TEnum</type>
      <name>operator[]</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1EnumIterator_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>aed58458fa109164f9ce645ced266a5b0</anchor>
      <arglist>(integer n) const</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>typename std::underlying_type&lt; TEnum &gt;::type</type>
      <name>TEnumAsInt</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1EnumIterator_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>a57b696d2a99267e4b79644981849b732</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TEnum</type>
      <name>p</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1EnumIterator_1_1RandomAccessIteratorBase.html</anchorfile>
      <anchor>a014ba63aa6ccc32d1cf079695778c2d4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::strings::thirdparty::std::ReadLineFromIStream</name>
    <filename>classaworx_1_1lib_1_1strings_1_1thirdparty_1_1std_1_1ReadLineFromIStream.html</filename>
    <member kind="variable">
      <type>integer</type>
      <name>BufferSize</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1thirdparty_1_1std_1_1ReadLineFromIStream.html</anchorfile>
      <anchor>a3751e27c933a5440488f3d69faeb9802</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>IsEOF</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1thirdparty_1_1std_1_1ReadLineFromIStream.html</anchorfile>
      <anchor>ade6dbc4e4f8e0b45e0fbe023f5ed8ddd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>::std::istream &amp;</type>
      <name>IStream</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1thirdparty_1_1std_1_1ReadLineFromIStream.html</anchorfile>
      <anchor>ae9380c00e5e02b02a5442fa039f18657</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>integer</type>
      <name>MaxLineWidth</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1thirdparty_1_1std_1_1ReadLineFromIStream.html</anchorfile>
      <anchor>a54e2decff62edc41eabfb922c8d298b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>lang::CurrentData</type>
      <name>TargetData</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1thirdparty_1_1std_1_1ReadLineFromIStream.html</anchorfile>
      <anchor>aa36951e54e82f97e8acfded1982c9b2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ReadLineFromIStream</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1thirdparty_1_1std_1_1ReadLineFromIStream.html</anchorfile>
      <anchor>ae4237e874c12b2ebc282ae467edc6194</anchor>
      <arglist>(::std::istream &amp;istream, lang::CurrentData targetData=lang::CurrentData::Clear, integer bufferSize=256, integer maxLineWidth=4096)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::util::StringTree::Walker::RecursionData</name>
    <filename>structaworx_1_1lib_1_1util_1_1StringTree_1_1Walker_1_1RecursionData.html</filename>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; String, Node * &gt; &gt;::iterator</type>
      <name>actChild</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1StringTree_1_1Walker_1_1RecursionData.html</anchorfile>
      <anchor>acabfd73c575d4f75e7a0762942f72050</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Node *</type>
      <name>node</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1StringTree_1_1Walker_1_1RecursionData.html</anchorfile>
      <anchor>ab88cd70dad2e152cea983610f2a16e68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>nodeName</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1StringTree_1_1Walker_1_1RecursionData.html</anchorfile>
      <anchor>ac72c672187176a6a0d7ade3dc9e30a27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; String, Node * &gt; &gt; *</type>
      <name>sortedChildren</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1StringTree_1_1Walker_1_1RecursionData.html</anchorfile>
      <anchor>a486550cff841363fff7119df20b52364</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RecursionData</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1StringTree_1_1Walker_1_1RecursionData.html</anchorfile>
      <anchor>a1f0cbe0e2d095a239a6a96980b527960</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RecursionData</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1StringTree_1_1Walker_1_1RecursionData.html</anchorfile>
      <anchor>af1c0e12c49f62b36a9a88539929adf98</anchor>
      <arglist>(RecursionData &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RecursionData</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1StringTree_1_1Walker_1_1RecursionData.html</anchorfile>
      <anchor>a3224141064f9cbd37f59040b1b9e7cd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1StringTree_1_1Walker_1_1RecursionData.html</anchorfile>
      <anchor>a0a77b8e5455e7ec503b1e3f6b5c18eb2</anchor>
      <arglist>(Node *_node, String _nodeName, Sorter &amp;_sorter)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::util::StringTree::StdIterator::RecursionDataIt</name>
    <filename>structaworx_1_1lib_1_1util_1_1StringTree_1_1StdIterator_1_1RecursionDataIt.html</filename>
    <member kind="variable">
      <type>TMap::const_iterator</type>
      <name>actChild</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1StringTree_1_1StdIterator_1_1RecursionDataIt.html</anchorfile>
      <anchor>a33a3b3d407317c56bc1f31e88cec3539</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Node *</type>
      <name>node</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1StringTree_1_1StdIterator_1_1RecursionDataIt.html</anchorfile>
      <anchor>ab88cd70dad2e152cea983610f2a16e68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>nodeName</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1StringTree_1_1StdIterator_1_1RecursionDataIt.html</anchorfile>
      <anchor>ac72c672187176a6a0d7ade3dc9e30a27</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::strings::util::RegexMatcher</name>
    <filename>classaworx_1_1lib_1_1strings_1_1util_1_1RegexMatcher.html</filename>
    <member kind="function">
      <type></type>
      <name>RegexMatcher</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1RegexMatcher.html</anchorfile>
      <anchor>a37bb20688bbf68cd12ead2166806bc99</anchor>
      <arglist>(const String &amp;pattern=NullString)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API</type>
      <name>~RegexMatcher</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1RegexMatcher.html</anchorfile>
      <anchor>a8d6f06b791ae030364699531f70f0c98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>Compile</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1RegexMatcher.html</anchorfile>
      <anchor>aecd73a69f0f75834e8dabe97e83e0e72</anchor>
      <arglist>(const String &amp;pattern)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API bool</type>
      <name>Match</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1RegexMatcher.html</anchorfile>
      <anchor>af9984de2fc79f989c9151184cfb77a5d</anchor>
      <arglist>(const String &amp;haystack)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>void *</type>
      <name>boostRegex</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1RegexMatcher.html</anchorfile>
      <anchor>a949df27f6eb5c1bf9df760844075893b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::lang::Report</name>
    <filename>classaworx_1_1lib_1_1lang_1_1Report.html</filename>
    <class kind="class">aworx::lib::lang::Report::Message</class>
    <member kind="function" static="yes">
      <type>static Report &amp;</type>
      <name>GetDefault</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Report.html</anchorfile>
      <anchor>a1d9ac8f09122b5310b6776784882de6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ALIB_API void</type>
      <name>TerminationCleanUp</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Report.html</anchorfile>
      <anchor>a2a0bcae1f7341255492ebc90deab5f01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>DoReport</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Report.html</anchorfile>
      <anchor>a192e1e73840960181e235eab8c8f869e</anchor>
      <arglist>(const Message &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DoReport</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Report.html</anchorfile>
      <anchor>a74d59ae52c4717c94ef34c9c00e258e2</anchor>
      <arglist>(const strings::TString &amp;file, int line, const strings::TString &amp;func, int type, Boxes &amp;&amp;... msgs)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API ReportWriter *</type>
      <name>PeekWriter</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Report.html</anchorfile>
      <anchor>ac3c72f0916841cb53a007d099a86e4d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>PopHaltFlags</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Report.html</anchorfile>
      <anchor>ade3d2cc17cc7c56d59b88a15ee247ca0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>PopWriter</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Report.html</anchorfile>
      <anchor>a51cc05fbf386a19049a2e80bd32a0541</anchor>
      <arglist>(ReportWriter *checkWriter)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>PushHaltFlags</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Report.html</anchorfile>
      <anchor>a7983ee7befb74df86990b506dfaaf6a0</anchor>
      <arglist>(bool haltOnErrors, bool haltOnWarnings)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>PushWriter</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Report.html</anchorfile>
      <anchor>a15a55ca31cef913041443efc8a13494f</anchor>
      <arglist>(ReportWriter *newWriter)</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ALIB_API Report *</type>
      <name>defaultReport</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Report.html</anchorfile>
      <anchor>a85731ee839db2fafc226b9a8281167f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::stack&lt; int &gt;</type>
      <name>haltAfterReport</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Report.html</anchorfile>
      <anchor>ae0aa2499cfb7dcf29f7955cde68c79bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>threads::ThreadLock *</type>
      <name>lock</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Report.html</anchorfile>
      <anchor>ad083e81bb83e9548b93f22631c5f0477</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>recursionBlocker</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Report.html</anchorfile>
      <anchor>acb62b28ab9467a03c940908b8f6649d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::stack&lt; ReportWriter * &gt;</type>
      <name>writers</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Report.html</anchorfile>
      <anchor>a46a7dd034e50f98088be4da9bb180524</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::lang::ReportWriter</name>
    <filename>classaworx_1_1lib_1_1lang_1_1ReportWriter.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ReportWriter</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1ReportWriter.html</anchorfile>
      <anchor>aacb613601745319beb402a265be497e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>NotifyActivation</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1ReportWriter.html</anchorfile>
      <anchor>af6fbc2696d698281c566f807572f15e7</anchor>
      <arglist>(lang::Phase phase)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Report</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1ReportWriter.html</anchorfile>
      <anchor>a6fe37119c6e74897a7517b8b614f2a98</anchor>
      <arglist>(const Report::Message &amp;msg)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::lang::ReportWriterStdIO</name>
    <filename>classaworx_1_1lib_1_1lang_1_1ReportWriterStdIO.html</filename>
    <base>aworx::lib::lang::ReportWriter</base>
    <base>Singleton&lt; ReportWriterStdIO &gt;</base>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API void</type>
      <name>NotifyActivation</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1ReportWriterStdIO.html</anchorfile>
      <anchor>ad727944b7a6e19aee3b7bc56983f8e40</anchor>
      <arglist>(lang::Phase phase)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API void</type>
      <name>Report</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1ReportWriterStdIO.html</anchorfile>
      <anchor>a25ad34e5170b3318e238eff895841f07</anchor>
      <arglist>(const Report::Message &amp;msg)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ALIB_API</type>
      <name>ReportWriterStdIO</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1ReportWriterStdIO.html</anchorfile>
      <anchor>a64289defa2f8829c568f2a3b9bbd5b78</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::lang::ResourcedTupleLoader</name>
    <filename>classaworx_1_1lib_1_1lang_1_1ResourcedTupleLoader.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>LoadTable</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1ResourcedTupleLoader.html</anchorfile>
      <anchor>ac6cfcaf50cfacefa9aff1f2a980506c7</anchor>
      <arglist>(std::vector&lt; TTuple &gt; &amp;tuples, Library &amp;library, const String &amp;name, char delim=&apos;,&apos;)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static std::enable_if&lt; I==std::tuple_size&lt; TTuple &gt;::value &gt;::type</type>
      <name>readEachElement</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1ResourcedTupleLoader.html</anchorfile>
      <anchor>a78dc0f81aa1f9d01250a99bade0f5253</anchor>
      <arglist>(TTuple &amp;, Tokenizer &amp;)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static std::enable_if&lt; I !=std::tuple_size&lt; TTuple &gt;::value &gt;::type</type>
      <name>readEachElement</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1ResourcedTupleLoader.html</anchorfile>
      <anchor>abce8b7f4dd0e569f0604ea37406ed404</anchor>
      <arglist>(TTuple &amp;tuple, Tokenizer &amp;tknzr)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>readElement</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1ResourcedTupleLoader.html</anchorfile>
      <anchor>af950353c1a61561a730bf2229b54d8e4</anchor>
      <arglist>(char &amp;e, Substring &amp;src)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>readElement</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1ResourcedTupleLoader.html</anchorfile>
      <anchor>a2b8d2eb209a5f71018e30ae53d16f7c3</anchor>
      <arglist>(TInteger &amp;e, Substring &amp;src)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>readElement</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1ResourcedTupleLoader.html</anchorfile>
      <anchor>a83fd97db8f82d08f8ed037a39eded857</anchor>
      <arglist>(String &amp;e, Substring &amp;src)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>readElement</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1ResourcedTupleLoader.html</anchorfile>
      <anchor>a4963d5f98753d85a0fa6ef6791168881</anchor>
      <arglist>(T, Substring &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::lang::Resources</name>
    <filename>classaworx_1_1lib_1_1lang_1_1Resources.html</filename>
    <member kind="variable">
      <type>config::Configuration *</type>
      <name>Config</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Resources.html</anchorfile>
      <anchor>a7e8a1c3ae5bce4e178fa1d122021bb7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Resources</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Resources.html</anchorfile>
      <anchor>aa240237f3113fca394c94bb8a463429f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Resources</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Resources.html</anchorfile>
      <anchor>a30ec04f4b8de971374cb0d0b0748c7af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>Add</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Resources.html</anchorfile>
      <anchor>af25c34644b28f527ab2a9f1b3260f8cc</anchor>
      <arglist>(const String &amp;category, const String &amp;name, const String &amp;data, bool dbgAssert)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>AddBulk</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Resources.html</anchorfile>
      <anchor>a8ce9f2f5198e37058cec9f09704c6c26</anchor>
      <arglist>(const char *category,...)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>AddCopy</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Resources.html</anchorfile>
      <anchor>a10767cc4f20cf18ff5ae270b8ba57bda</anchor>
      <arglist>(const String &amp;category, const String &amp;name, const String &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API int</type>
      <name>FetchDefaults</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Resources.html</anchorfile>
      <anchor>a2eb79359fd60c2946347c4f4298160bb</anchor>
      <arglist>(config::ConfigurationPlugin &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API String</type>
      <name>Get</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Resources.html</anchorfile>
      <anchor>a9631461529e44f5382de58db9e09e7ae</anchor>
      <arglist>(const String &amp;category, const String &amp;name, bool dbgAssert)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MemoryBlocks</type>
      <name>cache</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Resources.html</anchorfile>
      <anchor>a88eaf297e3c743e3d49c9b9571fec402</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; String, std::map&lt; String, String &gt; &gt;</type>
      <name>cachedVariables</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Resources.html</anchorfile>
      <anchor>a5882c18eb6b6479ae21607613ba39b73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; String, std::map&lt; String, String &gt; &gt;</type>
      <name>defaults</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Resources.html</anchorfile>
      <anchor>a4a5731a3357b73dc531198dd5f23492b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>threads::ThreadLock *</type>
      <name>lock</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Resources.html</anchorfile>
      <anchor>ad083e81bb83e9548b93f22631c5f0477</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>config::Variable *</type>
      <name>variable</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Resources.html</anchorfile>
      <anchor>a46fd59d06370abc57593737f2cf4393a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::ResourceString</name>
    <filename>structaworx_1_1lib_1_1strings_1_1ResourceString.html</filename>
    <base>aworx::lib::strings::AString</base>
    <member kind="variable">
      <type>Library &amp;</type>
      <name>Lib</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1ResourceString.html</anchorfile>
      <anchor>a19776ce2afd2f7d888244d8640895006</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>Name</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1ResourceString.html</anchorfile>
      <anchor>a934fa09ba291a97f43720640e4d83f25</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ResourceString</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1ResourceString.html</anchorfile>
      <anchor>a72adfcfb880d376a03b1b3ba60e9eb56</anchor>
      <arglist>(Library &amp;library, const String &amp;resourceName)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API AString &amp;</type>
      <name>CheckLoad</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1ResourceString.html</anchorfile>
      <anchor>a493621caac5e199c1c8e603d5bd22372</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>Get</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1ResourceString.html</anchorfile>
      <anchor>a40c5fa3eb88d5c809291cd609493665b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::threads::Runnable</name>
    <filename>classaworx_1_1lib_1_1threads_1_1Runnable.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Runnable</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1Runnable.html</anchorfile>
      <anchor>a93a94435fb3d643aacf328fcc497d9ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Run</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1Runnable.html</anchorfile>
      <anchor>adc27ee0d7b66b8795db722f47a615cfe</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lox::core::ScopeInfo::Scope</name>
    <filename>structaworx_1_1lox_1_1core_1_1ScopeInfo_1_1Scope.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>origLine</name>
      <anchorfile>structaworx_1_1lox_1_1core_1_1ScopeInfo_1_1Scope.html</anchorfile>
      <anchor>aea32b63d1b8fdc55f090b2b8b41b3d6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TString</type>
      <name>origMethod</name>
      <anchorfile>structaworx_1_1lox_1_1core_1_1ScopeInfo_1_1Scope.html</anchorfile>
      <anchor>ad28921e2af5d6ded371d6d1b33ade6a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SourceFile *</type>
      <name>sourceFile</name>
      <anchorfile>structaworx_1_1lox_1_1core_1_1ScopeInfo_1_1Scope.html</anchorfile>
      <anchor>a8f3c4441207ac35a040a393805731dba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Ticks</type>
      <name>timeStamp</name>
      <anchorfile>structaworx_1_1lox_1_1core_1_1ScopeInfo_1_1Scope.html</anchorfile>
      <anchor>a4e72dac5d168369a754893772395f0d3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lox::core::ScopeDump</name>
    <filename>classaworx_1_1lox_1_1core_1_1ScopeDump.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopeDump</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeDump.html</anchorfile>
      <anchor>a62e1dda70b97ff9daa0b12f0e5670b80</anchor>
      <arglist>(ScopeInfo::ThreadDictionary &amp;threadDictionary, const TString noKeyHashKey, AString &amp;target, int maxKeyLength=10)</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API int</type>
      <name>writeStore</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeDump.html</anchorfile>
      <anchor>a2ac85963ae7b731f047051b4d593b58e</anchor>
      <arglist>(ScopeStore&lt; T &gt; *store, int indentSpaces)</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API int</type>
      <name>writeStoreMap</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeDump.html</anchorfile>
      <anchor>a0300c0e3bf0ca655848b1737e500a9f9</anchor>
      <arglist>(ScopeStore&lt; T &gt; *store)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>integer</type>
      <name>maximumKeyLength</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeDump.html</anchorfile>
      <anchor>a8f95972b9f493c4ac0b6df6d10e8ef94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const TString</type>
      <name>noKey</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeDump.html</anchorfile>
      <anchor>afa62f8675826f5b40444a202dac96e55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AString &amp;</type>
      <name>targetBuffer</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeDump.html</anchorfile>
      <anchor>a90caf60ed8a2706cd05f8f52c3f299bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ScopeInfo::ThreadDictionary &amp;</type>
      <name>threadDict</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeDump.html</anchorfile>
      <anchor>acd3ef7d858b527370b1750b69387fda1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALOX_API AString &amp;</type>
      <name>storeKeyToScope</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeDump.html</anchorfile>
      <anchor>a99e7583b06550214b1a6eede977c37bb</anchor>
      <arglist>(String key)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALOX_API AString &amp;</type>
      <name>storeThreadToScope</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeDump.html</anchorfile>
      <anchor>aa8e35644877b44cceea3c76ef1961b6c</anchor>
      <arglist>(int threadID)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALOX_API integer</type>
      <name>writeStoreMapHelper</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeDump.html</anchorfile>
      <anchor>ace7178e93199df3704efdfbfaacad3af</anchor>
      <arglist>(std::map&lt; AString, T &gt; &amp;map, const TString &amp;prefix)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lox::core::ScopeInfo</name>
    <filename>classaworx_1_1lox_1_1core_1_1ScopeInfo.html</filename>
    <member kind="typedef">
      <type>std::map&lt; int, String32 &gt;</type>
      <name>ThreadDictionary</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeInfo.html</anchorfile>
      <anchor>a99735dc703a3e0c252ea69a22c1687d2</anchor>
      <arglist></arglist>
    </member>
    <class kind="struct">aworx::lox::core::ScopeInfo::Scope</class>
    <class kind="struct">aworx::lox::core::ScopeInfo::SourceFile</class>
    <class kind="struct">aworx::lox::core::ScopeInfo::SourcePathTrimRule</class>
    <member kind="variable" static="yes">
      <type>static ALOX_API int</type>
      <name>DefaultCacheSize</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeInfo.html</anchorfile>
      <anchor>a01d0e5f6ac830884f21e5086d1d91b94</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ALOX_API</type>
      <name>ScopeInfo</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeInfo.html</anchorfile>
      <anchor>a628fb94a6dda7a9ba72bd1104f01b071</anchor>
      <arglist>(const String &amp;name, const std::map&lt; int, String32 &gt; &amp;threadDictionary)</arglist>
    </member>
    <member kind="function">
      <type>const String</type>
      <name>GetFileName</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeInfo.html</anchorfile>
      <anchor>a28b15d71e257d5eba8fc981ffb1421f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const String</type>
      <name>GetFileNameWithoutExtension</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeInfo.html</anchorfile>
      <anchor>acba47760057c72724b081ae6a38465e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const String</type>
      <name>GetFullPath</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeInfo.html</anchorfile>
      <anchor>ae2c23eee898650cd7880a370e7ce5899</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetLineNumber</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeInfo.html</anchorfile>
      <anchor>ae5c4253d48d562a076016c054d847ccc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const TString &amp;</type>
      <name>GetLoxName</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeInfo.html</anchorfile>
      <anchor>acda6a047a2327d0ef0819057a0e5c580</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const String</type>
      <name>GetMethod</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeInfo.html</anchorfile>
      <anchor>a8bdcd510e436ae95bce067beae21b69a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const TString &amp;</type>
      <name>GetOrigFile</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeInfo.html</anchorfile>
      <anchor>af4805883509db0aa99eb41e0e75b305d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetThreadID</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeInfo.html</anchorfile>
      <anchor>a6ada61025e16fbfcd69fa53b531eb63a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const aworx::String &amp;</type>
      <name>GetThreadNameAndID</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeInfo.html</anchorfile>
      <anchor>ae0a6b0dbae09af09760197641e5a4025</anchor>
      <arglist>(int *id)</arglist>
    </member>
    <member kind="function">
      <type>const Ticks &amp;</type>
      <name>GetTimeStamp</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeInfo.html</anchorfile>
      <anchor>aac63d502ad9e3127e63ecc389c36d078</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetTrimmedPath</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeInfo.html</anchorfile>
      <anchor>ae5ec829e1c0f37b70424e49c9d1a8a9d</anchor>
      <arglist>(AString &amp;target)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Release</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeInfo.html</anchorfile>
      <anchor>a94c93747c8daa99d65c2a04c6be0748c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API void</type>
      <name>Set</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeInfo.html</anchorfile>
      <anchor>aef667a335cd43ee15210ae8f002037dd</anchor>
      <arglist>(const TString &amp;source, int lineNumber, const TString &amp;method, Thread *thread)</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API void</type>
      <name>SetSourcePathTrimRule</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeInfo.html</anchorfile>
      <anchor>ae12b7dddced4e735955505459b2f0d56</anchor>
      <arglist>(const TString &amp;path, Inclusion includeString, int trimOffset, Case sensitivity, const String &amp;trimReplacement, Reach reach, Priorities priority)</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>aworx::lox::Lox</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeInfo.html</anchorfile>
      <anchor>a0c15f2cd1f2b0ad7d58ddd04a5e03094</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ALOX_API std::vector&lt; SourcePathTrimRule &gt;</type>
      <name>GlobalSPTRs</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeInfo.html</anchorfile>
      <anchor>a3ff8b25900c8fb4a39086e55a4de2f15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ALOX_API bool</type>
      <name>GlobalSPTRsReadFromConfig</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeInfo.html</anchorfile>
      <anchor>a4b4cc9b47565ee962c6488358e236c65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>actScopeDepth</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeInfo.html</anchorfile>
      <anchor>a70fb5261c8438d0c3180d3f314e01682</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>AutoDetectTrimableSourcePath</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeInfo.html</anchorfile>
      <anchor>ac69d17599ca644e4c9e9be0f42ca7361</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SourceFile *</type>
      <name>cache</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeInfo.html</anchorfile>
      <anchor>a0483fbbfacc1e2fedddd3360cf1b7a89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64_t</type>
      <name>cacheRun</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeInfo.html</anchorfile>
      <anchor>a8708f65d98fe3b0a6182920d75a4a9ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>cacheSize</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeInfo.html</anchorfile>
      <anchor>a21f5d4e833c67e26ce27afd3d9f23288</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SourceFile *</type>
      <name>lastSourceFile</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeInfo.html</anchorfile>
      <anchor>a9ba54620ffa826824063ee32c71b1ae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; SourcePathTrimRule &gt;</type>
      <name>LocalSPTRs</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeInfo.html</anchorfile>
      <anchor>a1a109984041e560099b534dd1ab4c10c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>String32</type>
      <name>loxName</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeInfo.html</anchorfile>
      <anchor>a17e561c001584e6fc3a4b9445deea701</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Scope &gt;</type>
      <name>scopes</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeInfo.html</anchorfile>
      <anchor>a412fb2d6ebe5a29737c92cd4717be9c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Thread *</type>
      <name>thread</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeInfo.html</anchorfile>
      <anchor>a743989b66f3b52f1eda2a8498a93da0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const ThreadDictionary &amp;</type>
      <name>threadDictionary</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeInfo.html</anchorfile>
      <anchor>ab89d14dc857db74727211f5fcf3c138f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>String</type>
      <name>threadName</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeInfo.html</anchorfile>
      <anchor>ab0235bb40987a8310ebd7e8500b96975</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>integer</type>
      <name>getPathLength</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeInfo.html</anchorfile>
      <anchor>aceecae7222f3a139dbab041737095882</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALOX_API void</type>
      <name>trimPath</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeInfo.html</anchorfile>
      <anchor>adce30083ede7f1172f4f92c5b627e837</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ScopeInfo &amp;</type>
      <name>operator=</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeInfo.html</anchorfile>
      <anchor>a79aef84c80ea77a4800b7aa7179d1aa3</anchor>
      <arglist>(const ScopeInfo &amp;op)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lox::core::ScopeStore</name>
    <filename>classaworx_1_1lox_1_1core_1_1ScopeStore.html</filename>
    <templarg>StoreT</templarg>
    <member kind="variable">
      <type>StoreT</type>
      <name>globalStore</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>ad5f544834c72f2e639cda32bfdf4914b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>lib::util::StringTree&lt; StoreT &gt; *</type>
      <name>languageStore</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>ad36202893065e907ca8a3bb58596f27a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; int, std::vector&lt; StoreT &gt; &gt;</type>
      <name>threadInnerStore</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a344205164cffc3c7c0a6191c9a716b8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; int, std::vector&lt; StoreT &gt; &gt;</type>
      <name>threadOuterStore</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>aaedb67f0bf7ce679a991c7ee988e1cc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ALOX_API</type>
      <name>ScopeStore</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>ac7a74581c38faf240883a9a395547d5a</anchor>
      <arglist>(ScopeInfo &amp;scopeInfo, bool cfgSingleThreadValue)</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API</type>
      <name>~ScopeStore</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a9bff9f3eb2193028b398787f43ca19d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API void</type>
      <name>Clear</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a8276b692283d7725759466633f2c8211</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StoreT</type>
      <name>Get</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a19b162b0d416fc5be7f1f6a91c718c3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API void</type>
      <name>InitAccess</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a15cc8a2338769a04748e8964f2659b42</anchor>
      <arglist>(Scope scope, int pathLevel, int threadID)</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API void</type>
      <name>InitWalk</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a6c7957bf7f600d4bf0aaef683b2e6c3e</anchor>
      <arglist>(Scope startScope, const StoreT localObject)</arglist>
    </member>
    <member kind="function">
      <type>StoreT</type>
      <name>Remove</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a4b6e9ae247a950ed1b5d5d82c72b1440</anchor>
      <arglist>(StoreT value)</arglist>
    </member>
    <member kind="function">
      <type>StoreT</type>
      <name>Store</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a5361906d7ce4b2ca6c3f676c85cf01fd</anchor>
      <arglist>(StoreT value)</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API StoreT</type>
      <name>Walk</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a262f597e568a196dcb284fb1c859c8d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>actPathLevel</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>aa5ede8468c729de0886d3bc84d31714e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Scope</type>
      <name>actScope</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>ab420b6d519025a485c6345895ad174ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>lib::util::StringTree&lt; StoreT &gt;::Cursor</type>
      <name>actStringTreeNode</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a958336aeb9e142a333f399284f67bda6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>actThreadID</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>afd0f796ebbfae3564416016c197c27b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>cfgSingleThreadValue</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>ac8ebbb91a987a22c90eae5a4c72ecbc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>lazyLanguageNode</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a531fce640b5915cd0496ba8c3c1058db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ScopeInfo &amp;</type>
      <name>scopeInfo</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>aef20e807838c38a874e2952fa989535b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>walking</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>aa99316a33a7768a6af77f01edda34ef3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>StoreT</type>
      <name>walkLocalObject</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a82821b811e042ad4ca39396346cd49e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>walkNextThreadIdx</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a9928f44e5399d356c4380ab105e48941</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; StoreT &gt; *</type>
      <name>walkThreadValues</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>abf7b7f408957d23da2c7b6fc692436cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>StoreT</type>
      <name>access</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a9d948185e80ad3706923867cfe608317</anchor>
      <arglist>(int cmd, StoreT value)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initCursor</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a17a9a02a8a9868b496bcba471d2167dc</anchor>
      <arglist>(bool create)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ScopeStore&lt; aworx::lib::boxing::Box *&gt;</name>
    <filename>classaworx_1_1lox_1_1core_1_1ScopeStore.html</filename>
    <member kind="variable">
      <type>aworx::lib::boxing::Box *</type>
      <name>globalStore</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>ad5f544834c72f2e639cda32bfdf4914b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>lib::util::StringTree&lt; aworx::lib::boxing::Box * &gt; *</type>
      <name>languageStore</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>ad36202893065e907ca8a3bb58596f27a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; int, std::vector&lt; aworx::lib::boxing::Box * &gt; &gt;</type>
      <name>threadInnerStore</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a344205164cffc3c7c0a6191c9a716b8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; int, std::vector&lt; aworx::lib::boxing::Box * &gt; &gt;</type>
      <name>threadOuterStore</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>aaedb67f0bf7ce679a991c7ee988e1cc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ALOX_API</type>
      <name>ScopeStore</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>ac7a74581c38faf240883a9a395547d5a</anchor>
      <arglist>(ScopeInfo &amp;scopeInfo, bool cfgSingleThreadValue)</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API</type>
      <name>~ScopeStore</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a9bff9f3eb2193028b398787f43ca19d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API void</type>
      <name>Clear</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a8276b692283d7725759466633f2c8211</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>aworx::lib::boxing::Box *</type>
      <name>Get</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a19b162b0d416fc5be7f1f6a91c718c3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API void</type>
      <name>InitAccess</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a15cc8a2338769a04748e8964f2659b42</anchor>
      <arglist>(Scope scope, int pathLevel, int threadID)</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API void</type>
      <name>InitWalk</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a6c7957bf7f600d4bf0aaef683b2e6c3e</anchor>
      <arglist>(Scope startScope, const aworx::lib::boxing::Box * localObject)</arglist>
    </member>
    <member kind="function">
      <type>aworx::lib::boxing::Box *</type>
      <name>Remove</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a4b6e9ae247a950ed1b5d5d82c72b1440</anchor>
      <arglist>(aworx::lib::boxing::Box * value)</arglist>
    </member>
    <member kind="function">
      <type>aworx::lib::boxing::Box *</type>
      <name>Store</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a5361906d7ce4b2ca6c3f676c85cf01fd</anchor>
      <arglist>(aworx::lib::boxing::Box * value)</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API aworx::lib::boxing::Box *</type>
      <name>Walk</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a262f597e568a196dcb284fb1c859c8d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>actPathLevel</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>aa5ede8468c729de0886d3bc84d31714e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Scope</type>
      <name>actScope</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>ab420b6d519025a485c6345895ad174ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>lib::util::StringTree&lt; aworx::lib::boxing::Box * &gt;::Cursor</type>
      <name>actStringTreeNode</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a958336aeb9e142a333f399284f67bda6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>actThreadID</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>afd0f796ebbfae3564416016c197c27b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>cfgSingleThreadValue</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>ac8ebbb91a987a22c90eae5a4c72ecbc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>lazyLanguageNode</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a531fce640b5915cd0496ba8c3c1058db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ScopeInfo &amp;</type>
      <name>scopeInfo</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>aef20e807838c38a874e2952fa989535b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>walking</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>aa99316a33a7768a6af77f01edda34ef3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>aworx::lib::boxing::Box *</type>
      <name>walkLocalObject</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a82821b811e042ad4ca39396346cd49e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>walkNextThreadIdx</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a9928f44e5399d356c4380ab105e48941</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; aworx::lib::boxing::Box * &gt; *</type>
      <name>walkThreadValues</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>abf7b7f408957d23da2c7b6fc692436cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>aworx::lib::boxing::Box *</type>
      <name>access</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a9d948185e80ad3706923867cfe608317</anchor>
      <arglist>(int cmd, aworx::lib::boxing::Box * value)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initCursor</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a17a9a02a8a9868b496bcba471d2167dc</anchor>
      <arglist>(bool create)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ScopeStore&lt; aworx::lib::strings::AString *&gt;</name>
    <filename>classaworx_1_1lox_1_1core_1_1ScopeStore.html</filename>
    <member kind="variable">
      <type>aworx::lib::strings::AString *</type>
      <name>globalStore</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>ad5f544834c72f2e639cda32bfdf4914b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>lib::util::StringTree&lt; aworx::lib::strings::AString * &gt; *</type>
      <name>languageStore</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>ad36202893065e907ca8a3bb58596f27a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; int, std::vector&lt; aworx::lib::strings::AString * &gt; &gt;</type>
      <name>threadInnerStore</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a344205164cffc3c7c0a6191c9a716b8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; int, std::vector&lt; aworx::lib::strings::AString * &gt; &gt;</type>
      <name>threadOuterStore</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>aaedb67f0bf7ce679a991c7ee988e1cc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ALOX_API</type>
      <name>ScopeStore</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>ac7a74581c38faf240883a9a395547d5a</anchor>
      <arglist>(ScopeInfo &amp;scopeInfo, bool cfgSingleThreadValue)</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API</type>
      <name>~ScopeStore</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a9bff9f3eb2193028b398787f43ca19d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API void</type>
      <name>Clear</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a8276b692283d7725759466633f2c8211</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>aworx::lib::strings::AString *</type>
      <name>Get</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a19b162b0d416fc5be7f1f6a91c718c3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API void</type>
      <name>InitAccess</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a15cc8a2338769a04748e8964f2659b42</anchor>
      <arglist>(Scope scope, int pathLevel, int threadID)</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API void</type>
      <name>InitWalk</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a6c7957bf7f600d4bf0aaef683b2e6c3e</anchor>
      <arglist>(Scope startScope, const aworx::lib::strings::AString * localObject)</arglist>
    </member>
    <member kind="function">
      <type>aworx::lib::strings::AString *</type>
      <name>Remove</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a4b6e9ae247a950ed1b5d5d82c72b1440</anchor>
      <arglist>(aworx::lib::strings::AString * value)</arglist>
    </member>
    <member kind="function">
      <type>aworx::lib::strings::AString *</type>
      <name>Store</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a5361906d7ce4b2ca6c3f676c85cf01fd</anchor>
      <arglist>(aworx::lib::strings::AString * value)</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API aworx::lib::strings::AString *</type>
      <name>Walk</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a262f597e568a196dcb284fb1c859c8d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>actPathLevel</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>aa5ede8468c729de0886d3bc84d31714e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Scope</type>
      <name>actScope</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>ab420b6d519025a485c6345895ad174ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>lib::util::StringTree&lt; aworx::lib::strings::AString * &gt;::Cursor</type>
      <name>actStringTreeNode</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a958336aeb9e142a333f399284f67bda6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>actThreadID</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>afd0f796ebbfae3564416016c197c27b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>cfgSingleThreadValue</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>ac8ebbb91a987a22c90eae5a4c72ecbc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>lazyLanguageNode</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a531fce640b5915cd0496ba8c3c1058db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ScopeInfo &amp;</type>
      <name>scopeInfo</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>aef20e807838c38a874e2952fa989535b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>walking</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>aa99316a33a7768a6af77f01edda34ef3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>aworx::lib::strings::AString *</type>
      <name>walkLocalObject</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a82821b811e042ad4ca39396346cd49e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>walkNextThreadIdx</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a9928f44e5399d356c4380ab105e48941</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; aworx::lib::strings::AString * &gt; *</type>
      <name>walkThreadValues</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>abf7b7f408957d23da2c7b6fc692436cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>aworx::lib::strings::AString *</type>
      <name>access</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a9d948185e80ad3706923867cfe608317</anchor>
      <arglist>(int cmd, aworx::lib::strings::AString * value)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initCursor</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a17a9a02a8a9868b496bcba471d2167dc</anchor>
      <arglist>(bool create)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ScopeStore&lt; std::map&lt; aworx::lib::strings::AString, aworx::lib::boxing::Box &gt; *&gt;</name>
    <filename>classaworx_1_1lox_1_1core_1_1ScopeStore.html</filename>
    <member kind="variable">
      <type>std::map&lt; aworx::lib::strings::AString, aworx::lib::boxing::Box &gt; *</type>
      <name>globalStore</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>ad5f544834c72f2e639cda32bfdf4914b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>lib::util::StringTree&lt; std::map&lt; aworx::lib::strings::AString, aworx::lib::boxing::Box &gt; * &gt; *</type>
      <name>languageStore</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>ad36202893065e907ca8a3bb58596f27a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; int, std::vector&lt; std::map&lt; aworx::lib::strings::AString, aworx::lib::boxing::Box &gt; * &gt; &gt;</type>
      <name>threadInnerStore</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a344205164cffc3c7c0a6191c9a716b8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; int, std::vector&lt; std::map&lt; aworx::lib::strings::AString, aworx::lib::boxing::Box &gt; * &gt; &gt;</type>
      <name>threadOuterStore</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>aaedb67f0bf7ce679a991c7ee988e1cc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ALOX_API</type>
      <name>ScopeStore</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>ac7a74581c38faf240883a9a395547d5a</anchor>
      <arglist>(ScopeInfo &amp;scopeInfo, bool cfgSingleThreadValue)</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API</type>
      <name>~ScopeStore</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a9bff9f3eb2193028b398787f43ca19d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API void</type>
      <name>Clear</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a8276b692283d7725759466633f2c8211</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::map&lt; aworx::lib::strings::AString, aworx::lib::boxing::Box &gt; *</type>
      <name>Get</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a19b162b0d416fc5be7f1f6a91c718c3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API void</type>
      <name>InitAccess</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a15cc8a2338769a04748e8964f2659b42</anchor>
      <arglist>(Scope scope, int pathLevel, int threadID)</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API void</type>
      <name>InitWalk</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a6c7957bf7f600d4bf0aaef683b2e6c3e</anchor>
      <arglist>(Scope startScope, const std::map&lt; aworx::lib::strings::AString, aworx::lib::boxing::Box &gt; * localObject)</arglist>
    </member>
    <member kind="function">
      <type>std::map&lt; aworx::lib::strings::AString, aworx::lib::boxing::Box &gt; *</type>
      <name>Remove</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a4b6e9ae247a950ed1b5d5d82c72b1440</anchor>
      <arglist>(std::map&lt; aworx::lib::strings::AString, aworx::lib::boxing::Box &gt; * value)</arglist>
    </member>
    <member kind="function">
      <type>std::map&lt; aworx::lib::strings::AString, aworx::lib::boxing::Box &gt; *</type>
      <name>Store</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a5361906d7ce4b2ca6c3f676c85cf01fd</anchor>
      <arglist>(std::map&lt; aworx::lib::strings::AString, aworx::lib::boxing::Box &gt; * value)</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API std::map&lt; aworx::lib::strings::AString, aworx::lib::boxing::Box &gt; *</type>
      <name>Walk</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a262f597e568a196dcb284fb1c859c8d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>actPathLevel</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>aa5ede8468c729de0886d3bc84d31714e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Scope</type>
      <name>actScope</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>ab420b6d519025a485c6345895ad174ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>lib::util::StringTree&lt; std::map&lt; aworx::lib::strings::AString, aworx::lib::boxing::Box &gt; * &gt;::Cursor</type>
      <name>actStringTreeNode</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a958336aeb9e142a333f399284f67bda6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>actThreadID</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>afd0f796ebbfae3564416016c197c27b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>cfgSingleThreadValue</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>ac8ebbb91a987a22c90eae5a4c72ecbc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>lazyLanguageNode</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a531fce640b5915cd0496ba8c3c1058db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ScopeInfo &amp;</type>
      <name>scopeInfo</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>aef20e807838c38a874e2952fa989535b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>walking</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>aa99316a33a7768a6af77f01edda34ef3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; aworx::lib::strings::AString, aworx::lib::boxing::Box &gt; *</type>
      <name>walkLocalObject</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a82821b811e042ad4ca39396346cd49e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>walkNextThreadIdx</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a9928f44e5399d356c4380ab105e48941</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::map&lt; aworx::lib::strings::AString, aworx::lib::boxing::Box &gt; * &gt; *</type>
      <name>walkThreadValues</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>abf7b7f408957d23da2c7b6fc692436cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::map&lt; aworx::lib::strings::AString, aworx::lib::boxing::Box &gt; *</type>
      <name>access</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a9d948185e80ad3706923867cfe608317</anchor>
      <arglist>(int cmd, std::map&lt; aworx::lib::strings::AString, aworx::lib::boxing::Box &gt; * value)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initCursor</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a17a9a02a8a9868b496bcba471d2167dc</anchor>
      <arglist>(bool create)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ScopeStore&lt; std::map&lt; aworx::lib::strings::AString, int &gt; *&gt;</name>
    <filename>classaworx_1_1lox_1_1core_1_1ScopeStore.html</filename>
    <member kind="variable">
      <type>std::map&lt; aworx::lib::strings::AString, int &gt; *</type>
      <name>globalStore</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>ad5f544834c72f2e639cda32bfdf4914b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>lib::util::StringTree&lt; std::map&lt; aworx::lib::strings::AString, int &gt; * &gt; *</type>
      <name>languageStore</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>ad36202893065e907ca8a3bb58596f27a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; int, std::vector&lt; std::map&lt; aworx::lib::strings::AString, int &gt; * &gt; &gt;</type>
      <name>threadInnerStore</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a344205164cffc3c7c0a6191c9a716b8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; int, std::vector&lt; std::map&lt; aworx::lib::strings::AString, int &gt; * &gt; &gt;</type>
      <name>threadOuterStore</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>aaedb67f0bf7ce679a991c7ee988e1cc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ALOX_API</type>
      <name>ScopeStore</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>ac7a74581c38faf240883a9a395547d5a</anchor>
      <arglist>(ScopeInfo &amp;scopeInfo, bool cfgSingleThreadValue)</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API</type>
      <name>~ScopeStore</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a9bff9f3eb2193028b398787f43ca19d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API void</type>
      <name>Clear</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a8276b692283d7725759466633f2c8211</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::map&lt; aworx::lib::strings::AString, int &gt; *</type>
      <name>Get</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a19b162b0d416fc5be7f1f6a91c718c3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API void</type>
      <name>InitAccess</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a15cc8a2338769a04748e8964f2659b42</anchor>
      <arglist>(Scope scope, int pathLevel, int threadID)</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API void</type>
      <name>InitWalk</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a6c7957bf7f600d4bf0aaef683b2e6c3e</anchor>
      <arglist>(Scope startScope, const std::map&lt; aworx::lib::strings::AString, int &gt; * localObject)</arglist>
    </member>
    <member kind="function">
      <type>std::map&lt; aworx::lib::strings::AString, int &gt; *</type>
      <name>Remove</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a4b6e9ae247a950ed1b5d5d82c72b1440</anchor>
      <arglist>(std::map&lt; aworx::lib::strings::AString, int &gt; * value)</arglist>
    </member>
    <member kind="function">
      <type>std::map&lt; aworx::lib::strings::AString, int &gt; *</type>
      <name>Store</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a5361906d7ce4b2ca6c3f676c85cf01fd</anchor>
      <arglist>(std::map&lt; aworx::lib::strings::AString, int &gt; * value)</arglist>
    </member>
    <member kind="function">
      <type>ALOX_API std::map&lt; aworx::lib::strings::AString, int &gt; *</type>
      <name>Walk</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a262f597e568a196dcb284fb1c859c8d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>actPathLevel</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>aa5ede8468c729de0886d3bc84d31714e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Scope</type>
      <name>actScope</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>ab420b6d519025a485c6345895ad174ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>lib::util::StringTree&lt; std::map&lt; aworx::lib::strings::AString, int &gt; * &gt;::Cursor</type>
      <name>actStringTreeNode</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a958336aeb9e142a333f399284f67bda6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>actThreadID</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>afd0f796ebbfae3564416016c197c27b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>cfgSingleThreadValue</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>ac8ebbb91a987a22c90eae5a4c72ecbc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>lazyLanguageNode</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a531fce640b5915cd0496ba8c3c1058db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ScopeInfo &amp;</type>
      <name>scopeInfo</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>aef20e807838c38a874e2952fa989535b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>walking</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>aa99316a33a7768a6af77f01edda34ef3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; aworx::lib::strings::AString, int &gt; *</type>
      <name>walkLocalObject</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a82821b811e042ad4ca39396346cd49e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>walkNextThreadIdx</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a9928f44e5399d356c4380ab105e48941</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::map&lt; aworx::lib::strings::AString, int &gt; * &gt; *</type>
      <name>walkThreadValues</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>abf7b7f408957d23da2c7b6fc692436cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::map&lt; aworx::lib::strings::AString, int &gt; *</type>
      <name>access</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a9d948185e80ad3706923867cfe608317</anchor>
      <arglist>(int cmd, std::map&lt; aworx::lib::strings::AString, int &gt; * value)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initCursor</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStore.html</anchorfile>
      <anchor>a17a9a02a8a9868b496bcba471d2167dc</anchor>
      <arglist>(bool create)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lox::core::ScopeStoreType</name>
    <filename>classaworx_1_1lox_1_1core_1_1ScopeStoreType.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static ALOX_API bool</type>
      <name>AreEqual</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStoreType.html</anchorfile>
      <anchor>ad5516ec32df909883ecac628527d7e09</anchor>
      <arglist>(StoreT first, StoreT second)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ALOX_API bool</type>
      <name>IsNull</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStoreType.html</anchorfile>
      <anchor>ae5573aa455900d85f7191f38710c09f5</anchor>
      <arglist>(StoreT value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ALOX_API StoreT</type>
      <name>NullValue</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1ScopeStoreType.html</anchorfile>
      <anchor>a6b093555946a852ee96996e03c376c25</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::config::InMemoryPlugin::Section</name>
    <filename>classaworx_1_1lib_1_1config_1_1InMemoryPlugin_1_1Section.html</filename>
    <member kind="variable">
      <type>AString</type>
      <name>Comments</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1InMemoryPlugin_1_1Section.html</anchorfile>
      <anchor>a13a7dbf15cba4c8849fdd8044b185475</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Entry * &gt;</type>
      <name>Entries</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1InMemoryPlugin_1_1Section.html</anchorfile>
      <anchor>ab2da73dcf9e06ea3b12ea32c71730419</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String32</type>
      <name>Name</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1InMemoryPlugin_1_1Section.html</anchorfile>
      <anchor>ab3c68b8a64bf47454f94bde4ebb6de0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Section</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1InMemoryPlugin_1_1Section.html</anchorfile>
      <anchor>ac741d4b50035c0aeb3b05a9fc310a946</anchor>
      <arglist>(const String &amp;sectionName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Section</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1InMemoryPlugin_1_1Section.html</anchorfile>
      <anchor>aa8911b591a7b9d5f2b3f0e106d77c169</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API bool</type>
      <name>DeleteEntry</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1InMemoryPlugin_1_1Section.html</anchorfile>
      <anchor>a12a4b55d761f5caaf5e8dda6db09627a</anchor>
      <arglist>(const String &amp;entryName)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API Entry *</type>
      <name>GetEntry</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1InMemoryPlugin_1_1Section.html</anchorfile>
      <anchor>a999f300ea98306d38429b066f00e8ee4</anchor>
      <arglist>(const String &amp;entryName, bool create)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Entry *</type>
      <name>createEntry</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1InMemoryPlugin_1_1Section.html</anchorfile>
      <anchor>a84b71c63da8450788aeac15be6c8e768</anchor>
      <arglist>(const String &amp;entryName)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::config::IniFile::Section</name>
    <filename>classaworx_1_1lib_1_1config_1_1IniFile_1_1Section.html</filename>
    <base>aworx::lib::config::InMemoryPlugin::Section</base>
    <member kind="function">
      <type></type>
      <name>Section</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1IniFile_1_1Section.html</anchorfile>
      <anchor>a51635002e9136e57c782638128864dbc</anchor>
      <arglist>(const String &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Entry *</type>
      <name>createEntry</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1IniFile_1_1Section.html</anchorfile>
      <anchor>a17c765fa30a40c65d18b1c216479d905</anchor>
      <arglist>(const String &amp;name)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::strings::format::SimpleText</name>
    <filename>classaworx_1_1lib_1_1strings_1_1format_1_1SimpleText.html</filename>
    <member kind="variable">
      <type>integer</type>
      <name>DetectedMaxLineWidth</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1SimpleText.html</anchorfile>
      <anchor>ad7c9b81da0071b7d05a20b43285feaf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FormatterPythonStyle</type>
      <name>Formatter</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1SimpleText.html</anchorfile>
      <anchor>ac8ef7f9155343b9f8dde1bbc453fcbaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String64</type>
      <name>IndentFirstLine</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1SimpleText.html</anchorfile>
      <anchor>a700bc66278e766c449f92d2a6588324b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String64</type>
      <name>IndentOtherLines</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1SimpleText.html</anchorfile>
      <anchor>a451201f0b9928497081b306e819148df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::stack&lt; integer &gt;</type>
      <name>IndentSizesFirstLine</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1SimpleText.html</anchorfile>
      <anchor>aec5f49aa8b9ccfe67d6985d8d0867a7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::stack&lt; integer &gt;</type>
      <name>IndentSizesOtherLines</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1SimpleText.html</anchorfile>
      <anchor>a2d65fc48df481d0fb482c5c0e9c273f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>JustifyChar</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1SimpleText.html</anchorfile>
      <anchor>a12689e71b2394955ed1b7c1c17b2d56b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>integer</type>
      <name>LineWidth</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1SimpleText.html</anchorfile>
      <anchor>afd2ad135243bf0f14b6fbc3f8bd2916d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; char &gt;</type>
      <name>MarkerBullets</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1SimpleText.html</anchorfile>
      <anchor>a21a365749a92e3e7b57ad618cef96fc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>MarkerChar</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1SimpleText.html</anchorfile>
      <anchor>a67e958edc23828d38af2d0d10f14138f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AString</type>
      <name>Text</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1SimpleText.html</anchorfile>
      <anchor>af87f0966a2ecf625405d73cf9836ceb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ALIB_API void</type>
      <name>FormatParagraph</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1SimpleText.html</anchorfile>
      <anchor>a38e62b65f01f40d28230da0a7c3c03df</anchor>
      <arglist>(AString &amp;text, integer startIdx, integer lineWidth, char justifyChar, integer &amp;maxLineWidth, const String &amp;indentFirstLine=nullptr, const String &amp;indentOtherLines=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>Add</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1SimpleText.html</anchorfile>
      <anchor>af653f5dc61d9f7bdd8e1ffbf20943c59</anchor>
      <arglist>(Boxes &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>SimpleText &amp;</type>
      <name>Add</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1SimpleText.html</anchorfile>
      <anchor>a845b8f25435258fe8073238f180fda40</anchor>
      <arglist>(const BoxedObjects &amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API SimpleText &amp;</type>
      <name>AddException</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1SimpleText.html</anchorfile>
      <anchor>ac9aa460ee3d3211bcca37b93afe6a025</anchor>
      <arglist>(aworx::lib::lang::Exception &amp;exception)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>AddMarked</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1SimpleText.html</anchorfile>
      <anchor>a1d2610ddcb4e0123bf18eec9b936d1d5</anchor>
      <arglist>(Boxes &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>SimpleText &amp;</type>
      <name>AddMarked</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1SimpleText.html</anchorfile>
      <anchor>a6ad525ebedeefec575cc619c823584e2</anchor>
      <arglist>(const BoxedObjects &amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>SimpleText &amp;</type>
      <name>Clear</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1SimpleText.html</anchorfile>
      <anchor>ae7d36393d74b9ead8c4a6b817d1492bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SimpleText &amp;</type>
      <name>PopIndent</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1SimpleText.html</anchorfile>
      <anchor>a7c804ec5a1cb1d8345d3bbc807f65adc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SimpleText &amp;</type>
      <name>PushIndent</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1SimpleText.html</anchorfile>
      <anchor>aa50ffdb8312170bb770381b7eca17d9a</anchor>
      <arglist>(uinteger qty, char fillChar=&apos; &apos;)</arglist>
    </member>
    <member kind="function">
      <type>SimpleText &amp;</type>
      <name>PushIndent</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1SimpleText.html</anchorfile>
      <anchor>a8159df636495976dcd797ddd74afb404</anchor>
      <arglist>(const String &amp;indentFirstLine, const String &amp;indentOtherLines=NullString)</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>RemoveLastNewLine</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1SimpleText.html</anchorfile>
      <anchor>ad5c3fe6a7c30ead44d69b5892754fce0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Boxes</type>
      <name>boxes</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1SimpleText.html</anchorfile>
      <anchor>a9c235ad71ffb912aa8ecc4e998d0eb0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AString</type>
      <name>markedBuffer</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1SimpleText.html</anchorfile>
      <anchor>a94f46dc99d015318c56b42cc0b0cb906</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>markerBulletLevel</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1format_1_1SimpleText.html</anchorfile>
      <anchor>ab9b4872619b49a23e04bd7dddf99ab3b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::lang::Singleton</name>
    <filename>classaworx_1_1lib_1_1lang_1_1Singleton.html</filename>
    <templarg>TDerivedClass</templarg>
    <member kind="function" static="yes">
      <type>static TDerivedClass *</type>
      <name>GetSingleton</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Singleton.html</anchorfile>
      <anchor>aacc819bf0193ea5e1185fc98291b03aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Singleton</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Singleton.html</anchorfile>
      <anchor>a7d833a82cba7b9c4083d4c071a771cfc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static TDerivedClass *</type>
      <name>singleton</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Singleton.html</anchorfile>
      <anchor>ac37af4d0d385966198f222080ae55271</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Singleton&lt; EnumMetaData&lt; TEnum &gt; &gt;</name>
    <filename>classaworx_1_1lib_1_1lang_1_1Singleton.html</filename>
    <member kind="function" static="yes">
      <type>static EnumMetaData&lt; TEnum &gt; *</type>
      <name>GetSingleton</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Singleton.html</anchorfile>
      <anchor>aacc819bf0193ea5e1185fc98291b03aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Singleton</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Singleton.html</anchorfile>
      <anchor>a7d833a82cba7b9c4083d4c071a771cfc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static EnumMetaData&lt; TEnum &gt; *</type>
      <name>singleton</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Singleton.html</anchorfile>
      <anchor>ac37af4d0d385966198f222080ae55271</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Singleton&lt; ReportWriterStdIO &gt;</name>
    <filename>classaworx_1_1lib_1_1lang_1_1Singleton.html</filename>
    <member kind="function" static="yes">
      <type>static ReportWriterStdIO *</type>
      <name>GetSingleton</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Singleton.html</anchorfile>
      <anchor>aacc819bf0193ea5e1185fc98291b03aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Singleton</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Singleton.html</anchorfile>
      <anchor>a7d833a82cba7b9c4083d4c071a771cfc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ReportWriterStdIO *</type>
      <name>singleton</name>
      <anchorfile>classaworx_1_1lib_1_1lang_1_1Singleton.html</anchorfile>
      <anchor>ac37af4d0d385966198f222080ae55271</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::util::PluginContainer::Slot</name>
    <filename>structaworx_1_1lib_1_1util_1_1PluginContainer_1_1Slot.html</filename>
    <member kind="variable">
      <type>TPlugin *</type>
      <name>plugin</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1PluginContainer_1_1Slot.html</anchorfile>
      <anchor>a86e8306323b90081db01e712c0f969a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TPriorities</type>
      <name>priority</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1PluginContainer_1_1Slot.html</anchorfile>
      <anchor>a3c0ccc36434f93b9d0297be96054147f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::threads::SmartLock</name>
    <filename>classaworx_1_1lib_1_1threads_1_1SmartLock.html</filename>
    <base>aworx::lib::threads::ThreadLock</base>
    <member kind="function">
      <type></type>
      <name>SmartLock</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1SmartLock.html</anchorfile>
      <anchor>a90c2c49cbc4b52547424991f1665a8cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Acquire</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1SmartLock.html</anchorfile>
      <anchor>a07a42f9930e2b2f9b94a3d47d3088532</anchor>
      <arglist>(const TString &amp;file, int line, const TString &amp;func)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API int</type>
      <name>AddAcquirer</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1SmartLock.html</anchorfile>
      <anchor>ac097a5b90ddc055cbf44b6a87b8cfda6</anchor>
      <arglist>(ThreadLock *newAcquirer)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API int</type>
      <name>CntAcquirers</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1SmartLock.html</anchorfile>
      <anchor>a8d7f3cb41c747cf4c508db08fc60fe9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>virtual ALIB_API void</type>
      <name>Release</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1SmartLock.html</anchorfile>
      <anchor>a94c93747c8daa99d65c2a04c6be0748c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API int</type>
      <name>RemoveAcquirer</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1SmartLock.html</anchorfile>
      <anchor>a2f480eaa76919774ba222225c952b874</anchor>
      <arglist>(ThreadLock *acquirer)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; ThreadLock * &gt;</type>
      <name>acquirers</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1SmartLock.html</anchorfile>
      <anchor>a69a7bacc64ce3f8afd6cc837408e532f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ThreadLockNR</type>
      <name>lock</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1SmartLock.html</anchorfile>
      <anchor>a283e6693e8700e7f0148cd0a41255714</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::util::StringTree::Walker::Sorter</name>
    <filename>structaworx_1_1lib_1_1util_1_1StringTree_1_1Walker_1_1Sorter.html</filename>
    <member kind="variable">
      <type>bool(*</type>
      <name>pathSorter</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1StringTree_1_1Walker_1_1Sorter.html</anchorfile>
      <anchor>af19d8a1f55e65527398af11a02b7d584</anchor>
      <arglist>)(const String &amp;, const String &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>SortOrder</type>
      <name>sortOrder</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1StringTree_1_1Walker_1_1Sorter.html</anchorfile>
      <anchor>a89cc0bdfe8580c2c4609bf66285c44c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Case</type>
      <name>sortSensitivity</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1StringTree_1_1Walker_1_1Sorter.html</anchorfile>
      <anchor>a09b9f96dba154680ea82de355bd07e06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool(*</type>
      <name>valueSorter</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1StringTree_1_1Walker_1_1Sorter.html</anchorfile>
      <anchor>ad329d04d192f4b4cb3c3ba6a6b0bc612</anchor>
      <arglist>)(const T &amp;, const T &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1StringTree_1_1Walker_1_1Sorter.html</anchorfile>
      <anchor>a1754080aa84d0e3275d9fecfa0e0e22c</anchor>
      <arglist>(const std::pair&lt; String, Node *&gt; &amp;lhs, const std::pair&lt; String, Node *&gt; &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lox::core::ScopeInfo::SourceFile</name>
    <filename>structaworx_1_1lox_1_1core_1_1ScopeInfo_1_1SourceFile.html</filename>
    <member kind="variable">
      <type>String</type>
      <name>fullPath</name>
      <anchorfile>structaworx_1_1lox_1_1core_1_1ScopeInfo_1_1SourceFile.html</anchorfile>
      <anchor>a54ee0033dccba3b71b4df46be20a8ed8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>name</name>
      <anchorfile>structaworx_1_1lox_1_1core_1_1ScopeInfo_1_1SourceFile.html</anchorfile>
      <anchor>a9a2326f35466e54c36c070829245c557</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>nameWOExt</name>
      <anchorfile>structaworx_1_1lox_1_1core_1_1ScopeInfo_1_1SourceFile.html</anchorfile>
      <anchor>ae612f42281f92db83f647e7bcb9634c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TString</type>
      <name>origFile</name>
      <anchorfile>structaworx_1_1lox_1_1core_1_1ScopeInfo_1_1SourceFile.html</anchorfile>
      <anchor>a792c2a0b64091058562faaf73b0b5e9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>integer</type>
      <name>origFilePathLength</name>
      <anchorfile>structaworx_1_1lox_1_1core_1_1ScopeInfo_1_1SourceFile.html</anchorfile>
      <anchor>a2dba0acaca26e99078a85d8d27ef4777</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>timeStamp</name>
      <anchorfile>structaworx_1_1lox_1_1core_1_1ScopeInfo_1_1SourceFile.html</anchorfile>
      <anchor>a90f2bff1452c67c82041a8227baa0076</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>trimmedPath</name>
      <anchorfile>structaworx_1_1lox_1_1core_1_1ScopeInfo_1_1SourceFile.html</anchorfile>
      <anchor>a457ff5532ac38a6fafc282764d6da378</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>trimmedPathPrefix</name>
      <anchorfile>structaworx_1_1lox_1_1core_1_1ScopeInfo_1_1SourceFile.html</anchorfile>
      <anchor>af3d0c635ee10b56e2d9bfce8aa1cdbcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SourceFile</name>
      <anchorfile>structaworx_1_1lox_1_1core_1_1ScopeInfo_1_1SourceFile.html</anchorfile>
      <anchor>a3f53c24a9d5784b49a8a623a67145ec1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>structaworx_1_1lox_1_1core_1_1ScopeInfo_1_1SourceFile.html</anchorfile>
      <anchor>aa71d36872f416feaa853788a7a7a7ef8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lox::core::ScopeInfo::SourcePathTrimRule</name>
    <filename>structaworx_1_1lox_1_1core_1_1ScopeInfo_1_1SourcePathTrimRule.html</filename>
    <member kind="variable">
      <type>Inclusion</type>
      <name>IncludeString</name>
      <anchorfile>structaworx_1_1lox_1_1core_1_1ScopeInfo_1_1SourcePathTrimRule.html</anchorfile>
      <anchor>a4dfbe3fa1c6cd975f1a6a3b17dc6ac8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>IsPrefix</name>
      <anchorfile>structaworx_1_1lox_1_1core_1_1ScopeInfo_1_1SourcePathTrimRule.html</anchorfile>
      <anchor>af3bc9a519dad021ce04b07599d610ccd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AString</type>
      <name>Path</name>
      <anchorfile>structaworx_1_1lox_1_1core_1_1ScopeInfo_1_1SourcePathTrimRule.html</anchorfile>
      <anchor>a5e583dd1bf88abfb28487df2f676a6e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Priorities</type>
      <name>Priority</name>
      <anchorfile>structaworx_1_1lox_1_1core_1_1ScopeInfo_1_1SourcePathTrimRule.html</anchorfile>
      <anchor>a785160bb624ffbba18242691580e55c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Case</type>
      <name>Sensitivity</name>
      <anchorfile>structaworx_1_1lox_1_1core_1_1ScopeInfo_1_1SourcePathTrimRule.html</anchorfile>
      <anchor>a48bf193d2228373a7e76ba4e08137017</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>TrimOffset</name>
      <anchorfile>structaworx_1_1lox_1_1core_1_1ScopeInfo_1_1SourcePathTrimRule.html</anchorfile>
      <anchor>a400a3c8a83ee22ccb635bb8a96a1d6ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AString</type>
      <name>TrimReplacement</name>
      <anchorfile>structaworx_1_1lox_1_1core_1_1ScopeInfo_1_1SourcePathTrimRule.html</anchorfile>
      <anchor>aab1aeee9def0c8b2181dd7ad92551cbc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::strings::util::Spaces</name>
    <filename>classaworx_1_1lib_1_1strings_1_1util_1_1Spaces.html</filename>
    <member kind="function" static="yes">
      <type>static ALIB_API String &amp;</type>
      <name>Get</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1Spaces.html</anchorfile>
      <anchor>af5bd83281589cfeebbda3b6676e8f3a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ALIB_API void</type>
      <name>Initialize</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1Spaces.html</anchorfile>
      <anchor>a028556c5fed94a8e9db6f77d689f6790</anchor>
      <arglist>(integer minSize)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ALIB_API void</type>
      <name>Write</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1Spaces.html</anchorfile>
      <anchor>a801e93234e9df77f585c993ee0a1a9a7</anchor>
      <arglist>(std::ostream &amp;os, integer qty)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lox::core::textlogger::StandardConverter</name>
    <filename>classaworx_1_1lox_1_1core_1_1textlogger_1_1StandardConverter.html</filename>
    <base>aworx::lox::core::textlogger::ObjectConverter</base>
    <member kind="variable">
      <type>FormatterJavaStyle</type>
      <name>FormatterJS</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1StandardConverter.html</anchorfile>
      <anchor>a41deffcdf2933af4c71b1d2441ca4b2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FormatterPythonStyle</type>
      <name>FormatterPS</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1StandardConverter.html</anchorfile>
      <anchor>a85f447c2e5d7073292ccd3ed59824b5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ALOX_API</type>
      <name>StandardConverter</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1StandardConverter.html</anchorfile>
      <anchor>a002835b782b644fb4c119ed07fb05393</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALOX_API</type>
      <name>~StandardConverter</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1StandardConverter.html</anchorfile>
      <anchor>a4f553b639dede839bef933c088e3d03f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALOX_API void</type>
      <name>ConvertObjects</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1StandardConverter.html</anchorfile>
      <anchor>a8960d8a1fde6f3c547f5837f015ff162</anchor>
      <arglist>(AString &amp;target, Boxes &amp;logables)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>cntRecursion</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1StandardConverter.html</anchorfile>
      <anchor>af0810fa527161508f81ba64b68b58c89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; FormatterPythonStyle * &gt;</type>
      <name>recursionFormatters</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1StandardConverter.html</anchorfile>
      <anchor>af1d82d93e7659f196b8ecac14920be89</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::std_AStringEquals</name>
    <filename>structaworx_1_1lib_1_1strings_1_1std__AStringEquals.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1std__AStringEquals.html</anchorfile>
      <anchor>ace14397c33408d5297b154e93f65bf31</anchor>
      <arglist>(const String &amp;lhs, const String &amp;rhs) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::std_AStringEqualsIgnoreCase</name>
    <filename>structaworx_1_1lib_1_1strings_1_1std__AStringEqualsIgnoreCase.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1std__AStringEqualsIgnoreCase.html</anchorfile>
      <anchor>ace14397c33408d5297b154e93f65bf31</anchor>
      <arglist>(const String &amp;lhs, const String &amp;rhs) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::std_AStringHash</name>
    <filename>structaworx_1_1lib_1_1strings_1_1std__AStringHash.html</filename>
    <member kind="function">
      <type>size_t</type>
      <name>operator()</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1std__AStringHash.html</anchorfile>
      <anchor>a6fc9ac80b2ea93d5ee5df7853399cceb</anchor>
      <arglist>(const String &amp;src) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::std_AStringHashIgnoreCase</name>
    <filename>structaworx_1_1lib_1_1strings_1_1std__AStringHashIgnoreCase.html</filename>
    <member kind="function">
      <type>size_t</type>
      <name>operator()</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1std__AStringHashIgnoreCase.html</anchorfile>
      <anchor>a6fc9ac80b2ea93d5ee5df7853399cceb</anchor>
      <arglist>(const String &amp;src) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::lang::std_EnumEquals</name>
    <filename>structaworx_1_1lib_1_1lang_1_1std__EnumEquals.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1std__EnumEquals.html</anchorfile>
      <anchor>a29d6eae27a03d941c131548e5ba78fbc</anchor>
      <arglist>(const Enum lhs, const Enum rhs) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::lang::std_EnumHash</name>
    <filename>structaworx_1_1lib_1_1lang_1_1std__EnumHash.html</filename>
    <member kind="function">
      <type>size_t</type>
      <name>operator()</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1std__EnumHash.html</anchorfile>
      <anchor>a76247d0e039d094d42709784c77c991a</anchor>
      <arglist>(const Enum &amp;src) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::boxing::std_Equals</name>
    <filename>structaworx_1_1lib_1_1boxing_1_1std__Equals.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structaworx_1_1lib_1_1boxing_1_1std__Equals.html</anchorfile>
      <anchor>a769781cf279d4462c92ac72506d1e6a2</anchor>
      <arglist>(const Box &amp;lhs, const Box &amp;rhs) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::boxing::std_Hash</name>
    <filename>structaworx_1_1lib_1_1boxing_1_1std__Hash.html</filename>
    <member kind="function">
      <type>size_t</type>
      <name>operator()</name>
      <anchorfile>structaworx_1_1lib_1_1boxing_1_1std__Hash.html</anchorfile>
      <anchor>ae243d59f087eb1d473cd07375f79baf7</anchor>
      <arglist>(const Box &amp;src) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::std_StringEquals</name>
    <filename>structaworx_1_1lib_1_1strings_1_1std__StringEquals.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1std__StringEquals.html</anchorfile>
      <anchor>ace14397c33408d5297b154e93f65bf31</anchor>
      <arglist>(const String &amp;lhs, const String &amp;rhs) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::std_StringEqualsIgnoreCase</name>
    <filename>structaworx_1_1lib_1_1strings_1_1std__StringEqualsIgnoreCase.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1std__StringEqualsIgnoreCase.html</anchorfile>
      <anchor>ace14397c33408d5297b154e93f65bf31</anchor>
      <arglist>(const String &amp;lhs, const String &amp;rhs) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::std_StringHash</name>
    <filename>structaworx_1_1lib_1_1strings_1_1std__StringHash.html</filename>
    <member kind="function">
      <type>size_t</type>
      <name>operator()</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1std__StringHash.html</anchorfile>
      <anchor>a6fc9ac80b2ea93d5ee5df7853399cceb</anchor>
      <arglist>(const String &amp;src) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::std_StringHashIgnoreCase</name>
    <filename>structaworx_1_1lib_1_1strings_1_1std__StringHashIgnoreCase.html</filename>
    <member kind="function">
      <type>size_t</type>
      <name>operator()</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1std__StringHashIgnoreCase.html</anchorfile>
      <anchor>a6fc9ac80b2ea93d5ee5df7853399cceb</anchor>
      <arglist>(const String &amp;src) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::util::StringTree::StdIterator</name>
    <filename>classaworx_1_1lib_1_1util_1_1StringTree_1_1StdIterator.html</filename>
    <class kind="struct">aworx::lib::util::StringTree::StdIterator::RecursionDataIt</class>
    <member kind="function">
      <type></type>
      <name>StdIterator</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1StdIterator.html</anchorfile>
      <anchor>a6f9b0dbe4fcad1c316c587a85b8be007</anchor>
      <arglist>(StringTree *_stringTree)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Depth</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1StdIterator.html</anchorfile>
      <anchor>a72fdcb31622fdd4b1197a207a6a6685e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>Name</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1StdIterator.html</anchorfile>
      <anchor>a0e5b1128eca23e746052102f3f5da3bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1StdIterator.html</anchorfile>
      <anchor>a171fda2aad776b9308e1826ae103d8c7</anchor>
      <arglist>(const StdIterator &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator*</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1StdIterator.html</anchorfile>
      <anchor>af7f8c6b921dca2b94f6e7ee14e762770</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StdIterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1StdIterator.html</anchorfile>
      <anchor>a4eabf8ee5a8dbd739b4a5fee6e67684b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1StdIterator.html</anchorfile>
      <anchor>a920c99480b9ad6dd2a45bef403be23fe</anchor>
      <arglist>(const StdIterator &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Size</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1StdIterator.html</anchorfile>
      <anchor>af40990b9bd3d70d30e8ce7cdda1ad56f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Skip</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1StdIterator.html</anchorfile>
      <anchor>a6f9a70e22db597ca69797f5cc7243f6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>StringTree</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1StdIterator.html</anchorfile>
      <anchor>aa42c89c0eaa357d95820842673034eed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>recursionDepth</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1StdIterator.html</anchorfile>
      <anchor>a9a1951fdc18bdd21f3de11073fc7fcfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::stack&lt; RecursionDataIt &gt;</type>
      <name>stack</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1StdIterator.html</anchorfile>
      <anchor>aa1ced8936ccae566a7f694ce09fdfe3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>StringTree *</type>
      <name>stringTree</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1StdIterator.html</anchorfile>
      <anchor>a836095184e69ee547f80ebf11de862d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>StdIterator</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1StdIterator.html</anchorfile>
      <anchor>a8bbe19884d7b0b273b0f2c630ade0125</anchor>
      <arglist>(StringTree *_stringTree, typename StringTree::Node *node, int _recursionDepth)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Node *</type>
      <name>actNode</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1StdIterator.html</anchorfile>
      <anchor>ae62f2661d9a767ee0c15664c0d0a7c72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setStart</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1StdIterator.html</anchorfile>
      <anchor>a11328fb94695252d3250bdab7a7aae80</anchor>
      <arglist>(typename StringTree::Node *node, int _recursionDepth)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::time::StopWatch</name>
    <filename>classaworx_1_1lib_1_1time_1_1StopWatch.html</filename>
    <member kind="function">
      <type></type>
      <name>StopWatch</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1StopWatch.html</anchorfile>
      <anchor>aa4afc99fd4722116154e5e188487d9e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StopWatch</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1StopWatch.html</anchorfile>
      <anchor>af453fe38a492ae098fcb26551eac0062</anchor>
      <arglist>(const StopWatch &amp;copy)</arglist>
    </member>
    <member kind="function">
      <type>TimeStamp</type>
      <name>GetAverage</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1StopWatch.html</anchorfile>
      <anchor>a93dccbfe6455b714ec147549a0749669</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TimeStamp</type>
      <name>GetCumulated</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1StopWatch.html</anchorfile>
      <anchor>a7e51ad143cd32a0ad730ca806a8b94b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetSampleCnt</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1StopWatch.html</anchorfile>
      <anchor>a398368868a3740d3b213d242661ec6e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const TimeStamp &amp;</type>
      <name>GetStartTime</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1StopWatch.html</anchorfile>
      <anchor>a82b77da7242c04d9b389c1706d3ecf8c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Reset</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1StopWatch.html</anchorfile>
      <anchor>a372de693ad40b3f42839c8ec6ac845f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const TimeStamp</type>
      <name>Sample</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1StopWatch.html</anchorfile>
      <anchor>ad9712accb77c84eaf85c60636572eb1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStartTime</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1StopWatch.html</anchorfile>
      <anchor>a64ae8d3a89e51bd1d9706282e205297e</anchor>
      <arglist>(const TimeStamp newStartTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Start</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1StopWatch.html</anchorfile>
      <anchor>a07aaf1227e4d645f15e0a964f54ef291</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>cntSamples</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1StopWatch.html</anchorfile>
      <anchor>a3203b85b99c75b91922c0147ac0ca04b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TimeStamp</type>
      <name>startTime</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1StopWatch.html</anchorfile>
      <anchor>ae9194ffcffa3d7ae8beb08cc05a7b4cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TimeStamp</type>
      <name>sum</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1StopWatch.html</anchorfile>
      <anchor>ae2bb7a773e26c54d484110fa8f54aa4f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::strings::String</name>
    <filename>classaworx_1_1lib_1_1strings_1_1String.html</filename>
    <class kind="class">aworx::lib::strings::String::RandomAccessIteratorBase</class>
    <member kind="function">
      <type>constexpr</type>
      <name>String</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>adcffeb665e497d8c0909063e4b5df871</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>String</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a1301d3ebeba443fd830a9617a15aac0b</anchor>
      <arglist>(const char *buffer, integer contentLength)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>af0ab988e17c0a5a6255827eee4a8028a</anchor>
      <arglist>(const String &amp;src, integer regionStart, integer regionLength=CString::MaxLen)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a77570e9a3594a1e01a53da92a5f64c40</anchor>
      <arglist>(const TStringLike &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>Buffer</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a8e9993430d0c6b4f328b2884216ef87a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>Length</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a78a515bdd031a8d3b713bb05edcf126c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsNull</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>ac4d637a0dec45d546495c1660c9f6047</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsNotNull</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a1975261f9100a453259d7df75ad4080d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEmpty</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a8e12342fc420701fbffd97025421575a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsNotEmpty</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a6c546c3e5ed2e243ae839807fe633140</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>CharAt</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a7024029ef608b45471c5f31cb381f596</anchor>
      <arglist>(integer idx) const</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>CharAtStart</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a4b840e37d6ab8f0b56075c8de82b4152</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>CharAtEnd</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>ad5adea1923df366e896af251757b3528</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>operator[]</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a227e5bdf7a6d162da1ba47c39063b417</anchor>
      <arglist>(integer idx) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Equals</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a80f54c9dc7947aa731b93bf3217e93f2</anchor>
      <arglist>(const String &amp;needle) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ContainsAt</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>acf92645fa8c4cc894d35fd4df0e635f8</anchor>
      <arglist>(const String &amp;needle, integer pos) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>StartsWith</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a50a93ef6cd1a8deaacbb3ab99c07eb80</anchor>
      <arglist>(const String &amp;needle) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EndsWith</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a6b3d473da02ff2622d1a90928c506876</anchor>
      <arglist>(const String &amp;needle) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CompareTo</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a804faaeae51297434cd4b197353134d9</anchor>
      <arglist>(const String &amp;needle) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CompareTo</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>aa8cf3199b988a6675df81ab1e4e72fda</anchor>
      <arglist>(const String &amp;needle, integer needleRegionStart, integer needleRegionLength=CString::MaxLen) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CompareTo</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a641cc875334801db2605fc7e55c656c7</anchor>
      <arglist>(const String &amp;needle, integer cmpRegionStart, integer cmpRegionLength, integer regionStart, integer regionLength=CString::MaxLen) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>ab64e70a5dacaf96051001c5ac1ba42d4</anchor>
      <arglist>(const String &amp;op) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>ad898a3ce164c9108bc941ee7ba17c79c</anchor>
      <arglist>(const String &amp;op) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>ac02f8b4c5f15456011760d3690065335</anchor>
      <arglist>(const String &amp;op) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>aa27d29bb45f71f78f23cf9f13b1f363a</anchor>
      <arglist>(const String &amp;op) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>ace88722db3a272610fbc7f8fccd9e258</anchor>
      <arglist>(const String &amp;op) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a22b94d6b436e0098cf9d92ba846c02e9</anchor>
      <arglist>(const String &amp;op) const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>IndexOf</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a7365672c3c963ba88de5612e38e704bd</anchor>
      <arglist>(char needle) const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>IndexOf</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>ac05a3241d30fde1e58d95ba1f44ee72d</anchor>
      <arglist>(char needle, integer startIdx) const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>IndexOf</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>abacc41ba7e94890340a82233f2538ecc</anchor>
      <arglist>(char needle, integer regionStart, integer regionLength) const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>IndexOfOrLength</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>abe7d75de817ac17c9104f47991cc0ae6</anchor>
      <arglist>(char needle) const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>IndexOfOrLength</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>acc0a1951d59db9306be459bddf0b4fbb</anchor>
      <arglist>(char needle, integer startIdx) const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>LastIndexOf</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a8bb8c82267bbb72239c9d6559cdfbf24</anchor>
      <arglist>(char needle, integer startIndex=CString::MaxLen) const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>IndexOfAny</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a66424c3dfeba3c25b75df951147067d3</anchor>
      <arglist>(const String &amp;needles, integer startIdx=0) const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>LastIndexOfAny</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a3869a6fbaf8ca6e478cd119c540dffbf</anchor>
      <arglist>(const String &amp;needles, integer startIdx=CString::MaxLen) const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>IndexOfSubstring</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a0d261d680a9f9036a43cb7a6a4baa268</anchor>
      <arglist>(const String &amp;needle, integer startIdx=0) const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>IndexOfFirstDifference</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>aa38812ea513734bb82f5eba9a87eedc3</anchor>
      <arglist>(const String &amp;needle, lang::Case sensitivity=lang::Case::Sensitive, integer idx=0) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CountChar</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>ac06a9c8f9bb2ba88baee904f7510042e</anchor>
      <arglist>(char needle, integer startPos=0) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CountChar</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a2881dc9600967935c5a39536782ad818</anchor>
      <arglist>(char needle, char omit, integer startPos=0) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Count</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a4c2055642e2ff907fa45012dc825a705</anchor>
      <arglist>(const String &amp;needle, integer startPos=0) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Count</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a151ecb5e80af54ad4f84f6f49af4d3c9</anchor>
      <arglist>(const String &amp;needle, const String &amp;omit, integer startPos=0) const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>CopyTo</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>ac3e160a8b59fc366a756f4b9e5aba7b2</anchor>
      <arglist>(char *dest) const</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API integer</type>
      <name>ToWString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>afad765c530b9d43175f20bdcf968451a</anchor>
      <arglist>(wchar_t *dest, integer destCapacity, integer regionStart=0, integer regionLength=CString::MaxLen) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AdjustRegion</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>abbbca75c8d760ba66c441e9f67273a7f</anchor>
      <arglist>(integer &amp;regionStart, integer &amp;regionLength) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const char *</type>
      <name>buffer</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>adae84acc92cd77a04f6aaf533643a33a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>integer</type>
      <name>length</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>af940c51e198511031f839dec6e7f1b71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char *</type>
      <name>vbuffer</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>ab060ffba71bd8a3d7067a38950b39a82</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>String</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>adcffeb665e497d8c0909063e4b5df871</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>String</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a1301d3ebeba443fd830a9617a15aac0b</anchor>
      <arglist>(const char *buffer, integer contentLength)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>af0ab988e17c0a5a6255827eee4a8028a</anchor>
      <arglist>(const String &amp;src, integer regionStart, integer regionLength=CString::MaxLen)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a77570e9a3594a1e01a53da92a5f64c40</anchor>
      <arglist>(const TStringLike &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>Buffer</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a8e9993430d0c6b4f328b2884216ef87a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>Length</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a78a515bdd031a8d3b713bb05edcf126c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsNull</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>ac4d637a0dec45d546495c1660c9f6047</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsNotNull</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a1975261f9100a453259d7df75ad4080d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEmpty</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a8e12342fc420701fbffd97025421575a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsNotEmpty</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a6c546c3e5ed2e243ae839807fe633140</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>CharAt</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a7024029ef608b45471c5f31cb381f596</anchor>
      <arglist>(integer idx) const</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>CharAtStart</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a4b840e37d6ab8f0b56075c8de82b4152</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>CharAtEnd</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>ad5adea1923df366e896af251757b3528</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>operator[]</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a227e5bdf7a6d162da1ba47c39063b417</anchor>
      <arglist>(integer idx) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Equals</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a80f54c9dc7947aa731b93bf3217e93f2</anchor>
      <arglist>(const String &amp;needle) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ContainsAt</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>acf92645fa8c4cc894d35fd4df0e635f8</anchor>
      <arglist>(const String &amp;needle, integer pos) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>StartsWith</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a50a93ef6cd1a8deaacbb3ab99c07eb80</anchor>
      <arglist>(const String &amp;needle) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EndsWith</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a6b3d473da02ff2622d1a90928c506876</anchor>
      <arglist>(const String &amp;needle) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CompareTo</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a804faaeae51297434cd4b197353134d9</anchor>
      <arglist>(const String &amp;needle) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CompareTo</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>aa8cf3199b988a6675df81ab1e4e72fda</anchor>
      <arglist>(const String &amp;needle, integer needleRegionStart, integer needleRegionLength=CString::MaxLen) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CompareTo</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a641cc875334801db2605fc7e55c656c7</anchor>
      <arglist>(const String &amp;needle, integer cmpRegionStart, integer cmpRegionLength, integer regionStart, integer regionLength=CString::MaxLen) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>ab64e70a5dacaf96051001c5ac1ba42d4</anchor>
      <arglist>(const String &amp;op) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>ad898a3ce164c9108bc941ee7ba17c79c</anchor>
      <arglist>(const String &amp;op) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>ac02f8b4c5f15456011760d3690065335</anchor>
      <arglist>(const String &amp;op) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>aa27d29bb45f71f78f23cf9f13b1f363a</anchor>
      <arglist>(const String &amp;op) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>ace88722db3a272610fbc7f8fccd9e258</anchor>
      <arglist>(const String &amp;op) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a22b94d6b436e0098cf9d92ba846c02e9</anchor>
      <arglist>(const String &amp;op) const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>IndexOf</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a7365672c3c963ba88de5612e38e704bd</anchor>
      <arglist>(char needle) const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>IndexOf</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>ac05a3241d30fde1e58d95ba1f44ee72d</anchor>
      <arglist>(char needle, integer startIdx) const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>IndexOf</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>abacc41ba7e94890340a82233f2538ecc</anchor>
      <arglist>(char needle, integer regionStart, integer regionLength) const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>IndexOfOrLength</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>abe7d75de817ac17c9104f47991cc0ae6</anchor>
      <arglist>(char needle) const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>IndexOfOrLength</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>acc0a1951d59db9306be459bddf0b4fbb</anchor>
      <arglist>(char needle, integer startIdx) const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>LastIndexOf</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a8bb8c82267bbb72239c9d6559cdfbf24</anchor>
      <arglist>(char needle, integer startIndex=CString::MaxLen) const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>IndexOfAny</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a66424c3dfeba3c25b75df951147067d3</anchor>
      <arglist>(const String &amp;needles, integer startIdx=0) const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>LastIndexOfAny</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a3869a6fbaf8ca6e478cd119c540dffbf</anchor>
      <arglist>(const String &amp;needles, integer startIdx=CString::MaxLen) const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>IndexOfSubstring</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a0d261d680a9f9036a43cb7a6a4baa268</anchor>
      <arglist>(const String &amp;needle, integer startIdx=0) const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>IndexOfFirstDifference</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>aa38812ea513734bb82f5eba9a87eedc3</anchor>
      <arglist>(const String &amp;needle, lang::Case sensitivity=lang::Case::Sensitive, integer idx=0) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CountChar</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>ac06a9c8f9bb2ba88baee904f7510042e</anchor>
      <arglist>(char needle, integer startPos=0) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CountChar</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a2881dc9600967935c5a39536782ad818</anchor>
      <arglist>(char needle, char omit, integer startPos=0) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Count</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a4c2055642e2ff907fa45012dc825a705</anchor>
      <arglist>(const String &amp;needle, integer startPos=0) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Count</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a151ecb5e80af54ad4f84f6f49af4d3c9</anchor>
      <arglist>(const String &amp;needle, const String &amp;omit, integer startPos=0) const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>CopyTo</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>ac3e160a8b59fc366a756f4b9e5aba7b2</anchor>
      <arglist>(char *dest) const</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API integer</type>
      <name>ToWString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>afad765c530b9d43175f20bdcf968451a</anchor>
      <arglist>(wchar_t *dest, integer destCapacity, integer regionStart=0, integer regionLength=CString::MaxLen) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AdjustRegion</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>abbbca75c8d760ba66c441e9f67273a7f</anchor>
      <arglist>(integer &amp;regionStart, integer &amp;regionLength) const</arglist>
    </member>
    <member kind="typedef">
      <type>RandomAccessIteratorBase&lt; const char *, const char &amp; &gt;</type>
      <name>ConstIterator</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a64c43de3fe68d6cfacf763b946b97adb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ConstIterator</type>
      <name>begin</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>ad5fee900c7aee90671038c79225bf8ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ConstIterator</type>
      <name>end</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a69b6e2a03c835ca5d658a1f16acbaa9c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1String.html</anchorfile>
      <anchor>a2b1154b4ef248c992e73c28a2783830e</anchor>
      <arglist>(ConstIterator &amp;start, ConstIterator &amp;end)</arglist>
    </member>
    <docanchor file="classaworx_1_1lib_1_1strings_1_1String">CPP_STRINGS_AS_NULLSTATE</docanchor>
    <docanchor file="classaworx_1_1lib_1_1strings_1_1String">CPP_STRINGS_AS_NC</docanchor>
  </compound>
  <compound kind="class">
    <name>aworx::lib::strings::StringLiteral</name>
    <filename>classaworx_1_1lib_1_1strings_1_1StringLiteral.html</filename>
    <templarg>TLength</templarg>
    <base>aworx::lib::strings::TString</base>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Copy</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1StringLiteral.html</anchorfile>
      <anchor>abe54b80eca850835aac62649d48de03c</anchor>
      <arglist>(char *dest, const char *src)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StringLiteral</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1StringLiteral.html</anchorfile>
      <anchor>a4b8fba33694e7534bd9ce9f0feae415d</anchor>
      <arglist>(const char(&amp;src)[TLength+1])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Copy</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1StringLiteral.html</anchorfile>
      <anchor>a9d3a01b96278e25b770eabce9295bdf9</anchor>
      <arglist>(char *dest)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StringLiteral&lt; 10 &gt;</name>
    <filename>classaworx_1_1lib_1_1strings_1_1StringLiteral.html</filename>
    <base>aworx::lib::strings::TString</base>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Copy</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1StringLiteral.html</anchorfile>
      <anchor>abe54b80eca850835aac62649d48de03c</anchor>
      <arglist>(char *dest, const char *src)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StringLiteral</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1StringLiteral.html</anchorfile>
      <anchor>a4b8fba33694e7534bd9ce9f0feae415d</anchor>
      <arglist>(const char(&amp;src)[TLength+1])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Copy</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1StringLiteral.html</anchorfile>
      <anchor>a9d3a01b96278e25b770eabce9295bdf9</anchor>
      <arglist>(char *dest)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StringLiteral&lt; 11 &gt;</name>
    <filename>classaworx_1_1lib_1_1strings_1_1StringLiteral.html</filename>
    <base>aworx::lib::strings::TString</base>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Copy</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1StringLiteral.html</anchorfile>
      <anchor>abe54b80eca850835aac62649d48de03c</anchor>
      <arglist>(char *dest, const char *src)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StringLiteral</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1StringLiteral.html</anchorfile>
      <anchor>a4b8fba33694e7534bd9ce9f0feae415d</anchor>
      <arglist>(const char(&amp;src)[TLength+1])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Copy</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1StringLiteral.html</anchorfile>
      <anchor>a9d3a01b96278e25b770eabce9295bdf9</anchor>
      <arglist>(char *dest)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StringLiteral&lt; 2 &gt;</name>
    <filename>classaworx_1_1lib_1_1strings_1_1StringLiteral.html</filename>
    <base>aworx::lib::strings::TString</base>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Copy</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1StringLiteral.html</anchorfile>
      <anchor>abe54b80eca850835aac62649d48de03c</anchor>
      <arglist>(char *dest, const char *src)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StringLiteral</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1StringLiteral.html</anchorfile>
      <anchor>a4b8fba33694e7534bd9ce9f0feae415d</anchor>
      <arglist>(const char(&amp;src)[TLength+1])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Copy</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1StringLiteral.html</anchorfile>
      <anchor>a9d3a01b96278e25b770eabce9295bdf9</anchor>
      <arglist>(char *dest)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StringLiteral&lt; 3 &gt;</name>
    <filename>classaworx_1_1lib_1_1strings_1_1StringLiteral.html</filename>
    <base>aworx::lib::strings::TString</base>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Copy</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1StringLiteral.html</anchorfile>
      <anchor>abe54b80eca850835aac62649d48de03c</anchor>
      <arglist>(char *dest, const char *src)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StringLiteral</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1StringLiteral.html</anchorfile>
      <anchor>a4b8fba33694e7534bd9ce9f0feae415d</anchor>
      <arglist>(const char(&amp;src)[TLength+1])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Copy</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1StringLiteral.html</anchorfile>
      <anchor>a9d3a01b96278e25b770eabce9295bdf9</anchor>
      <arglist>(char *dest)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StringLiteral&lt; 4 &gt;</name>
    <filename>classaworx_1_1lib_1_1strings_1_1StringLiteral.html</filename>
    <base>aworx::lib::strings::TString</base>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Copy</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1StringLiteral.html</anchorfile>
      <anchor>abe54b80eca850835aac62649d48de03c</anchor>
      <arglist>(char *dest, const char *src)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StringLiteral</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1StringLiteral.html</anchorfile>
      <anchor>a4b8fba33694e7534bd9ce9f0feae415d</anchor>
      <arglist>(const char(&amp;src)[TLength+1])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Copy</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1StringLiteral.html</anchorfile>
      <anchor>a9d3a01b96278e25b770eabce9295bdf9</anchor>
      <arglist>(char *dest)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StringLiteral&lt; 5 &gt;</name>
    <filename>classaworx_1_1lib_1_1strings_1_1StringLiteral.html</filename>
    <base>aworx::lib::strings::TString</base>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Copy</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1StringLiteral.html</anchorfile>
      <anchor>abe54b80eca850835aac62649d48de03c</anchor>
      <arglist>(char *dest, const char *src)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StringLiteral</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1StringLiteral.html</anchorfile>
      <anchor>a4b8fba33694e7534bd9ce9f0feae415d</anchor>
      <arglist>(const char(&amp;src)[TLength+1])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Copy</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1StringLiteral.html</anchorfile>
      <anchor>a9d3a01b96278e25b770eabce9295bdf9</anchor>
      <arglist>(char *dest)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::strings::Strings</name>
    <filename>classaworx_1_1lib_1_1strings_1_1Strings.html</filename>
    <base>aworx::lib::lang::Library</base>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Strings.html</anchorfile>
      <anchor>a0f7439457156e6270dfd3ccfd07e1ea1</anchor>
      <arglist>(Phases phase) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>terminationCleanUp</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Strings.html</anchorfile>
      <anchor>a7f9483d9dee8eaaeae3831a8bb40731e</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::strings::util::StringTable</name>
    <filename>classaworx_1_1lib_1_1strings_1_1util_1_1StringTable.html</filename>
    <templarg>TAssociatedTypes</templarg>
    <member kind="typedef">
      <type>std::tuple&lt; String, TAssociatedTypes... &gt;</type>
      <name>ElementType</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1StringTable.html</anchorfile>
      <anchor>ac6daef9421022cf674922d903efe19f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; ElementType &gt;</type>
      <name>VectorType</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1StringTable.html</anchorfile>
      <anchor>a4fb6cb6c68a283e27721ef036eccb885</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StringTable</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1StringTable.html</anchorfile>
      <anchor>ad6d166018e072d98ddb7dbdfd61371d3</anchor>
      <arglist>(int stdBlockSize=8 *1024)</arglist>
    </member>
    <member kind="function">
      <type>String &amp;</type>
      <name>Add</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1StringTable.html</anchorfile>
      <anchor>a8118a07e0e1937bd421d9061bd471b75</anchor>
      <arglist>(const String &amp;src, TAssociatedTypes... args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1StringTable.html</anchorfile>
      <anchor>a979a26ee0000c1ee7fae2b00eeffe7c7</anchor>
      <arglist>(CurrentData deallocate=CurrentData::Keep)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MemoryBlocks</type>
      <name>blocks</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1StringTable.html</anchorfile>
      <anchor>ad0337a186504be5501a77ce052e9c7c8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::util::StringTree</name>
    <filename>classaworx_1_1lib_1_1util_1_1StringTree.html</filename>
    <templarg>T</templarg>
    <templarg>TKeyAllocator</templarg>
    <templarg>TSeparator</templarg>
    <class kind="class">aworx::lib::util::StringTree::Cursor</class>
    <class kind="struct">aworx::lib::util::StringTree::Node</class>
    <class kind="class">aworx::lib::util::StringTree::StdIterator</class>
    <class kind="class">aworx::lib::util::StringTree::Walker</class>
    <member kind="function">
      <type></type>
      <name>StringTree</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>a12c63bb97dceeb994767995edb79b8c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StringTree</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>a54346dff967e9fde7e8be616275f1f6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StdIterator</type>
      <name>begin</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>af76b3f0931ada73975a7d1dc15941f9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>aa71d36872f416feaa853788a7a7a7ef8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StdIterator</type>
      <name>end</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>a9ea1f4bf0ddd2e732a5552084cdecc45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Cursor</type>
      <name>operator()</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>a26ba1ae3b47dffcf2673093ec30b087d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Cursor</type>
      <name>Root</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>aa82ebec74bb4a81000211e3dcdfdf9cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>UnorderedStringMap&lt; Node * &gt;</type>
      <name>TMap</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>a5ed481b3d67c031356e1868b7cb2ae03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Node *</type>
      <name>root</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>a3f7db53410d0f3007de60cc3d64a0c09</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="classaworx_1_1lib_1_1util_1_1StringTree">cpp_alib_containers_stringtree_cursor</docanchor>
    <docanchor file="classaworx_1_1lib_1_1util_1_1StringTree">cpp_alib_containers_stringtree_iterator</docanchor>
  </compound>
  <compound kind="class">
    <name>StringTree&lt; aworx::lib::boxing::Box *&gt;</name>
    <filename>classaworx_1_1lib_1_1util_1_1StringTree.html</filename>
    <member kind="function">
      <type></type>
      <name>StringTree</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>a12c63bb97dceeb994767995edb79b8c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StringTree</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>a54346dff967e9fde7e8be616275f1f6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StdIterator</type>
      <name>begin</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>af76b3f0931ada73975a7d1dc15941f9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>aa71d36872f416feaa853788a7a7a7ef8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StdIterator</type>
      <name>end</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>a9ea1f4bf0ddd2e732a5552084cdecc45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Cursor</type>
      <name>operator()</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>a26ba1ae3b47dffcf2673093ec30b087d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Cursor</type>
      <name>Root</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>aa82ebec74bb4a81000211e3dcdfdf9cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>UnorderedStringMap&lt; Node *&gt;</type>
      <name>TMap</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>a5ed481b3d67c031356e1868b7cb2ae03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Node *</type>
      <name>root</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>a3f7db53410d0f3007de60cc3d64a0c09</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StringTree&lt; aworx::lib::strings::AString *&gt;</name>
    <filename>classaworx_1_1lib_1_1util_1_1StringTree.html</filename>
    <member kind="function">
      <type></type>
      <name>StringTree</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>a12c63bb97dceeb994767995edb79b8c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StringTree</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>a54346dff967e9fde7e8be616275f1f6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StdIterator</type>
      <name>begin</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>af76b3f0931ada73975a7d1dc15941f9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>aa71d36872f416feaa853788a7a7a7ef8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StdIterator</type>
      <name>end</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>a9ea1f4bf0ddd2e732a5552084cdecc45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Cursor</type>
      <name>operator()</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>a26ba1ae3b47dffcf2673093ec30b087d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Cursor</type>
      <name>Root</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>aa82ebec74bb4a81000211e3dcdfdf9cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>UnorderedStringMap&lt; Node *&gt;</type>
      <name>TMap</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>a5ed481b3d67c031356e1868b7cb2ae03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Node *</type>
      <name>root</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>a3f7db53410d0f3007de60cc3d64a0c09</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StringTree&lt; std::map&lt; aworx::lib::strings::AString, aworx::lib::boxing::Box &gt; *&gt;</name>
    <filename>classaworx_1_1lib_1_1util_1_1StringTree.html</filename>
    <member kind="function">
      <type></type>
      <name>StringTree</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>a12c63bb97dceeb994767995edb79b8c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StringTree</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>a54346dff967e9fde7e8be616275f1f6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StdIterator</type>
      <name>begin</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>af76b3f0931ada73975a7d1dc15941f9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>aa71d36872f416feaa853788a7a7a7ef8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StdIterator</type>
      <name>end</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>a9ea1f4bf0ddd2e732a5552084cdecc45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Cursor</type>
      <name>operator()</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>a26ba1ae3b47dffcf2673093ec30b087d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Cursor</type>
      <name>Root</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>aa82ebec74bb4a81000211e3dcdfdf9cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>UnorderedStringMap&lt; Node *&gt;</type>
      <name>TMap</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>a5ed481b3d67c031356e1868b7cb2ae03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Node *</type>
      <name>root</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>a3f7db53410d0f3007de60cc3d64a0c09</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StringTree&lt; std::map&lt; aworx::lib::strings::AString, int &gt; *&gt;</name>
    <filename>classaworx_1_1lib_1_1util_1_1StringTree.html</filename>
    <member kind="function">
      <type></type>
      <name>StringTree</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>a12c63bb97dceeb994767995edb79b8c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StringTree</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>a54346dff967e9fde7e8be616275f1f6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StdIterator</type>
      <name>begin</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>af76b3f0931ada73975a7d1dc15941f9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>aa71d36872f416feaa853788a7a7a7ef8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StdIterator</type>
      <name>end</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>a9ea1f4bf0ddd2e732a5552084cdecc45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Cursor</type>
      <name>operator()</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>a26ba1ae3b47dffcf2673093ec30b087d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Cursor</type>
      <name>Root</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>aa82ebec74bb4a81000211e3dcdfdf9cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>UnorderedStringMap&lt; Node *&gt;</type>
      <name>TMap</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>a5ed481b3d67c031356e1868b7cb2ae03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Node *</type>
      <name>root</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>a3f7db53410d0f3007de60cc3d64a0c09</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StringTree&lt; StoreT &gt;</name>
    <filename>classaworx_1_1lib_1_1util_1_1StringTree.html</filename>
    <member kind="function">
      <type></type>
      <name>StringTree</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>a12c63bb97dceeb994767995edb79b8c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StringTree</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>a54346dff967e9fde7e8be616275f1f6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StdIterator</type>
      <name>begin</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>af76b3f0931ada73975a7d1dc15941f9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>aa71d36872f416feaa853788a7a7a7ef8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StdIterator</type>
      <name>end</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>a9ea1f4bf0ddd2e732a5552084cdecc45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Cursor</type>
      <name>operator()</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>a26ba1ae3b47dffcf2673093ec30b087d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Cursor</type>
      <name>Root</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>aa82ebec74bb4a81000211e3dcdfdf9cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>UnorderedStringMap&lt; Node *&gt;</type>
      <name>TMap</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>a5ed481b3d67c031356e1868b7cb2ae03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Node *</type>
      <name>root</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree.html</anchorfile>
      <anchor>a3f7db53410d0f3007de60cc3d64a0c09</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::util::StringTreeConstKeyAllocator</name>
    <filename>structaworx_1_1lib_1_1util_1_1StringTreeConstKeyAllocator.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>allocate</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1StringTreeConstKeyAllocator.html</anchorfile>
      <anchor>aa08d0bd0116f68e38afabf2de8e8547b</anchor>
      <arglist>(const String &amp;childName, T &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>free</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1StringTreeConstKeyAllocator.html</anchorfile>
      <anchor>ad3d7a5a43ac3c336642910e420d643f8</anchor>
      <arglist>(String &amp;, T &amp;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::util::StringTreeDefaultKeyAllocator</name>
    <filename>structaworx_1_1lib_1_1util_1_1StringTreeDefaultKeyAllocator.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>allocate</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1StringTreeDefaultKeyAllocator.html</anchorfile>
      <anchor>a0fb6c02485fc184430b17929a37ad514</anchor>
      <arglist>(const String &amp;childName, T &amp;value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>free</name>
      <anchorfile>structaworx_1_1lib_1_1util_1_1StringTreeDefaultKeyAllocator.html</anchorfile>
      <anchor>a0dd07c008375ec74353ad866d92a4a49</anchor>
      <arglist>(String &amp;childName, T &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::strings::Substring</name>
    <filename>classaworx_1_1lib_1_1strings_1_1Substring.html</filename>
    <base>aworx::lib::strings::String</base>
    <member kind="function">
      <type></type>
      <name>Substring</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>a5f56ec7bc62f19b85e690df023b8f1f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Substring</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>afbe72e673e9291a15be94c94157a195a</anchor>
      <arglist>(const String &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>Substring &amp;</type>
      <name>Set</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>a78e69b45cdcafe78919ef4394b946473</anchor>
      <arglist>(const String &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>Substring &amp;</type>
      <name>Set</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>a0ecb7ee6fe3a0f1bbfcaaa44262f3236</anchor>
      <arglist>(const String &amp;src, integer regionStart, integer regionLength=CString::MaxLen)</arglist>
    </member>
    <member kind="function">
      <type>Substring &amp;</type>
      <name>SetNull</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>a3805c0af8d0d8c718fabbfce10236da3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Substring &amp;</type>
      <name>Clear</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>af3534dc253659982f8f5f646da7c951c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLength</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>a4101d7715aa5920c9271cd6c10b216f9</anchor>
      <arglist>(integer newLength)</arglist>
    </member>
    <member kind="function">
      <type>Substring &amp;</type>
      <name>TrimStart</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>a0b77919824492d270546b8e028675fb2</anchor>
      <arglist>(const TString &amp;whiteSpaces=DefaultWhitespaces)</arglist>
    </member>
    <member kind="function">
      <type>Substring &amp;</type>
      <name>TrimEnd</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>ac817857e89b347e2eb00c57d3807ffe7</anchor>
      <arglist>(const TString &amp;whiteSpaces=DefaultWhitespaces)</arglist>
    </member>
    <member kind="function">
      <type>Substring &amp;</type>
      <name>Trim</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>a944dec553bb4a3ccb9e601d7fe7d0721</anchor>
      <arglist>(const TString &amp;whiteSpaces=DefaultWhitespaces)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Substring</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>a5f56ec7bc62f19b85e690df023b8f1f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Substring</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>afbe72e673e9291a15be94c94157a195a</anchor>
      <arglist>(const String &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>Substring &amp;</type>
      <name>Set</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>a78e69b45cdcafe78919ef4394b946473</anchor>
      <arglist>(const String &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>Substring &amp;</type>
      <name>Set</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>a0ecb7ee6fe3a0f1bbfcaaa44262f3236</anchor>
      <arglist>(const String &amp;src, integer regionStart, integer regionLength=CString::MaxLen)</arglist>
    </member>
    <member kind="function">
      <type>Substring &amp;</type>
      <name>SetNull</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>a3805c0af8d0d8c718fabbfce10236da3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Substring &amp;</type>
      <name>Clear</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>af3534dc253659982f8f5f646da7c951c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLength</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>a4101d7715aa5920c9271cd6c10b216f9</anchor>
      <arglist>(integer newLength)</arglist>
    </member>
    <member kind="function">
      <type>Substring &amp;</type>
      <name>TrimStart</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>a0b77919824492d270546b8e028675fb2</anchor>
      <arglist>(const TString &amp;whiteSpaces=DefaultWhitespaces)</arglist>
    </member>
    <member kind="function">
      <type>Substring &amp;</type>
      <name>TrimEnd</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>ac817857e89b347e2eb00c57d3807ffe7</anchor>
      <arglist>(const TString &amp;whiteSpaces=DefaultWhitespaces)</arglist>
    </member>
    <member kind="function">
      <type>Substring &amp;</type>
      <name>Trim</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>a944dec553bb4a3ccb9e601d7fe7d0721</anchor>
      <arglist>(const TString &amp;whiteSpaces=DefaultWhitespaces)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_WARNINGS_ALLOW_TEMPLATE_META_PROGRAMMING char</type>
      <name>ConsumeChar</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>a18cf26497fae8890a9f43b142063db59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ConsumeChar</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>a9703f0addd265e2b484243f0ade80420</anchor>
      <arglist>(char consumable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ConsumeCharFromEnd</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>a0adcec095f89379d9e01634745e4f1af</anchor>
      <arglist>(char consumable)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>ConsumeCharFromEnd</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>a944a0976c73b809d66b6777da9f3ed9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>ConsumeChars</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>aa92d18f63bf16bd73b4146c738a9b9eb</anchor>
      <arglist>(integer regionLength, Substring *target=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>ConsumeCharsFromEnd</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>af86dfb35eed1fe734ec7977187f79b95</anchor>
      <arglist>(integer regionLength, Substring *target=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>ConsumeChars</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>a5c2ea6c0c2d6cf000b1f3f90de484dd7</anchor>
      <arglist>(integer regionLength, AString &amp;target, integer separatorWidth=0)</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>ConsumeCharsFromEnd</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>ac7d23e3fd9b997913b97396e916371f5</anchor>
      <arglist>(integer regionLength, AString &amp;target, integer separatorWidth=0)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>ConsumeToken</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>aadfa9ad37a0dd52b650e9b18cc896df3</anchor>
      <arglist>(char separator=&apos;,&apos;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ConsumeString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>a9c6527d5e8373e7090b615551c4fd417</anchor>
      <arglist>(const String &amp;consumable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ConsumeStringFromEnd</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>a461822ea5b3be48c259618bb9464c2d7</anchor>
      <arglist>(const String &amp;consumable)</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>ConsumePartOf</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>aacfd7bb195ac8ad310bc26345600b2bd</anchor>
      <arglist>(const String &amp;consumable, int minChars=1)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>ConsumeField</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>ae70c6d9bd6d40bfe8bc0ad73302a79d3</anchor>
      <arglist>(char startChar, char endChar)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ConsumeEnum</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>a108a7aaa23fe6b9ac6b37339766ad17f</anchor>
      <arglist>(TEnum &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ConsumeEnumBitwise</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>a1525edfa4acb47087a795c78d3a0f41f</anchor>
      <arglist>(TEnum &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ConsumeEnumOrBool</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>a9756182d816925205b1c7390e78f68d0</anchor>
      <arglist>(TEnum &amp;result, TEnum falseValue, TEnum trueValue)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_WARNINGS_RESTORE bool</type>
      <name>ConsumeDecDigits</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>a6006fd6197e8f7e89de75c14c15e46e4</anchor>
      <arglist>(TInteger &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ConsumeInt</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>add31aaa5679f21922507f0030d97e6ed</anchor>
      <arglist>(TInteger &amp;result, NumberFormat *numberFormat=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ConsumeDec</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>a9e5fc74c4504055b329a8f903da8b4e6</anchor>
      <arglist>(TInteger &amp;result, NumberFormat *numberFormat=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ConsumeBin</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>a21df93f4ebb1ad0e8e1a89d973d8d0ce</anchor>
      <arglist>(TInteger &amp;result, NumberFormat *numberFormat=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ConsumeHex</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>a7b4e369700fc684fc50cf7ebdbd652f0</anchor>
      <arglist>(TInteger &amp;result, NumberFormat *numberFormat=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ConsumeOct</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>ac41815981c3918d05b0e33547df965c4</anchor>
      <arglist>(TInteger &amp;result, NumberFormat *numberFormat=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API bool</type>
      <name>ConsumeFloat</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>aa4787a8202a8d845cc8f2bebcc3c101c</anchor>
      <arglist>(double &amp;result, NumberFormat *numberFormat=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>Substring &amp;</type>
      <name>Split</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>ad1635e6b81da4d6af0b197641b4f0179</anchor>
      <arglist>(integer position, Substring &amp;target, integer separatorWidth=0, bool trim=false)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALIB_API bool</type>
      <name>consumeDecDigitsImpl</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>a756b0256b0fbcf7aec80d7c2722f30c4</anchor>
      <arglist>(uint64_t &amp;result)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALIB_API bool</type>
      <name>consumeIntImpl</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>af1dbf5588e1ee580b73e18f5d69ccfe0</anchor>
      <arglist>(int64_t &amp;result, NumberFormat *numberFormat)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALIB_API bool</type>
      <name>consumeDecImpl</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>aa2b733a44927efdfcecf95c62023835f</anchor>
      <arglist>(uint64_t &amp;result, NumberFormat *numberFormat)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALIB_API bool</type>
      <name>consumeBinImpl</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>a664b047bdcd3364e4840b1b858ca5af7</anchor>
      <arglist>(uint64_t &amp;result, NumberFormat *numberFormat)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALIB_API bool</type>
      <name>consumeHexImpl</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>a9a9decceb6a35bdaa19278420ae761c0</anchor>
      <arglist>(uint64_t &amp;result, NumberFormat *numberFormat)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALIB_API bool</type>
      <name>consumeOctImpl</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1Substring.html</anchorfile>
      <anchor>a264195f3cc0f789014d4e2ac4c7b1f3a</anchor>
      <arglist>(uint64_t &amp;result, NumberFormat *numberFormat)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::system::System</name>
    <filename>classaworx_1_1lib_1_1system_1_1System.html</filename>
    <base>aworx::lib::lang::Library</base>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classaworx_1_1lib_1_1system_1_1System.html</anchorfile>
      <anchor>a0f7439457156e6270dfd3ccfd07e1ea1</anchor>
      <arglist>(Phases phase) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>terminationCleanUp</name>
      <anchorfile>classaworx_1_1lib_1_1system_1_1System.html</anchorfile>
      <anchor>a7f9483d9dee8eaaeae3831a8bb40731e</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::T_Apply</name>
    <filename>structaworx_1_1lib_1_1strings_1_1T__Apply.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static ALIB_WARNINGS_ALLOW_TEMPLATE_META_PROGRAMMING integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1T__Apply.html</anchorfile>
      <anchor>ab466a57c1c46b30bf0fed41d75e97999</anchor>
      <arglist>(AString &amp;target, const TApplicable &amp;src)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::applyto::T_Apply&lt; bool &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01bool_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static ALIB_API integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01bool_01_4.html</anchorfile>
      <anchor>a1289be6fdd2d4e53b614b35405e50460</anchor>
      <arglist>(AString &amp;target, bool &amp;b)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::applyto::T_Apply&lt; char * &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01char_01_5_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01char_01_5_01_4.html</anchorfile>
      <anchor>a3afb70f6f1ad58ed9b5676af90b7ac43</anchor>
      <arglist>(AString &amp;target, const char *src)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::applyto::T_Apply&lt; char16_t * &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01char16__t_01_5_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01char16__t_01_5_01_4.html</anchorfile>
      <anchor>a3bd4401f1821c065ef88d0e3963eb912</anchor>
      <arglist>(AString &amp;target, const char16_t *src)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::applyto::T_Apply&lt; char32_t * &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01char32__t_01_5_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01char32__t_01_5_01_4.html</anchorfile>
      <anchor>a33eff64458b5a7653d46d467157040cc</anchor>
      <arglist>(AString &amp;target, const char32_t *src)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::applyto::T_Apply&lt; double &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01double_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01double_01_4.html</anchorfile>
      <anchor>a6a2b637ed880364f463c47313672bd78</anchor>
      <arglist>(AString &amp;target, double &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::applyto::T_Apply&lt; Enum &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01Enum_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01Enum_01_4.html</anchorfile>
      <anchor>a1523a25daaabdefa2aba52173337678f</anchor>
      <arglist>(AString &amp;target, const aworx::lib::lang::Enum &amp;src)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::applyto::T_Apply&lt; float &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01float_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01float_01_4.html</anchorfile>
      <anchor>a20c8e16c258322efd7ff097fc79075d9</anchor>
      <arglist>(AString &amp;target, float &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::applyto::T_Apply&lt; Format &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01Format_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static ALIB_API integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01Format_01_4.html</anchorfile>
      <anchor>a0f8137ded41eddc92d4a7168f8cd14fd</anchor>
      <arglist>(AString &amp;target, const Format &amp;fmt)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::applyto::T_Apply&lt; Format::Bin &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01Format_1_1Bin_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static ALIB_API integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01Format_1_1Bin_01_4.html</anchorfile>
      <anchor>aa84461a438f3efa770f6af32f097bf77</anchor>
      <arglist>(AString &amp;target, const Format::Bin &amp;fmt)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::applyto::T_Apply&lt; Format::Escape &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01Format_1_1Escape_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static ALIB_API integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01Format_1_1Escape_01_4.html</anchorfile>
      <anchor>ad0c18f046541dc7d10c6d1b8a63d0dcd</anchor>
      <arglist>(AString &amp;target, const Format::Escape &amp;field)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::applyto::T_Apply&lt; Format::Field &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01Format_1_1Field_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static ALIB_API integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01Format_1_1Field_01_4.html</anchorfile>
      <anchor>afe3ffddb3def86b8bfa004ec9ce3c059</anchor>
      <arglist>(AString &amp;target, const Format::Field &amp;field)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::applyto::T_Apply&lt; Format::Hex &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01Format_1_1Hex_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static ALIB_API integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01Format_1_1Hex_01_4.html</anchorfile>
      <anchor>aac3b9e0cf102ea4d2fa78926910cf4f0</anchor>
      <arglist>(AString &amp;target, const Format::Hex &amp;fmt)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::applyto::T_Apply&lt; Format::Oct &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01Format_1_1Oct_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static ALIB_API integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01Format_1_1Oct_01_4.html</anchorfile>
      <anchor>afbff72f22e417da43abfe42fee6fb504</anchor>
      <arglist>(AString &amp;target, const Format::Oct &amp;fmt)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::applyto::T_Apply&lt; Format::Tab &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01Format_1_1Tab_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static ALIB_API integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01Format_1_1Tab_01_4.html</anchorfile>
      <anchor>ae4274cf68ed797604ba1081f4e38bd06</anchor>
      <arglist>(AString &amp;target, const Format::Tab &amp;tab)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::applyto::T_Apply&lt; int16_t &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01int16__t_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01int16__t_01_4.html</anchorfile>
      <anchor>a112cf23f33aae2c7ccd2e5589cf6f06d</anchor>
      <arglist>(AString &amp;target, int16_t &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::applyto::T_Apply&lt; int32_t &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01int32__t_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01int32__t_01_4.html</anchorfile>
      <anchor>a305a16317da07f6441231243afe6a48d</anchor>
      <arglist>(AString &amp;target, int32_t &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::applyto::T_Apply&lt; int64_t &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01int64__t_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01int64__t_01_4.html</anchorfile>
      <anchor>a1e4a7454bc36b923cf42541ee4824836</anchor>
      <arglist>(AString &amp;target, int64_t &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::applyto::T_Apply&lt; int8_t &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01int8__t_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01int8__t_01_4.html</anchorfile>
      <anchor>ae1a4ae59c03e6bca87e1ada177787b98</anchor>
      <arglist>(AString &amp;target, int8_t &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::applyto::T_Apply&lt; intGap_t &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01intGap__t_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01intGap__t_01_4.html</anchorfile>
      <anchor>a8ac4bbe312b32290841441802acef493</anchor>
      <arglist>(AString &amp;target, intGap_t &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::applyto::T_Apply&lt; lib::boxing::Box &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01lib_1_1boxing_1_1Box_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01lib_1_1boxing_1_1Box_01_4.html</anchorfile>
      <anchor>aeb6edd5615342c221c953ea920dfaa44</anchor>
      <arglist>(AString &amp;target, const lib::boxing::Box &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::thirdparty::alox::T_Apply&lt; lox::core::Logger &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1thirdparty_1_1alox_1_1T__Apply_3_01lox_1_1core_1_1Logger_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1thirdparty_1_1alox_1_1T__Apply_3_01lox_1_1core_1_1Logger_01_4.html</anchorfile>
      <anchor>a0653bf8d08ab3f81b8cd62d97eebc898</anchor>
      <arglist>(AString &amp;target, const lox::core::Logger &amp;logger)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::thirdparty::qt::T_Apply&lt; QByteArray &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1thirdparty_1_1qt_1_1T__Apply_3_01QByteArray_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1thirdparty_1_1qt_1_1T__Apply_3_01QByteArray_01_4.html</anchorfile>
      <anchor>ac86a8a857b815a33c6bbebf7c6d715b3</anchor>
      <arglist>(AString &amp;target, const QByteArray &amp;src)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::thirdparty::qt::T_Apply&lt; QChar &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1thirdparty_1_1qt_1_1T__Apply_3_01QChar_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1thirdparty_1_1qt_1_1T__Apply_3_01QChar_01_4.html</anchorfile>
      <anchor>a578e9414c966a3b2aa8581380ee73a82</anchor>
      <arglist>(AString &amp;target, const QChar &amp;src)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::thirdparty::qt::T_Apply&lt; QString &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1thirdparty_1_1qt_1_1T__Apply_3_01QString_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1thirdparty_1_1qt_1_1T__Apply_3_01QString_01_4.html</anchorfile>
      <anchor>a85a98fc91d2d47673672edb7debc4f62</anchor>
      <arglist>(AString &amp;target, const QString &amp;src)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::thirdparty::qt::T_Apply&lt; QVector&lt; uint &gt; &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1thirdparty_1_1qt_1_1T__Apply_3_01QVector_3_01uint_01_4_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1thirdparty_1_1qt_1_1T__Apply_3_01QVector_3_01uint_01_4_01_4.html</anchorfile>
      <anchor>ac84eee8c73b31ae1dd36af6ea5c30e31</anchor>
      <arglist>(AString &amp;target, const QVector&lt; uint &gt; &amp;src)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::applyto::T_Apply&lt; std::type_info &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01std_1_1type__info_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static ALIB_API integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01std_1_1type__info_01_4.html</anchorfile>
      <anchor>a773026098c19636fadfa4394e4935dad</anchor>
      <arglist>(AString &amp;target, const std::type_info &amp;type)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::thirdparty::std::T_Apply&lt; std::u16string &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1thirdparty_1_1std_1_1T__Apply_3_01std_1_1u16string_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1thirdparty_1_1std_1_1T__Apply_3_01std_1_1u16string_01_4.html</anchorfile>
      <anchor>a8c465e6077fbd14f3ecfbe0d08197c4e</anchor>
      <arglist>(AString &amp;target, const std::u16string &amp;src)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::thirdparty::std::T_Apply&lt; std::u32string &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1thirdparty_1_1std_1_1T__Apply_3_01std_1_1u32string_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1thirdparty_1_1std_1_1T__Apply_3_01std_1_1u32string_01_4.html</anchorfile>
      <anchor>a7ecf3ae3e3e585545b20cda4f843777b</anchor>
      <arglist>(AString &amp;target, const std::u32string &amp;src)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::thirdparty::std::T_Apply&lt; std::vector&lt; char16_t &gt; &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1thirdparty_1_1std_1_1T__Apply_3_01std_1_1vector_3_01char16__t_01_4_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1thirdparty_1_1std_1_1T__Apply_3_01std_1_1vector_3_01char16__t_01_4_01_4.html</anchorfile>
      <anchor>a3d19cf92ef8988a07b8a5fbc22bd59ac</anchor>
      <arglist>(AString &amp;target, const std::vector&lt; char16_t &gt; &amp;src)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::thirdparty::std::T_Apply&lt; std::vector&lt; char32_t &gt; &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1thirdparty_1_1std_1_1T__Apply_3_01std_1_1vector_3_01char32__t_01_4_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1thirdparty_1_1std_1_1T__Apply_3_01std_1_1vector_3_01char32__t_01_4_01_4.html</anchorfile>
      <anchor>a034583e15408a03822a07c63754ffcd9</anchor>
      <arglist>(AString &amp;target, const std::vector&lt; char32_t &gt; &amp;src)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::thirdparty::std::T_Apply&lt; std::vector&lt; wchar_t &gt; &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1thirdparty_1_1std_1_1T__Apply_3_01std_1_1vector_3_01wchar__t_01_4_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1thirdparty_1_1std_1_1T__Apply_3_01std_1_1vector_3_01wchar__t_01_4_01_4.html</anchorfile>
      <anchor>a3fef4b7b4bf2b76e2df9c067809f0275</anchor>
      <arglist>(AString &amp;target, const std::vector&lt; wchar_t &gt; &amp;src)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::thirdparty::std::T_Apply&lt; std::wstring &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1thirdparty_1_1std_1_1T__Apply_3_01std_1_1wstring_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1thirdparty_1_1std_1_1T__Apply_3_01std_1_1wstring_01_4.html</anchorfile>
      <anchor>a0946ff5bb20c4d9960ea92532d63440d</anchor>
      <arglist>(AString &amp;target, const std::wstring &amp;src)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::applyto::T_Apply&lt; TEnum &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01TEnum_01_4.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01TEnum_01_4.html</anchorfile>
      <anchor>a523e33f7ded0c5c771551655da3e10f6</anchor>
      <arglist>(AString &amp;target, TEnum src)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::applyto::T_Apply&lt; TEnumBitwise &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01TEnumBitwise_01_4.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01TEnumBitwise_01_4.html</anchorfile>
      <anchor>a523e33f7ded0c5c771551655da3e10f6</anchor>
      <arglist>(AString &amp;target, TEnum src)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::thirdparty::std::T_Apply&lt; thirdparty::std::ReadLineFromIStream &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1thirdparty_1_1std_1_1T__Apply_3_01thirdparty_1_1std_1_1ReadLineFromIStream_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static ALIB_API integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1thirdparty_1_1std_1_1T__Apply_3_01thirdparty_1_1std_1_1ReadLineFromIStream_01_4.html</anchorfile>
      <anchor>a517af587f04e53e77f875e5e51742e06</anchor>
      <arglist>(AString &amp;target, const thirdparty::std::ReadLineFromIStream &amp;reader)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::T_Apply&lt; typename format::PropertyFormatterMapApplicable&lt; TFormattable, TOptionEnum &gt; &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1T__Apply_3_01typename_01format_1_1PropertyFormatterMapApplicablc5158e90efaae83a3ef8d8bf26dccb21.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1T__Apply_3_01typename_01format_1_1PropertyFormatterMapApplicablc5158e90efaae83a3ef8d8bf26dccb21.html</anchorfile>
      <anchor>ae4cda1e939632a03eda07b6092d824d1</anchor>
      <arglist>(AString &amp;target, typename format::PropertyFormatterMapApplicable&lt; TFormattable, TOptionEnum &gt; &amp;src)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::applyto::T_Apply&lt; uint16_t &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01uint16__t_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01uint16__t_01_4.html</anchorfile>
      <anchor>af2341297630d1f086f4877baa59ebfa6</anchor>
      <arglist>(AString &amp;target, uint16_t &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::applyto::T_Apply&lt; uint32_t &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01uint32__t_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01uint32__t_01_4.html</anchorfile>
      <anchor>aa3c08ae1de49100f3cc9a4603b951ffd</anchor>
      <arglist>(AString &amp;target, uint32_t &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::applyto::T_Apply&lt; uint64_t &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01uint64__t_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01uint64__t_01_4.html</anchorfile>
      <anchor>a78c25f957fb4be59b6a3ce8a4da241e0</anchor>
      <arglist>(AString &amp;target, uint64_t &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::applyto::T_Apply&lt; uint8_t &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01uint8__t_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01uint8__t_01_4.html</anchorfile>
      <anchor>ae3f0797e3c9f1de1322332d90ab0ec69</anchor>
      <arglist>(AString &amp;target, uint8_t &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::applyto::T_Apply&lt; uintGap_t &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01uintGap__t_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01uintGap__t_01_4.html</anchorfile>
      <anchor>a04daed11b7e6096d18dd77d9b20c4bc5</anchor>
      <arglist>(AString &amp;target, uintGap_t &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::applyto::T_Apply&lt; wchar_t * &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01wchar__t_01_5_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Apply</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1applyto_1_1T__Apply_3_01wchar__t_01_5_01_4.html</anchorfile>
      <anchor>a45ceda0bc2ed4768c0f2d64803454899</anchor>
      <arglist>(AString &amp;target, const wchar_t *src)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::boxing::T_Boxing</name>
    <filename>structaworx_1_1lib_1_1boxing_1_1T__Boxing.html</filename>
    <templarg>TBoxable</templarg>
    <member kind="typedef">
      <type>TBoxable</type>
      <name>Type</name>
      <anchorfile>structaworx_1_1lib_1_1boxing_1_1T__Boxing.html</anchorfile>
      <anchor>a92442bdba7916947a2e91658a44f79db</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Boxing</name>
      <anchorfile>structaworx_1_1lib_1_1boxing_1_1T__Boxing.html</anchorfile>
      <anchor>adfa6c5fa593667614c5c9346247b4c1d</anchor>
      <arglist>(Box &amp;box, TBoxable const &amp;value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr bool</type>
      <name>HasCustomBoxing</name>
      <anchorfile>structaworx_1_1lib_1_1boxing_1_1T__Boxing.html</anchorfile>
      <anchor>aefb0e0f2f3b71d443b0f590698407367</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr bool</type>
      <name>HasCustomUnboxing</name>
      <anchorfile>structaworx_1_1lib_1_1boxing_1_1T__Boxing.html</anchorfile>
      <anchor>a7c300d564618b287a95515308e0dc5fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr bool</type>
      <name>IsArray</name>
      <anchorfile>structaworx_1_1lib_1_1boxing_1_1T__Boxing.html</anchorfile>
      <anchor>afd706fcc8338f6c74664e37ff9c672bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr bool</type>
      <name>IsUnboxable</name>
      <anchorfile>structaworx_1_1lib_1_1boxing_1_1T__Boxing.html</anchorfile>
      <anchor>a480f352bde129b4856313c6b2c77eafa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TBoxable &amp;</type>
      <name>Unboxing</name>
      <anchorfile>structaworx_1_1lib_1_1boxing_1_1T__Boxing.html</anchorfile>
      <anchor>a5dfd7dc3e9e72651fd2441d71bc56163</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::boxing::T_Boxing&lt; aworx::lib::strings::PreallocatedString&lt; TCapacity &gt; &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1boxing_1_1T__Boxing_3_01aworx_1_1lib_1_1strings_1_1PreallocatedString_3_01TCapacity_01_4_01_4.html</filename>
    <templarg>TCapacity</templarg>
    <member kind="typedef">
      <type>char</type>
      <name>Type</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1boxing_1_1T__Boxing_3_01aworx_1_1lib_1_1strings_1_1PreallocatedString_3_01TCapacity_01_4_01_4.html</anchorfile>
      <anchor>aaa3c5c7c352ef985ca5921bd23c301a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Boxing</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1boxing_1_1T__Boxing_3_01aworx_1_1lib_1_1strings_1_1PreallocatedString_3_01TCapacity_01_4_01_4.html</anchorfile>
      <anchor>a64eed1fdb5b7e0fd8f22c8c1bc089492</anchor>
      <arglist>(Box &amp;box, const strings::PreallocatedString&lt; TCapacity &gt; &amp;value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr bool</type>
      <name>HasCustomBoxing</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1boxing_1_1T__Boxing_3_01aworx_1_1lib_1_1strings_1_1PreallocatedString_3_01TCapacity_01_4_01_4.html</anchorfile>
      <anchor>aefb0e0f2f3b71d443b0f590698407367</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr bool</type>
      <name>HasCustomUnboxing</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1boxing_1_1T__Boxing_3_01aworx_1_1lib_1_1strings_1_1PreallocatedString_3_01TCapacity_01_4_01_4.html</anchorfile>
      <anchor>a7c300d564618b287a95515308e0dc5fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr bool</type>
      <name>IsArray</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1boxing_1_1T__Boxing_3_01aworx_1_1lib_1_1strings_1_1PreallocatedString_3_01TCapacity_01_4_01_4.html</anchorfile>
      <anchor>afd706fcc8338f6c74664e37ff9c672bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr bool</type>
      <name>IsUnboxable</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1boxing_1_1T__Boxing_3_01aworx_1_1lib_1_1strings_1_1PreallocatedString_3_01TCapacity_01_4_01_4.html</anchorfile>
      <anchor>a480f352bde129b4856313c6b2c77eafa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Unboxing</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1boxing_1_1T__Boxing_3_01aworx_1_1lib_1_1strings_1_1PreallocatedString_3_01TCapacity_01_4_01_4.html</anchorfile>
      <anchor>a9e6336f15a96d454d61e39e98f22fc3a</anchor>
      <arglist>(const Box &amp;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::boxing::T_Boxing&lt; BoxedAs&lt; TBoxed &gt; &gt;</name>
    <filename>structaworx_1_1lib_1_1boxing_1_1T__Boxing_3_01BoxedAs_3_01TBoxed_01_4_01_4.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>BoxedAs&lt; TBoxed &gt;</type>
      <name>Type</name>
      <anchorfile>structaworx_1_1lib_1_1boxing_1_1T__Boxing_3_01BoxedAs_3_01TBoxed_01_4_01_4.html</anchorfile>
      <anchor>a90aaaf70952757dd5a21920f7377e4eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Boxing</name>
      <anchorfile>structaworx_1_1lib_1_1boxing_1_1T__Boxing_3_01BoxedAs_3_01TBoxed_01_4_01_4.html</anchorfile>
      <anchor>ac47c3469a29f783fd1dbf60294b9ed40</anchor>
      <arglist>(Box &amp;, const BoxedAs&lt; TBoxed &gt; &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr bool</type>
      <name>HasCustomBoxing</name>
      <anchorfile>structaworx_1_1lib_1_1boxing_1_1T__Boxing_3_01BoxedAs_3_01TBoxed_01_4_01_4.html</anchorfile>
      <anchor>aefb0e0f2f3b71d443b0f590698407367</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr bool</type>
      <name>HasCustomUnboxing</name>
      <anchorfile>structaworx_1_1lib_1_1boxing_1_1T__Boxing_3_01BoxedAs_3_01TBoxed_01_4_01_4.html</anchorfile>
      <anchor>a7c300d564618b287a95515308e0dc5fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr bool</type>
      <name>IsArray</name>
      <anchorfile>structaworx_1_1lib_1_1boxing_1_1T__Boxing_3_01BoxedAs_3_01TBoxed_01_4_01_4.html</anchorfile>
      <anchor>afd706fcc8338f6c74664e37ff9c672bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr bool</type>
      <name>IsUnboxable</name>
      <anchorfile>structaworx_1_1lib_1_1boxing_1_1T__Boxing_3_01BoxedAs_3_01TBoxed_01_4_01_4.html</anchorfile>
      <anchor>a480f352bde129b4856313c6b2c77eafa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static BoxedAs&lt; TBoxed &gt;</type>
      <name>Unboxing</name>
      <anchorfile>structaworx_1_1lib_1_1boxing_1_1T__Boxing_3_01BoxedAs_3_01TBoxed_01_4_01_4.html</anchorfile>
      <anchor>a85d958630c8c99139d447d639dc5f5e4</anchor>
      <arglist>(const Box &amp;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::boxing::T_Boxing&lt; std::vector&lt; TElem &gt; &gt;</name>
    <filename>structaworx_1_1lib_1_1boxing_1_1T__Boxing_3_01std_1_1vector_3_01TElem_01_4_01_4.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>TElem</type>
      <name>Type</name>
      <anchorfile>structaworx_1_1lib_1_1boxing_1_1T__Boxing_3_01std_1_1vector_3_01TElem_01_4_01_4.html</anchorfile>
      <anchor>a6cd8a57ae15b5711e0a70fc1e4fcbb14</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Boxing</name>
      <anchorfile>structaworx_1_1lib_1_1boxing_1_1T__Boxing_3_01std_1_1vector_3_01TElem_01_4_01_4.html</anchorfile>
      <anchor>a47ff7f9b5a258cc847db62dee17efe5f</anchor>
      <arglist>(Box &amp;box, const std::vector&lt; TElem &gt; &amp;value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr bool</type>
      <name>HasCustomBoxing</name>
      <anchorfile>structaworx_1_1lib_1_1boxing_1_1T__Boxing_3_01std_1_1vector_3_01TElem_01_4_01_4.html</anchorfile>
      <anchor>aefb0e0f2f3b71d443b0f590698407367</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr bool</type>
      <name>HasCustomUnboxing</name>
      <anchorfile>structaworx_1_1lib_1_1boxing_1_1T__Boxing_3_01std_1_1vector_3_01TElem_01_4_01_4.html</anchorfile>
      <anchor>a7c300d564618b287a95515308e0dc5fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr bool</type>
      <name>IsArray</name>
      <anchorfile>structaworx_1_1lib_1_1boxing_1_1T__Boxing_3_01std_1_1vector_3_01TElem_01_4_01_4.html</anchorfile>
      <anchor>afd706fcc8338f6c74664e37ff9c672bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr bool</type>
      <name>IsUnboxable</name>
      <anchorfile>structaworx_1_1lib_1_1boxing_1_1T__Boxing_3_01std_1_1vector_3_01TElem_01_4_01_4.html</anchorfile>
      <anchor>a480f352bde129b4856313c6b2c77eafa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; TElem &gt;</type>
      <name>Unboxing</name>
      <anchorfile>structaworx_1_1lib_1_1boxing_1_1T__Boxing_3_01std_1_1vector_3_01TElem_01_4_01_4.html</anchorfile>
      <anchor>af7839b313fc67890cb0f500252cf69a8</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::boxing::T_Boxing&lt; strings::StringLiteral&lt; TLength &gt; &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1boxing_1_1T__Boxing_3_01strings_1_1StringLiteral_3_01TLength_01_4_01_4.html</filename>
    <templarg>TLength</templarg>
    <member kind="typedef">
      <type>char</type>
      <name>Type</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1boxing_1_1T__Boxing_3_01strings_1_1StringLiteral_3_01TLength_01_4_01_4.html</anchorfile>
      <anchor>aaa3c5c7c352ef985ca5921bd23c301a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Boxing</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1boxing_1_1T__Boxing_3_01strings_1_1StringLiteral_3_01TLength_01_4_01_4.html</anchorfile>
      <anchor>a80b8e7837b31a0081adb7fccc9871cc7</anchor>
      <arglist>(Box &amp;box, const strings::StringLiteral&lt; TLength &gt; &amp;value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr bool</type>
      <name>HasCustomBoxing</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1boxing_1_1T__Boxing_3_01strings_1_1StringLiteral_3_01TLength_01_4_01_4.html</anchorfile>
      <anchor>aefb0e0f2f3b71d443b0f590698407367</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr bool</type>
      <name>HasCustomUnboxing</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1boxing_1_1T__Boxing_3_01strings_1_1StringLiteral_3_01TLength_01_4_01_4.html</anchorfile>
      <anchor>a7c300d564618b287a95515308e0dc5fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr bool</type>
      <name>IsArray</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1boxing_1_1T__Boxing_3_01strings_1_1StringLiteral_3_01TLength_01_4_01_4.html</anchorfile>
      <anchor>afd706fcc8338f6c74664e37ff9c672bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr bool</type>
      <name>IsUnboxable</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1boxing_1_1T__Boxing_3_01strings_1_1StringLiteral_3_01TLength_01_4_01_4.html</anchorfile>
      <anchor>a480f352bde129b4856313c6b2c77eafa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Unboxing</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1boxing_1_1T__Boxing_3_01strings_1_1StringLiteral_3_01TLength_01_4_01_4.html</anchorfile>
      <anchor>aa1ff6388131ed3f82f63fcad5a478a69</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::lang::T_EnumIsArithmetical</name>
    <filename>structaworx_1_1lib_1_1lang_1_1T__EnumIsArithmetical.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::lang::T_EnumIsBitwise</name>
    <filename>structaworx_1_1lib_1_1lang_1_1T__EnumIsBitwise.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::lang::T_EnumIsIteratable</name>
    <filename>structaworx_1_1lib_1_1lang_1_1T__EnumIsIteratable.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="variable" static="yes">
      <type>static constexpr TEnum</type>
      <name>Begin</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1T__EnumIsIteratable.html</anchorfile>
      <anchor>a65226c6f9f3f79a49956165dd72b2b5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr TEnum</type>
      <name>End</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1T__EnumIsIteratable.html</anchorfile>
      <anchor>aa08bfb8055a6a09ad8cbe1f7466a73a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::lang::T_EnumMetaDataDecl</name>
    <filename>structaworx_1_1lib_1_1lang_1_1T__EnumMetaDataDecl.html</filename>
    <templarg>TEnum</templarg>
    <templarg>TCheckEnum</templarg>
    <member kind="typedef">
      <type>void</type>
      <name>TTuple</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1T__EnumMetaDataDecl.html</anchorfile>
      <anchor>a192f961ba0493883f37bd7b662fa3ecc</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="structaworx_1_1lib_1_1lang_1_1T__EnumMetaDataDecl">anchor_T_EnumMetaDataDecl_read_enum</docanchor>
    <docanchor file="structaworx_1_1lib_1_1lang_1_1T__EnumMetaDataDecl">anchor_T_EnumMetaDataDecl_multiple_entries</docanchor>
  </compound>
  <compound kind="class">
    <name>T_EnumMetaDataDecl&lt; TEnum &gt;</name>
    <filename>structaworx_1_1lib_1_1lang_1_1T__EnumMetaDataDecl.html</filename>
    <member kind="typedef">
      <type>void</type>
      <name>TTuple</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1T__EnumMetaDataDecl.html</anchorfile>
      <anchor>a192f961ba0493883f37bd7b662fa3ecc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::lang::T_EnumMetaDataDeclReadWrite</name>
    <filename>structaworx_1_1lib_1_1lang_1_1T__EnumMetaDataDeclReadWrite.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="variable" static="yes">
      <type>static constexpr size_t</type>
      <name>MinParseLengthIndex</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1T__EnumMetaDataDeclReadWrite.html</anchorfile>
      <anchor>ad6a86b6d7bcbf4f92a37082cc313b64b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr size_t</type>
      <name>NameIndex</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1T__EnumMetaDataDeclReadWrite.html</anchorfile>
      <anchor>aa106a39a48f47f7d90a4c974a4a39115</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::lang::T_EnumMetaDataPreAndPostFix</name>
    <filename>structaworx_1_1lib_1_1lang_1_1T__EnumMetaDataPreAndPostFix.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static constexpr String</type>
      <name>Postfix</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1T__EnumMetaDataPreAndPostFix.html</anchorfile>
      <anchor>a2c11a401d4435a3f2504e00c88594a0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr String</type>
      <name>Prefix</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1T__EnumMetaDataPreAndPostFix.html</anchorfile>
      <anchor>aad1cd5c878430ffdc13127f253cdc9f9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::lang::T_EnumMetaDataSpecification</name>
    <filename>structaworx_1_1lib_1_1lang_1_1T__EnumMetaDataSpecification.html</filename>
    <templarg>TEMD</templarg>
    <member kind="typedef">
      <type>std::tuple&lt; void &gt;</type>
      <name>TTuple</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1T__EnumMetaDataSpecification.html</anchorfile>
      <anchor>a50e855658b9f9deea01b9ed0cbf4add5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>LoadTable</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1T__EnumMetaDataSpecification.html</anchorfile>
      <anchor>ab617fa9828dcc178fc7767351cc288f0</anchor>
      <arglist>(void *table, aworx::Library &amp;library, const aworx::String &amp;name)</arglist>
    </member>
    <docanchor file="structaworx_1_1lib_1_1lang_1_1T__EnumMetaDataSpecification">cpp_alib_lang_T_EnumMetaDataSpecification_exception_sample</docanchor>
  </compound>
  <compound kind="class">
    <name>T_EnumMetaDataSpecification&lt; VariableDecl &gt;</name>
    <filename>structaworx_1_1lib_1_1lang_1_1T__EnumMetaDataSpecification.html</filename>
    <member kind="typedef">
      <type>std::tuple&lt; void &gt;</type>
      <name>TTuple</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1T__EnumMetaDataSpecification.html</anchorfile>
      <anchor>a50e855658b9f9deea01b9ed0cbf4add5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>LoadTable</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1T__EnumMetaDataSpecification.html</anchorfile>
      <anchor>ab617fa9828dcc178fc7767351cc288f0</anchor>
      <arglist>(void *table, aworx::Library &amp;library, const aworx::String &amp;name)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::T_IsTerminatable</name>
    <filename>structaworx_1_1lib_1_1strings_1_1T__IsTerminatable.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::T_IsTerminatable&lt; AString &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1T__IsTerminatable_3_01AString_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::T_IsTerminatable&lt; PreallocatedString&lt; TCapacity &gt; &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1T__IsTerminatable_3_01PreallocatedString_3_01TCapacity_01_4_01_4.html</filename>
    <templarg>TCapacity</templarg>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::lang::T_Resourced</name>
    <filename>structaworx_1_1lib_1_1lang_1_1T__Resourced.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static ALIB_WARNINGS_ALLOW_TEMPLATE_META_PROGRAMMING Library &amp;</type>
      <name>Lib</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1T__Resourced.html</anchorfile>
      <anchor>aba2b7daf64063835c032df4a4e94129a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr String</type>
      <name>Name</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1T__Resourced.html</anchorfile>
      <anchor>aecde0a77a45b16902eecb1542b1c0294</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::T_String</name>
    <filename>structaworx_1_1lib_1_1strings_1_1T__String.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static constexpr const char *</type>
      <name>Buffer</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1T__String.html</anchorfile>
      <anchor>ad858e0a7089a7435b863db9f6323c38e</anchor>
      <arglist>(const TStringLike &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Length</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1T__String.html</anchorfile>
      <anchor>a7a3a3e3753e42aa712e0ae1049a0cc6e</anchor>
      <arglist>(const TStringLike &amp;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::T_String&lt; char * &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1T__String_3_01char_01_5_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static constexpr const char *</type>
      <name>Buffer</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1T__String_3_01char_01_5_01_4.html</anchorfile>
      <anchor>a2506d4b2b7f2b2a6b9d155365a732085</anchor>
      <arglist>(char *const &amp;src)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Length</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1T__String_3_01char_01_5_01_4.html</anchorfile>
      <anchor>a3e8173a03085940f8a7715a312eeac90</anchor>
      <arglist>(char *const &amp;src)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::T_String&lt; char const * &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1T__String_3_01char_01const_01_5_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static constexpr const char *</type>
      <name>Buffer</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1T__String_3_01char_01const_01_5_01_4.html</anchorfile>
      <anchor>aba55ee43131e828a902200a408684c02</anchor>
      <arglist>(const char *const &amp;src)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Length</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1T__String_3_01char_01const_01_5_01_4.html</anchorfile>
      <anchor>aea2c3f44edcdc297472ff0d32099ca61</anchor>
      <arglist>(const char *const &amp;src)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::thirdparty::qt::T_String&lt; QByteArray &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1thirdparty_1_1qt_1_1T__String_3_01QByteArray_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>Buffer</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1thirdparty_1_1qt_1_1T__String_3_01QByteArray_01_4.html</anchorfile>
      <anchor>a86fa6ae5d53025d27912ccc80867eb38</anchor>
      <arglist>(const QByteArray &amp;src)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Length</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1thirdparty_1_1qt_1_1T__String_3_01QByteArray_01_4.html</anchorfile>
      <anchor>a121b78736cc7a5532c6af64089876a50</anchor>
      <arglist>(const QByteArray &amp;src)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::thirdparty::qt::T_String&lt; QLatin1String &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1thirdparty_1_1qt_1_1T__String_3_01QLatin1String_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>Buffer</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1thirdparty_1_1qt_1_1T__String_3_01QLatin1String_01_4.html</anchorfile>
      <anchor>a83cfc89426859b0cf90265b8b75c3034</anchor>
      <arglist>(const QLatin1String &amp;src)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Length</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1thirdparty_1_1qt_1_1T__String_3_01QLatin1String_01_4.html</anchorfile>
      <anchor>a38317e41992c25997df970546991c6d7</anchor>
      <arglist>(const QLatin1String &amp;src)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::thirdparty::std::T_String&lt; std::string &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1thirdparty_1_1std_1_1T__String_3_01std_1_1string_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>Buffer</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1thirdparty_1_1std_1_1T__String_3_01std_1_1string_01_4.html</anchorfile>
      <anchor>a3ae10df960ba77593fb269c1aaeb5199</anchor>
      <arglist>(const std::string &amp;src)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Length</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1thirdparty_1_1std_1_1T__String_3_01std_1_1string_01_4.html</anchorfile>
      <anchor>ad4c08f3669437a5c3d1a2b7dbacd5fb4</anchor>
      <arglist>(const std::string &amp;src)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::thirdparty::std::T_String&lt; std::vector&lt; char &gt; &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1thirdparty_1_1std_1_1T__String_3_01std_1_1vector_3_01char_01_4_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>Buffer</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1thirdparty_1_1std_1_1T__String_3_01std_1_1vector_3_01char_01_4_01_4.html</anchorfile>
      <anchor>a168859a251d997090a5d9927ec706578</anchor>
      <arglist>(const std::vector&lt; char &gt; &amp;src)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static integer</type>
      <name>Length</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1thirdparty_1_1std_1_1T__String_3_01std_1_1vector_3_01char_01_4_01_4.html</anchorfile>
      <anchor>a0d9307ba05b2703579caac512282c416</anchor>
      <arglist>(const std::vector&lt; char &gt; &amp;src)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::T_StringLiteral</name>
    <filename>structaworx_1_1lib_1_1strings_1_1T__StringLiteral.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static constexpr char *</type>
      <name>Buffer</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1T__StringLiteral.html</anchorfile>
      <anchor>ac5e1824b6fd5ab6215388af5945cc89c</anchor>
      <arglist>(const TLiteral &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr integer</type>
      <name>Length</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1T__StringLiteral.html</anchorfile>
      <anchor>a93903ff8410bf376630203d5aa0da176</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::T_StringLiteral&lt; char[TCapacity]&gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1T__StringLiteral_3_01char[TCapacity]_4.html</filename>
    <templarg>TCapacity</templarg>
    <member kind="function" static="yes">
      <type>static constexpr const char *</type>
      <name>Buffer</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1T__StringLiteral_3_01char[TCapacity]_4.html</anchorfile>
      <anchor>acee7e4aed233c5c97dcb8561db3a4eac</anchor>
      <arglist>(char const (&amp;src) [TCapacity])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr integer</type>
      <name>Length</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1T__StringLiteral_3_01char[TCapacity]_4.html</anchorfile>
      <anchor>a93903ff8410bf376630203d5aa0da176</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::T_StringLiteral&lt; StringLiteral&lt; TLength &gt; &gt;</name>
    <filename>structaworx_1_1lib_1_1strings_1_1T__StringLiteral_3_01StringLiteral_3_01TLength_01_4_01_4.html</filename>
    <templarg>TLength</templarg>
    <member kind="function" static="yes">
      <type>static constexpr const char *</type>
      <name>Buffer</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1T__StringLiteral_3_01StringLiteral_3_01TLength_01_4_01_4.html</anchorfile>
      <anchor>a411bffbe1f97320b99644c202922a339</anchor>
      <arglist>(const StringLiteral&lt; TLength &gt; &amp;src)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr integer</type>
      <name>Length</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1T__StringLiteral_3_01StringLiteral_3_01TLength_01_4_01_4.html</anchorfile>
      <anchor>a93903ff8410bf376630203d5aa0da176</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::strings::Format::Tab</name>
    <filename>structaworx_1_1lib_1_1strings_1_1Format_1_1Tab.html</filename>
    <member kind="variable">
      <type>integer</type>
      <name>minPad</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1Format_1_1Tab.html</anchorfile>
      <anchor>a53bf679296cfbd89112cc4071f71968c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>integer</type>
      <name>reference</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1Format_1_1Tab.html</anchorfile>
      <anchor>aa96b8ed281f1d84f7cce437f14be130e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>tabChar</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1Format_1_1Tab.html</anchorfile>
      <anchor>afc97f451934a3418868537a2dd94a096</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>integer</type>
      <name>tabSize</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1Format_1_1Tab.html</anchorfile>
      <anchor>adf6cb4252ddaead79a0c636be41f969a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Tab</name>
      <anchorfile>structaworx_1_1lib_1_1strings_1_1Format_1_1Tab.html</anchorfile>
      <anchor>a47f5954a8e6167e233a92f6b38c16bad</anchor>
      <arglist>(integer size, integer referenceIdx=0, integer minPadChars=1, char fillChar=&apos; &apos;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lox::loggers::TextFileLogger</name>
    <filename>classaworx_1_1lox_1_1loggers_1_1TextFileLogger.html</filename>
    <base>aworx::lox::core::textlogger::PlainTextLogger</base>
    <member kind="variable">
      <type>aworx::AString</type>
      <name>FileName</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1TextFileLogger.html</anchorfile>
      <anchor>a15b92b72838ed16c47a44702bce981c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>hasIoError</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1TextFileLogger.html</anchorfile>
      <anchor>aef8156626509284bebb701bfd5a93699</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextFileLogger</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1TextFileLogger.html</anchorfile>
      <anchor>a064b89198d7a4138c32e0964ab620e2f</anchor>
      <arglist>(const aworx::String &amp;fileName, const aworx::String &amp;loggerName=nullptr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TextFileLogger</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1TextFileLogger.html</anchorfile>
      <anchor>accac5141ecc60e6bca547cceb61ef1ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>currentlyInMultiLineOp</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1TextFileLogger.html</anchorfile>
      <anchor>a79360590a52ab99fa5ca7bd3e679fef5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::ofstream *</type>
      <name>os</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1TextFileLogger.html</anchorfile>
      <anchor>abb9ed1102af33c2c129f3deb334ee2ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALIB_API void</type>
      <name>closeFile</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1TextFileLogger.html</anchorfile>
      <anchor>ab2ff17b940ae7aca4827d832ceeaeda4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ALIB_API integer</type>
      <name>logSubstring</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1TextFileLogger.html</anchorfile>
      <anchor>afe3923223ec9c1c1b5f77e5effcaca73</anchor>
      <arglist>(const String &amp;buffer, integer start, integer length)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ALIB_API bool</type>
      <name>notifyLogOp</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1TextFileLogger.html</anchorfile>
      <anchor>a883624bfdbedf434421f38c800cc61f5</anchor>
      <arglist>(lib::lang::Phase phase)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ALIB_API void</type>
      <name>notifyMultiLineOp</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1TextFileLogger.html</anchorfile>
      <anchor>ac82a297dd17b787031f6dab0f470383b</anchor>
      <arglist>(lib::lang::Phase phase)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALIB_API void</type>
      <name>openFile</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1TextFileLogger.html</anchorfile>
      <anchor>acd0224d6aee829fc45210f977168abb4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lox::core::textlogger::TextLogger</name>
    <filename>classaworx_1_1lox_1_1core_1_1textlogger_1_1TextLogger.html</filename>
    <base>aworx::lox::core::Logger</base>
    <member kind="enumeration">
      <type></type>
      <name>LightColorUsage</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1TextLogger.html</anchorfile>
      <anchor>a2c0a0e233e4cc72e4c5655d595dde836</anchor>
      <arglist></arglist>
      <enumvalue file="classaworx_1_1lox_1_1core_1_1textlogger_1_1TextLogger.html" anchor="a2c0a0e233e4cc72e4c5655d595dde836a06b9281e396db002010bde1de57262eb">Auto</enumvalue>
      <enumvalue file="classaworx_1_1lox_1_1core_1_1textlogger_1_1TextLogger.html" anchor="a2c0a0e233e4cc72e4c5655d595dde836a6e7b34fa59e1bd229b207892956dc41c">Never</enumvalue>
      <enumvalue file="classaworx_1_1lox_1_1core_1_1textlogger_1_1TextLogger.html" anchor="a2c0a0e233e4cc72e4c5655d595dde836a45bd1d5b32931106efbf1a82fe6a732f">Foreground</enumvalue>
      <enumvalue file="classaworx_1_1lox_1_1core_1_1textlogger_1_1TextLogger.html" anchor="a2c0a0e233e4cc72e4c5655d595dde836aa9ded1e5ce5d75814730bb4caaf49419">Background</enumvalue>
    </member>
    <member kind="variable">
      <type>lib::strings::util::AutoSizes</type>
      <name>AutoSizes</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1TextLogger.html</anchorfile>
      <anchor>a55fd171375a9be6d080651799b721bea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ObjectConverter *</type>
      <name>Converter</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1TextLogger.html</anchorfile>
      <anchor>a6564592f53dbbb610061901f7f7aa09a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String16</type>
      <name>FmtMsgSuffix</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1TextLogger.html</anchorfile>
      <anchor>a467ad111941b55ca229349b2565ea09c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String64</type>
      <name>FmtMultiLineMsgHeadline</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1TextLogger.html</anchorfile>
      <anchor>a02684b9492b7e0f1626be9f7079b4538</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String16</type>
      <name>FmtMultiLinePrefix</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1TextLogger.html</anchorfile>
      <anchor>a6a0f47a82a9e2018d42acdc864eaeb76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String16</type>
      <name>FmtMultiLineSuffix</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1TextLogger.html</anchorfile>
      <anchor>a32162368e4bed2b7fa666fd77a62a245</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>textlogger::MetaInfo *</type>
      <name>MetaInfo</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1TextLogger.html</anchorfile>
      <anchor>a44ec0d8f6ee263114e758dd8d4cd8301</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AString</type>
      <name>MultiLineDelimiter</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1TextLogger.html</anchorfile>
      <anchor>a4b152755ce9a00713a680ee56a07112b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String16</type>
      <name>MultiLineDelimiterRepl</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1TextLogger.html</anchorfile>
      <anchor>a1c310c98162c46f37a1935c70f8edb70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>MultiLineMsgMode</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1TextLogger.html</anchorfile>
      <anchor>a95ea94dee572eaac760d028ddcf3cf65</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALOX_API</type>
      <name>~TextLogger</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1TextLogger.html</anchorfile>
      <anchor>aaa18c56d081d6d2bce737e506613fc03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API int</type>
      <name>AddAcquirer</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1TextLogger.html</anchorfile>
      <anchor>ac097a5b90ddc055cbf44b6a87b8cfda6</anchor>
      <arglist>(ThreadLock *newAcquirer)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALOX_API void</type>
      <name>ClearReplacements</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1TextLogger.html</anchorfile>
      <anchor>a17d8436509bfd6902d02a1a7628c9708</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALOX_API void</type>
      <name>Log</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1TextLogger.html</anchorfile>
      <anchor>a62a1627197acfbf5e05bfcc533086b9d</anchor>
      <arglist>(Domain &amp;domain, Verbosity verbosity, Boxes &amp;logables, ScopeInfo &amp;scope)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API int</type>
      <name>RemoveAcquirer</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1TextLogger.html</anchorfile>
      <anchor>a2f480eaa76919774ba222225c952b874</anchor>
      <arglist>(ThreadLock *acquirer)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALOX_API void</type>
      <name>SetReplacement</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1TextLogger.html</anchorfile>
      <anchor>adcc3e44d96eefbb58460dc913c54af6a</anchor>
      <arglist>(const String &amp;searched, const String &amp;replacement)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AString</type>
      <name>logBuf</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1TextLogger.html</anchorfile>
      <anchor>a1c3b59e6dc2850f90df33ae9b4533334</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AString</type>
      <name>msgBuf</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1TextLogger.html</anchorfile>
      <anchor>aca76e783906a4030895a9797a98adb3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; AString &gt;</type>
      <name>replacements</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1TextLogger.html</anchorfile>
      <anchor>a07a5ac8fc34beb304cd3389da5378ed0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>stdStreamLockRegistrationCounter</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1TextLogger.html</anchorfile>
      <anchor>a7e0257392907f8a498262a3d8516f04c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>usesStdStreams</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1TextLogger.html</anchorfile>
      <anchor>a521df36fef7aa1dc1979a93cd4db2e83</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALOX_API</type>
      <name>TextLogger</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1TextLogger.html</anchorfile>
      <anchor>a8bfcf64e8f6e534154ce15a687fd3fae</anchor>
      <arglist>(const String &amp;pName, const String &amp;typeName, bool pUsesStdStreams)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>logText</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1TextLogger.html</anchorfile>
      <anchor>ae272f3e7c4827d4ad3cd3e7822bf9aff</anchor>
      <arglist>(core::Domain &amp;domain, Verbosity verbosity, AString &amp;msg, core::ScopeInfo &amp;scope, int lineNumber)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>notifyMultiLineOp</name>
      <anchorfile>classaworx_1_1lox_1_1core_1_1textlogger_1_1TextLogger.html</anchorfile>
      <anchor>a43f4dbea63f8049f5cca8576b5390b40</anchor>
      <arglist>(lib::lang::Phase phase)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::threads::Thread</name>
    <filename>classaworx_1_1lib_1_1threads_1_1Thread.html</filename>
    <base>aworx::lib::threads::Runnable</base>
    <member kind="function">
      <type>ALIB_API</type>
      <name>Thread</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1Thread.html</anchorfile>
      <anchor>acf5e3cb660c7d17d4602097e0e609f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API</type>
      <name>Thread</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1Thread.html</anchorfile>
      <anchor>a16f2c7d4fcac397d03d50785cf63e43c</anchor>
      <arglist>(const String &amp;threadName)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API</type>
      <name>Thread</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1Thread.html</anchorfile>
      <anchor>a6d3e50558e2d1e2fd5737f53db6af98c</anchor>
      <arglist>(Runnable *target, const String &amp;name=EmptyString)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API</type>
      <name>~Thread</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1Thread.html</anchorfile>
      <anchor>a87a9c69a69ee4b13cb1ec5772f6d32ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetId</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1Thread.html</anchorfile>
      <anchor>a7afa9b288457f394b566c93d58820852</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const TString &amp;</type>
      <name>GetName</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1Thread.html</anchorfile>
      <anchor>a93df9a0a2a5d0f8be3f287791dd837c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsAlive</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1Thread.html</anchorfile>
      <anchor>aed968892a37acc82e42dc5631873763a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Run</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1Thread.html</anchorfile>
      <anchor>ae468c1feb28eb3650062bd36b81a4dc4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetName</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1Thread.html</anchorfile>
      <anchor>a6b96e15f0d3f46e1d07fc90f2d80fe04</anchor>
      <arglist>(const String &amp;newName)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>Start</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1Thread.html</anchorfile>
      <anchor>a07aaf1227e4d645f15e0a964f54ef291</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend void</type>
      <name>_Thread__Start</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1Thread.html</anchorfile>
      <anchor>ab0de95445010749d86515d0c065ae384</anchor>
      <arglist>(Thread *t)</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>aworx::lib::threads::Threads</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1Thread.html</anchorfile>
      <anchor>a8e9b1589db4531e81a688b8f31933a6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::thread::id</type>
      <name>c11ID</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1Thread.html</anchorfile>
      <anchor>a0a145a251b9bfd12952ab051fdd6f6b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::thread *</type>
      <name>c11Thread</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1Thread.html</anchorfile>
      <anchor>a89f5d379ab6ea494541102c2f4be341c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>id</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1Thread.html</anchorfile>
      <anchor>a7441ef0865bcb3db9b8064dd7375c1ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isAliveFlag</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1Thread.html</anchorfile>
      <anchor>a56a0c2524b8071ee7d9447a62d83ce32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>String64</type>
      <name>name</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1Thread.html</anchorfile>
      <anchor>ab8753ff0c292faf40f6618a33d16ee9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Runnable *</type>
      <name>runnable</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1Thread.html</anchorfile>
      <anchor>af96dc80019779aec1839595c875b104e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Thread</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1Thread.html</anchorfile>
      <anchor>a0200ba496119c9e8c096e380331ac9aa</anchor>
      <arglist>(bool internal)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::threads::ThreadLock</name>
    <filename>classaworx_1_1lib_1_1threads_1_1ThreadLock.html</filename>
    <base>aworx::lib::lang::Ownable</base>
    <member kind="variable">
      <type>int</type>
      <name>RecursionWarningThreshold</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1ThreadLock.html</anchorfile>
      <anchor>a2b35011c911bf00d065eba8af27620a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>long</type>
      <name>WaitWarningTimeLimitInMillis</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1ThreadLock.html</anchorfile>
      <anchor>a1a326aeefec583cbccf74ea567257e11</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ALIB_API</type>
      <name>ThreadLock</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1ThreadLock.html</anchorfile>
      <anchor>ac1b7c80ef351b4ddeccf330b34121947</anchor>
      <arglist>(lang::LockMode lockMode=lang::LockMode::Recursive, lang::Safeness safeness=lang::Safeness::Safe)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API</type>
      <name>~ThreadLock</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1ThreadLock.html</anchorfile>
      <anchor>a62d4d1d8df991fec098bbd8d5f19e34b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API void</type>
      <name>Acquire</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1ThreadLock.html</anchorfile>
      <anchor>a0d1442ed6b0204331a77b7afbfd27b1e</anchor>
      <arglist>(const TString &amp;file, int line, const TString &amp;func)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API int</type>
      <name>DbgCountAcquirements</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1ThreadLock.html</anchorfile>
      <anchor>aceed656a3e262a10e366de4969fa4003</anchor>
      <arglist>(Thread *thread=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>lang::LockMode</type>
      <name>GetMode</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1ThreadLock.html</anchorfile>
      <anchor>ad990be5d1f5256638b1ddcc842a6ceb5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>lang::Safeness</type>
      <name>GetSafeness</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1ThreadLock.html</anchorfile>
      <anchor>a7b2ea79ab83658e6c8b5f803c9b22475</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API void</type>
      <name>Release</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1ThreadLock.html</anchorfile>
      <anchor>a94c93747c8daa99d65c2a04c6be0748c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>SetSafeness</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1ThreadLock.html</anchorfile>
      <anchor>a7610d5aa2df13cbaf64eb5ac17ddee71</anchor>
      <arglist>(lang::Safeness safeness)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>WillRelease</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1ThreadLock.html</anchorfile>
      <anchor>a7950eee52ea10c4637f72ec9e152f316</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>cntAcquirements</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1ThreadLock.html</anchorfile>
      <anchor>a04735ee43ec4d1676e4e0eb3d6bebd73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>lang::LockMode</type>
      <name>lockMode</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1ThreadLock.html</anchorfile>
      <anchor>a48ca7c4076cf2b37218a11298526c9f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex *</type>
      <name>mutex</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1ThreadLock.html</anchorfile>
      <anchor>a925e97cfc2fb5e3b27bd06f805668a9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::condition_variable *</type>
      <name>mutexNotifier</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1ThreadLock.html</anchorfile>
      <anchor>a546b08274dd279ace7093f6b6d562beb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Thread *</type>
      <name>owner</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1ThreadLock.html</anchorfile>
      <anchor>a6d42f8ca4a142dc8f1e48b8329b17be7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::threads::ThreadLockNR</name>
    <filename>classaworx_1_1lib_1_1threads_1_1ThreadLockNR.html</filename>
    <base>aworx::lib::lang::Ownable</base>
    <member kind="function">
      <type></type>
      <name>ThreadLockNR</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1ThreadLockNR.html</anchorfile>
      <anchor>a5bb7c49696bda3229c1d118872a66e01</anchor>
      <arglist>(lang::Safeness safeness=lang::Safeness::Safe)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ThreadLockNR</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1ThreadLockNR.html</anchorfile>
      <anchor>ad2dd19f8e7eb364c570f32d320c470ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Acquire</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1ThreadLockNR.html</anchorfile>
      <anchor>a07a42f9930e2b2f9b94a3d47d3088532</anchor>
      <arglist>(const TString &amp;file, int line, const TString &amp;func)</arglist>
    </member>
    <member kind="function">
      <type>lang::Safeness</type>
      <name>GetSafeness</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1ThreadLockNR.html</anchorfile>
      <anchor>a7b2ea79ab83658e6c8b5f803c9b22475</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Release</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1ThreadLockNR.html</anchorfile>
      <anchor>a84a1506acc1e04455ebc3bc724265872</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSafeness</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1ThreadLockNR.html</anchorfile>
      <anchor>a7610d5aa2df13cbaf64eb5ac17ddee71</anchor>
      <arglist>(lang::Safeness safeness)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>dbgIsAcquired</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1ThreadLockNR.html</anchorfile>
      <anchor>a9426fc5fde1af618b0afd97ff21c1b6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex *</type>
      <name>mutex</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1ThreadLockNR.html</anchorfile>
      <anchor>a925e97cfc2fb5e3b27bd06f805668a9d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::threads::Threads</name>
    <filename>classaworx_1_1lib_1_1threads_1_1Threads.html</filename>
    <base>aworx::lib::lang::Library</base>
    <member kind="function">
      <type>ALIB_API Thread *</type>
      <name>CurrentThread</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1Threads.html</anchorfile>
      <anchor>afbdb4b0df9aaf36f3ab6c4965178f0d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>aworx::lib::threads::Thread</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1Threads.html</anchorfile>
      <anchor>a9da9a16a023c5ac9a91ca0682f9b4e7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>mutex</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1Threads.html</anchorfile>
      <anchor>a1be3f7fa26e4521098de5f1ec0f865f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>nextSystemThreadId</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1Threads.html</anchorfile>
      <anchor>a6f75d73b07fa7d51811c670006afddfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>nextThreadId</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1Threads.html</anchorfile>
      <anchor>aafbcb206984d160d0e23ceb38921175c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::thread::id, Thread * &gt;</type>
      <name>threadMap</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1Threads.html</anchorfile>
      <anchor>a7bbadf2ccbb2376f1053827f6549ab2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1Threads.html</anchorfile>
      <anchor>a0f7439457156e6270dfd3ccfd07e1ea1</anchor>
      <arglist>(Phases phase) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>terminationCleanUp</name>
      <anchorfile>classaworx_1_1lib_1_1threads_1_1Threads.html</anchorfile>
      <anchor>a7f9483d9dee8eaaeae3831a8bb40731e</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::time::Ticks</name>
    <filename>classaworx_1_1lib_1_1time_1_1Ticks.html</filename>
    <member kind="function">
      <type></type>
      <name>Ticks</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>a1c1ae3d4574882f05f5fa9586e7f1fec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Ticks</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>a135d26866ec39f83a66a2de922f67c2b</anchor>
      <arglist>(TimeLib::TRaw initialTicks)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Add</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>a81b5045a48ca7b958fc2be35d3260b3c</anchor>
      <arglist>(const Ticks &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Add</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>a04b3ad996f2240bc69b8b2ea4d77a6a1</anchor>
      <arglist>(TimeLib::TRaw other)</arglist>
    </member>
    <member kind="function">
      <type>Ticks</type>
      <name>Age</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>afc3ea69a2be2bc54667e14ba3fa8cb83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API AString &amp;</type>
      <name>Format</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>aa0befe92a960e53ffbe042855f5d5ec3</anchor>
      <arglist>(const String &amp;format, AString &amp;target)</arglist>
    </member>
    <member kind="function">
      <type>Ticks &amp;</type>
      <name>FromDays</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>a64467b0a655d54c0532f9148b4474ee9</anchor>
      <arglist>(int days)</arglist>
    </member>
    <member kind="function">
      <type>Ticks &amp;</type>
      <name>FromHours</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>a2cc9107419ee7696e296bd899d9bbcbe</anchor>
      <arglist>(int hours)</arglist>
    </member>
    <member kind="function">
      <type>Ticks &amp;</type>
      <name>FromMicros</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>a9d6027e9ada750d222399b25d1fcae97</anchor>
      <arglist>(int64_t micros)</arglist>
    </member>
    <member kind="function">
      <type>Ticks &amp;</type>
      <name>FromMillis</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>a9f052b4ad21a91724bc36fe9459d9c31</anchor>
      <arglist>(int64_t millis)</arglist>
    </member>
    <member kind="function">
      <type>Ticks &amp;</type>
      <name>FromMinutes</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>ac444cc81ed42417f7d07aa6880b8c22a</anchor>
      <arglist>(int mins)</arglist>
    </member>
    <member kind="function">
      <type>Ticks &amp;</type>
      <name>FromNanos</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>a5531fd6c3bc79a8254effc7c9aaa27cb</anchor>
      <arglist>(int64_t nanos)</arglist>
    </member>
    <member kind="function">
      <type>Ticks &amp;</type>
      <name>FromSeconds</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>ac45497fa700f7c67f22accfee553c323</anchor>
      <arglist>(int secs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasElapsed</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>a9a2c788835d7f696352b3648637f3a58</anchor>
      <arglist>(Ticks waitTime)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>InDays</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>a2c5c7eaaa1302e6222b92b069fb5aa4b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API time_t</type>
      <name>InEpochSeconds</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>a6b3a5a4b71a7147bb4183e246b97afec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>InFileTime</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>a2535b2e438ea0c951a2c1c627ef15cb4</anchor>
      <arglist>(LPFILETIME result) const</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>InFileTime</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>ac50e4ff0c99623e01bef03effe58c124</anchor>
      <arglist>(ULARGE_INTEGER &amp;result) const</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API double</type>
      <name>InHertz</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>adf93fed5bff47f78f127d048f3188d95</anchor>
      <arglist>(int nDigitsPrecision=-1) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>InHours</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>a717fd591338be15b990bffa66dadeacf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>InMicros</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>a3dec213332149a6047ad2d6ffdc323f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>InMillis</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>a7852d99792aed6f88b192a83f8351fec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>InMinutes</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>ae9d9869b75b870f1201fe00f52b9b4ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>InNanos</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>a143be04ad0d869fe72b6c34e9df407d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>InSeconds</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>a02a9862ff2e0173b56df0346b4cf03b1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>InSystemTime</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>ac95385bcbe267c71b01d12b51850e222</anchor>
      <arglist>(LPSYSTEMTIME result, lang::Timezone timezone=lang::Timezone::Local) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>ae213a93cb137b78205eb9680d81e01ca</anchor>
      <arglist>(const Ticks &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Ticks</type>
      <name>operator+</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>a0f366a453ef39bf70ff8df9f692b8b76</anchor>
      <arglist>(const Ticks &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Ticks &amp;</type>
      <name>operator+=</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>a5727d83df8820168b14c3c40e56930bc</anchor>
      <arglist>(const Ticks &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Ticks</type>
      <name>operator-</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>ac6e46b394710dbbf13464b6e20bb4de1</anchor>
      <arglist>(const Ticks &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Ticks &amp;</type>
      <name>operator-=</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>a49be77be575c663e483f7da99788420d</anchor>
      <arglist>(const Ticks &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>a7919b62544f6cf56c61c00aad97101f9</anchor>
      <arglist>(const Ticks &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>ab4efd4f48bae87981a5eb661f11f1b92</anchor>
      <arglist>(const Ticks &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>a45425dd7c90486a8c857cf086557d12d</anchor>
      <arglist>(const Ticks &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>a532040bb3f114cd8872867aa3935fbe5</anchor>
      <arglist>(const Ticks &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>aa89f48cef76704c9f094f4596ed71222</anchor>
      <arglist>(const Ticks &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>TimeLib::TRaw</type>
      <name>Raw</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>a470d26e85491fb28a2523ec26072e224</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>a614cfe7992438ee53cfd9440848c39e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>a4037be6f5cc14d19b7c5ee5ea4e58c13</anchor>
      <arglist>(const Ticks &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>SetFromEpochSeconds</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>a53a9f29f45a8cd2b3d2f265e0604e012</anchor>
      <arglist>(time_t epochSeconds)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>SetFromFileTime</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>a640f0a6edb8081932b3dcc407210fa92</anchor>
      <arglist>(const FILETIME &amp;fileTime)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>SetFromFileTime</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>acb337572671e84adbe312a80f65a2fc6</anchor>
      <arglist>(const ULARGE_INTEGER &amp;fileTime)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>SetFromSystemTime</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>ad51cea34d7823cb400ba0d8f8cb74de1</anchor>
      <arglist>(const SYSTEMTIME &amp;systemTime, lang::Timezone timezone=lang::Timezone::Local)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRaw</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>aad6aac6c18aab17f80c46cda1fcd8274</anchor>
      <arglist>(TimeLib::TRaw value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetToAge</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>a7a9ca9aa6455da2dbb63be7c9fa1b05f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Ticks</type>
      <name>Since</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>aa4dbcdd06afdb7ae4cef91f4ea8ab34b</anchor>
      <arglist>(const Ticks &amp;olderTime) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Sub</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>a32d565c619412910f6e8b056a4401f0f</anchor>
      <arglist>(const Ticks &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Sub</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>a22ac0449d59b579337796a05795b6a21</anchor>
      <arglist>(TimeLib::TRaw other)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TimeLib::TRaw</type>
      <name>ticks</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1Ticks.html</anchorfile>
      <anchor>ad06c9723586456a8a19434ba77721325</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::time::TicksCalendarTime</name>
    <filename>classaworx_1_1lib_1_1time_1_1TicksCalendarTime.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>Day</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TicksCalendarTime.html</anchorfile>
      <anchor>a8f67164de537e3ec2b47e3204ddd3400</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>DayOfWeek</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TicksCalendarTime.html</anchorfile>
      <anchor>ac3213e69636923e6b0b41a0e388f79ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Hour</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TicksCalendarTime.html</anchorfile>
      <anchor>a9a7e982c278ab66497180395ad975b4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Millisecond</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TicksCalendarTime.html</anchorfile>
      <anchor>af3cfef93e0bc093468e23c7e8768ce62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Minute</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TicksCalendarTime.html</anchorfile>
      <anchor>a361937b5d839c9e24d045e2fb21933ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Month</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TicksCalendarTime.html</anchorfile>
      <anchor>a530b376ec91a278ac98531d3ea17f148</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Second</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TicksCalendarTime.html</anchorfile>
      <anchor>af95fdbfb8f07e751f4396ef15bc70b5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Year</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TicksCalendarTime.html</anchorfile>
      <anchor>a42e645110404fbf4f10235789577fa32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TicksCalendarTime</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TicksCalendarTime.html</anchorfile>
      <anchor>aeaad7380abf5a17bffdafda72230e919</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TicksCalendarTime</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TicksCalendarTime.html</anchorfile>
      <anchor>ad1a73480140012a5eeb4dfa3438d4b3b</anchor>
      <arglist>(const Ticks &amp;ticks, lang::Timezone timezone=lang::Timezone::Local)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TicksCalendarTime</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TicksCalendarTime.html</anchorfile>
      <anchor>a6160df6183b4a94e78670c67870a73a2</anchor>
      <arglist>(TimeLib::TRaw ticks, lang::Timezone timezone=lang::Timezone::Local)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>Clear</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TicksCalendarTime.html</anchorfile>
      <anchor>aa71d36872f416feaa853788a7a7a7ef8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API AString &amp;</type>
      <name>Format</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TicksCalendarTime.html</anchorfile>
      <anchor>a5f8b45eacc1df79cc9c57643af12defc</anchor>
      <arglist>(Substring format, AString &amp;target, lib::lang::CurrentData targetData=lib::lang::CurrentData::Keep)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API TimeLib::TRaw</type>
      <name>Get</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TicksCalendarTime.html</anchorfile>
      <anchor>a9f300b52e33bca10623163328a14a8f0</anchor>
      <arglist>(lang::Timezone timezone=lang::Timezone::Local)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TicksCalendarTime.html</anchorfile>
      <anchor>a21717ad3ba4ae7f3bfd1a58075d8474f</anchor>
      <arglist>(const Ticks &amp;ticks, lang::Timezone timezone=lang::Timezone::Local)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>Set</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TicksCalendarTime.html</anchorfile>
      <anchor>a50de5ad86e7a1ca7cefafd31cd1109c5</anchor>
      <arglist>(TimeLib::TRaw ticks, lang::Timezone timezone=lang::Timezone::Local)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>tm_isdst</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TicksCalendarTime.html</anchorfile>
      <anchor>a7d102a87f898878ebf37ebd87504e099</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::time::TickSpan</name>
    <filename>classaworx_1_1lib_1_1time_1_1TickSpan.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>Days</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TickSpan.html</anchorfile>
      <anchor>a5b70bc3780a4da05fec9a52b7e4eb85b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Hours</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TickSpan.html</anchorfile>
      <anchor>a9039ccfcf02dd3340b9fdfa18517f2ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Microseconds</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TickSpan.html</anchorfile>
      <anchor>a486553d6699abe764277cccc1c48fe69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Milliseconds</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TickSpan.html</anchorfile>
      <anchor>a3818cea5a28d6856ec80d39a8ce64b8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Minutes</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TickSpan.html</anchorfile>
      <anchor>a9f1239b10f2ae7a1187323c5f19d48c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Nanoseconds</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TickSpan.html</anchorfile>
      <anchor>a07bce61c5d03546046f1cbbd77273a19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Seconds</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TickSpan.html</anchorfile>
      <anchor>a3df113560f1b5fdd862befb68ddec3ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TickSpan</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TickSpan.html</anchorfile>
      <anchor>ad636246fac9c30f5d7ccf2d756020585</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TickSpan</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TickSpan.html</anchorfile>
      <anchor>a4df0c6745053f035268465f8e281392c</anchor>
      <arglist>(const Ticks &amp;ticks)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TickSpan</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TickSpan.html</anchorfile>
      <anchor>a60744b5b645accd33e56e3cd6d4d9210</anchor>
      <arglist>(TimeLib::TRaw ticks)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TickSpan</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TickSpan.html</anchorfile>
      <anchor>a880df1f180f962d18da5dba4497ca915</anchor>
      <arglist>(const Ticks &amp;first, const Ticks &amp;second)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>Clear</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TickSpan.html</anchorfile>
      <anchor>aa71d36872f416feaa853788a7a7a7ef8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API TimeLib::TRaw</type>
      <name>Get</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TickSpan.html</anchorfile>
      <anchor>aefe9c1e75eb0013395ad60a501d85602</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TickSpan.html</anchorfile>
      <anchor>a3eb34a60738ebd4fd7e0782b8dd3cc25</anchor>
      <arglist>(const Ticks &amp;ticks)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>Set</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TickSpan.html</anchorfile>
      <anchor>a76ecab7c031e169ac16ab6b048832b5b</anchor>
      <arglist>(TimeLib::TRaw ticks)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::time::TickWatch</name>
    <filename>classaworx_1_1lib_1_1time_1_1TickWatch.html</filename>
    <member kind="function">
      <type></type>
      <name>TickWatch</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TickWatch.html</anchorfile>
      <anchor>ae5d46be41414c0e48a9611ce08084a50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TickWatch</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TickWatch.html</anchorfile>
      <anchor>a2b1b331cedde52bd637b612c67faa202</anchor>
      <arglist>(const TickWatch &amp;copy)</arglist>
    </member>
    <member kind="function">
      <type>Ticks</type>
      <name>GetAverage</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TickWatch.html</anchorfile>
      <anchor>ae29a8f1f9e654fdc5c28964f8612086f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Ticks</type>
      <name>GetCumulated</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TickWatch.html</anchorfile>
      <anchor>afa26a288553e5b8e69116f085d320564</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetSampleCnt</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TickWatch.html</anchorfile>
      <anchor>a8f2deb29070eb959107e5d9ad3584635</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Ticks &amp;</type>
      <name>GetStartTime</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TickWatch.html</anchorfile>
      <anchor>aa6b9c4f3cd652c6f3325d28e17d3eaec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Reset</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TickWatch.html</anchorfile>
      <anchor>a372de693ad40b3f42839c8ec6ac845f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Ticks</type>
      <name>Sample</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TickWatch.html</anchorfile>
      <anchor>a04ef4fd46aa6e5ae371cb3c70f278e61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStartTime</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TickWatch.html</anchorfile>
      <anchor>a4e794e9e02f1fb5a65a14d9a33ce62d6</anchor>
      <arglist>(const Ticks newStartTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Start</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TickWatch.html</anchorfile>
      <anchor>a07aaf1227e4d645f15e0a964f54ef291</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>cntSamples</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TickWatch.html</anchorfile>
      <anchor>a3203b85b99c75b91922c0147ac0ca04b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Ticks</type>
      <name>startTime</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TickWatch.html</anchorfile>
      <anchor>ad4a637681761e440fc76c0c91a3a2737</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Ticks</type>
      <name>sum</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TickWatch.html</anchorfile>
      <anchor>ac78b14fce693b96514184f5ecb99f5fa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::time::TimeLib</name>
    <filename>classaworx_1_1lib_1_1time_1_1TimeLib.html</filename>
    <base>aworx::lib::lang::Library</base>
    <member kind="typedef">
      <type>int64_t</type>
      <name>TRaw</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeLib.html</anchorfile>
      <anchor>a6a8ff39a1910a73af0edcd78f6717ec4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr auto</type>
      <name>NanosPerDay</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeLib.html</anchorfile>
      <anchor>a07b836a7bead9a7b58f5facdc6fc9d75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr auto</type>
      <name>NanosPerHour</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeLib.html</anchorfile>
      <anchor>a1e56a213a49e6d2702c631376b892d87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr auto</type>
      <name>NanosPerMicrosecond</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeLib.html</anchorfile>
      <anchor>a392d1ac06d9d0dc8b82982cfe25320af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr auto</type>
      <name>NanosPerMillisecond</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeLib.html</anchorfile>
      <anchor>a7dadcbedea959d16e6d3c63bdd0ece5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr auto</type>
      <name>NanosPerMinute</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeLib.html</anchorfile>
      <anchor>a791bdeeaa87ab33caaec54c3b4d65468</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr auto</type>
      <name>NanosPerSecond</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeLib.html</anchorfile>
      <anchor>a62a32d5d8022cc69d6ad01258dba9b0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const Ticks &amp;</type>
      <name>CreationTime</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeLib.html</anchorfile>
      <anchor>a0a28cb5d005059fd4d3e7dfe37c55207</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>Inaccuracy</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeLib.html</anchorfile>
      <anchor>ac7b9d70842a51f65d59c7fe2d68b805c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>SyncClock</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeLib.html</anchorfile>
      <anchor>a5cc6d6bce5b55c1c4ff93988d0437b43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CalendarTime</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeLib.html</anchorfile>
      <anchor>aea5c0fd103ca2ab043b647f7849b2c40</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Ticks</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeLib.html</anchorfile>
      <anchor>a017339b6b6865c43fb1fdbee79a35314</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>TicksCalendarTime</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeLib.html</anchorfile>
      <anchor>a9c915c8890f454dad7e42b9c5ad95b61</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>TimeSpan</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeLib.html</anchorfile>
      <anchor>a232e94649f10656bc5e840cd5a1f8b15</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>TimeStamp</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeLib.html</anchorfile>
      <anchor>a397fdccbc3637d7c75ecd8b5a98f992e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static String</type>
      <name>days</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeLib.html</anchorfile>
      <anchor>abb6f7546063a57635c531e25d516e64c</anchor>
      <arglist>[7]</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static String</type>
      <name>months</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeLib.html</anchorfile>
      <anchor>a682ca33d6ebed6a545492180c0bc3269</anchor>
      <arglist>[12]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Ticks *</type>
      <name>creationTime</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeLib.html</anchorfile>
      <anchor>a708b91dd612378afbff844b402595c61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TRaw</type>
      <name>diffOfMonotonicClockAndNow</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeLib.html</anchorfile>
      <anchor>a8206cf011c91cf9eb339fd782aac4de1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int64_t</type>
      <name>inaccuracy</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeLib.html</anchorfile>
      <anchor>aa912f27400c5f13494ef9b2fb919ae20</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeLib.html</anchorfile>
      <anchor>a0f7439457156e6270dfd3ccfd07e1ea1</anchor>
      <arglist>(Phases phase) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>terminationCleanUp</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeLib.html</anchorfile>
      <anchor>a7f9483d9dee8eaaeae3831a8bb40731e</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::time::TimeSpan</name>
    <filename>classaworx_1_1lib_1_1time_1_1TimeSpan.html</filename>
    <member kind="function" static="yes">
      <type>static constexpr TimeSpan</type>
      <name>FromAbsoluteDays</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>a2b1b05475ebc4eafc160a964e933f05d</anchor>
      <arglist>(integer days)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr TimeSpan</type>
      <name>FromAbsoluteHours</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>adb2592c804a40295db589211c595d1d2</anchor>
      <arglist>(integer hours)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr TimeSpan</type>
      <name>FromAbsoluteMicroseconds</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>ae49daea5233884074e18ff4ae9b05d07</anchor>
      <arglist>(integer microseconds)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr TimeSpan</type>
      <name>FromAbsoluteMilliseconds</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>a45425c2c689f1de0c12e9d5481dc67e6</anchor>
      <arglist>(integer milliseconds)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr TimeSpan</type>
      <name>FromAbsoluteMinutes</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>adea96708d960c2c17680b5e5bba936d2</anchor>
      <arglist>(integer minutes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr TimeSpan</type>
      <name>FromAbsoluteSeconds</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>aea3fa05b5aac08a5bed2184ecc53e18e</anchor>
      <arglist>(integer seconds)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr TimeSpan</type>
      <name>FromDays</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>a316e0154461055d03d2d3a77e60fa3ad</anchor>
      <arglist>(double days)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr TimeSpan</type>
      <name>FromHours</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>a331f896e54fecc1afcbdbb764f5d5532</anchor>
      <arglist>(double hours)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr TimeSpan</type>
      <name>FromMicroseconds</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>a858cd05ad7eada22336a52e1ba26eaa5</anchor>
      <arglist>(double microseconds)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr TimeSpan</type>
      <name>FromMilliseconds</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>a1cd0aa2354938dc26ed4d1577cf13554</anchor>
      <arglist>(double milliseconds)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr TimeSpan</type>
      <name>FromMinutes</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>af12b8bd6191010a569e5b4e0cef48d1a</anchor>
      <arglist>(double minutes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr TimeSpan</type>
      <name>FromNanoseconds</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>aa2d844362ce4c90ec9f57999211c4c79</anchor>
      <arglist>(integer nanoseconds)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr TimeSpan</type>
      <name>FromSeconds</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>a5254e2c160643af725581da519d5de5c</anchor>
      <arglist>(double seconds)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>TimeSpan</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>a2dcb4b08252cee1180c86a3a978127e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>TimeSpan</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>a11d8f15e7096b1e55cc8fdb2844bf393</anchor>
      <arglist>(TimeLib::TRaw initialTicks)</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>InAbsoluteDays</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>ae6110952ad7057b85034994e407fa280</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>InAbsoluteHours</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>a7014ade1ca180ce4e7f439a67ef0dbb9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>InAbsoluteMicroseconds</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>ac068438a40fc229c9a7817376b953044</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>InAbsoluteMilliseconds</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>a91996508da24f8232a01120364319a9c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>InAbsoluteMinutes</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>a42d949a49edb60c74839d554d8265783</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>InAbsoluteSeconds</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>af41a436331b1d16782290ce964c19176</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>InDays</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>a24ece134d0c4fb6a0996a1cfcfe486ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API double</type>
      <name>InHertz</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>adf93fed5bff47f78f127d048f3188d95</anchor>
      <arglist>(int nDigitsPrecision=-1) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>InHours</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>ab529863a44feb085d6068d18963dc790</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>InMicroseconds</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>ac66ba767680d508ebb20af80522a3e67</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>InMilliseconds</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>ae75c87d8ff1fa7f0101fefba5c94c1a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>InMinutes</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>a5233e65e22bd794042b4687a1b70eec4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>InNanoseconds</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>a8d7e0a8e10e7ec54b0bd27f52b3bbaf8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>InSeconds</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>a23b734ee11eb8fcb16f1e579de903332</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>ae6e0598e1c28d30d8a84a5eeb84bab86</anchor>
      <arglist>(const TimeSpan &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>TimeSpan</type>
      <name>operator*</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>a9806be8a5fbf5f35f252e470d5b9fedb</anchor>
      <arglist>(double multiplier) const</arglist>
    </member>
    <member kind="function">
      <type>TimeSpan &amp;</type>
      <name>operator*=</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>a9faf4bd1f42c48c2d04bc3b3b555edbe</anchor>
      <arglist>(double multiplier)</arglist>
    </member>
    <member kind="function">
      <type>TimeSpan</type>
      <name>operator+</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>a1206756da1dbcb77fd2ca82d65934110</anchor>
      <arglist>(const TimeSpan &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>TimeSpan &amp;</type>
      <name>operator+=</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>a10a173690c7b0301ac90496c023111ca</anchor>
      <arglist>(const TimeSpan &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>TimeSpan</type>
      <name>operator-</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>a3d877e46317b8a2081cd94168c8ea8ab</anchor>
      <arglist>(const TimeSpan &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>TimeSpan &amp;</type>
      <name>operator-=</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>a32f97fbdf51c45163c6d59f9ba5e907f</anchor>
      <arglist>(const TimeSpan &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>TimeSpan</type>
      <name>operator/</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>a0135fe6b1db67a14efb56fe141031b87</anchor>
      <arglist>(double divisor) const</arglist>
    </member>
    <member kind="function">
      <type>TimeSpan &amp;</type>
      <name>operator/=</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>a2824854f848a1898660963bb00a73daf</anchor>
      <arglist>(double divisor)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>a796fbbdcb20b5ef3b682bb31cdf395cc</anchor>
      <arglist>(const TimeSpan &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>a5ff3efef7968e00326fba572fc1ad602</anchor>
      <arglist>(const TimeSpan &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>a9e7b689ed11a0f208af7cb2b41d7071c</anchor>
      <arglist>(const TimeSpan &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>afad18ccd8358a24f233e0933d4685c75</anchor>
      <arglist>(const TimeSpan &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>a2d4527f30ecdaef3fbeede2e0bdb2ad2</anchor>
      <arglist>(const TimeSpan &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>TimeLib::TRaw</type>
      <name>Raw</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>a470d26e85491fb28a2523ec26072e224</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>af25ad936997a5a21c0af83d817b7b41b</anchor>
      <arglist>(TimeLib::TRaw value)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>TimeStamp</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>a397fdccbc3637d7c75ecd8b5a98f992e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TimeLib::TRaw</type>
      <name>ticks</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeSpan.html</anchorfile>
      <anchor>ad06c9723586456a8a19434ba77721325</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::time::TimeStamp</name>
    <filename>classaworx_1_1lib_1_1time_1_1TimeStamp.html</filename>
    <member kind="function" static="yes">
      <type>static TimeStamp</type>
      <name>FromEpochSeconds</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeStamp.html</anchorfile>
      <anchor>a7ce87332551f71af43dc813e8e8d8bdd</anchor>
      <arglist>(time_t epochSeconds)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TimeStamp</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeStamp.html</anchorfile>
      <anchor>a1ae4a35dfcd8d6cd86ac79b723b463be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TimeStamp</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeStamp.html</anchorfile>
      <anchor>a742b3ebcb88fbe0b204aa91736281db0</anchor>
      <arglist>(const TimeStamp &amp;copy)=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TimeStamp</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeStamp.html</anchorfile>
      <anchor>a6f0c43240e7c52479793b705932867ff</anchor>
      <arglist>(TimeStamp &amp;&amp;move)=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TimeStamp</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeStamp.html</anchorfile>
      <anchor>a98c98ff073a9c5de127f9d2eac243a89</anchor>
      <arglist>(TimeLib::TRaw initialTicks)</arglist>
    </member>
    <member kind="function">
      <type>TimeSpan</type>
      <name>Age</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeStamp.html</anchorfile>
      <anchor>a0555c26d5f5f389f051f54736fc5881d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API AString &amp;</type>
      <name>Format</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeStamp.html</anchorfile>
      <anchor>aa0befe92a960e53ffbe042855f5d5ec3</anchor>
      <arglist>(const String &amp;format, AString &amp;target)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API time_t</type>
      <name>InEpochSeconds</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeStamp.html</anchorfile>
      <anchor>a6b3a5a4b71a7147bb4183e246b97afec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>InFileTime</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeStamp.html</anchorfile>
      <anchor>a2535b2e438ea0c951a2c1c627ef15cb4</anchor>
      <arglist>(LPFILETIME result) const</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>InFileTime</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeStamp.html</anchorfile>
      <anchor>ac50e4ff0c99623e01bef03effe58c124</anchor>
      <arglist>(ULARGE_INTEGER &amp;result) const</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>InSystemTime</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeStamp.html</anchorfile>
      <anchor>ac95385bcbe267c71b01d12b51850e222</anchor>
      <arglist>(LPSYSTEMTIME result, lang::Timezone timezone=lang::Timezone::Local) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsOlderThan</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeStamp.html</anchorfile>
      <anchor>a765aa669f7f4094b695c4db9ec4bda99</anchor>
      <arglist>(TimeSpan waitTime) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeStamp.html</anchorfile>
      <anchor>a93860606cc901efa7cea13257ddc63a9</anchor>
      <arglist>(const TimeStamp &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>TimeStamp</type>
      <name>operator+</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeStamp.html</anchorfile>
      <anchor>adc7e25b26c8480b1528ea410fbc61ac2</anchor>
      <arglist>(const TimeSpan &amp;timeSpan) const</arglist>
    </member>
    <member kind="function">
      <type>TimeStamp &amp;</type>
      <name>operator+=</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeStamp.html</anchorfile>
      <anchor>a508d16f26cabb9dce8d1805dd9092790</anchor>
      <arglist>(const TimeSpan &amp;timeSpan)</arglist>
    </member>
    <member kind="function">
      <type>TimeStamp</type>
      <name>operator-</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeStamp.html</anchorfile>
      <anchor>a9ead6da861445aeb8f41995a8797a3ba</anchor>
      <arglist>(const TimeSpan &amp;timeSpan) const</arglist>
    </member>
    <member kind="function">
      <type>TimeSpan</type>
      <name>operator-</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeStamp.html</anchorfile>
      <anchor>a60deb5ccac81565f8407285da02f8d6c</anchor>
      <arglist>(const TimeStamp &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>TimeStamp &amp;</type>
      <name>operator-=</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeStamp.html</anchorfile>
      <anchor>a32e08b08cfbcda869ee1fd0e8f1aa818</anchor>
      <arglist>(const TimeSpan &amp;timeSpan)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeStamp.html</anchorfile>
      <anchor>ad43b6e1c845f89e0b62795d8fa822587</anchor>
      <arglist>(const TimeStamp &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeStamp.html</anchorfile>
      <anchor>af57e701b1e7d5e6b0bc19d90fa79a65b</anchor>
      <arglist>(const TimeStamp &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>TimeStamp &amp;</type>
      <name>operator=</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeStamp.html</anchorfile>
      <anchor>a8a999a1dd8d60069b1e07ed52a852db2</anchor>
      <arglist>(const TimeStamp &amp;other)=default</arglist>
    </member>
    <member kind="function">
      <type>TimeStamp &amp;</type>
      <name>operator=</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeStamp.html</anchorfile>
      <anchor>a2c996249181abcbde10a03f5f2be18b9</anchor>
      <arglist>(TimeStamp &amp;&amp;other)=default</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeStamp.html</anchorfile>
      <anchor>a6a94158ca4e3b17eb6e672d3f9d74bb5</anchor>
      <arglist>(const TimeStamp &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeStamp.html</anchorfile>
      <anchor>a0be1750893f0a1662a109a2bb480e14b</anchor>
      <arglist>(const TimeStamp &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeStamp.html</anchorfile>
      <anchor>a46ad5800b7ab219d0450cbd6c343076c</anchor>
      <arglist>(const TimeStamp &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>TimeLib::TRaw</type>
      <name>Raw</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeStamp.html</anchorfile>
      <anchor>a470d26e85491fb28a2523ec26072e224</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeStamp.html</anchorfile>
      <anchor>a614cfe7992438ee53cfd9440848c39e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeStamp.html</anchorfile>
      <anchor>a4d76cbe7a304fbf8a072850dfe771b2d</anchor>
      <arglist>(const TimeStamp &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeStamp.html</anchorfile>
      <anchor>af25ad936997a5a21c0af83d817b7b41b</anchor>
      <arglist>(TimeLib::TRaw value)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API TimeStamp &amp;</type>
      <name>SetFromEpochSeconds</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeStamp.html</anchorfile>
      <anchor>a0bd760d140709605404ea8d143a47872</anchor>
      <arglist>(time_t epochSeconds)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>SetFromFileTime</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeStamp.html</anchorfile>
      <anchor>a640f0a6edb8081932b3dcc407210fa92</anchor>
      <arglist>(const FILETIME &amp;fileTime)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>SetFromFileTime</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeStamp.html</anchorfile>
      <anchor>acb337572671e84adbe312a80f65a2fc6</anchor>
      <arglist>(const ULARGE_INTEGER &amp;fileTime)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>SetFromSystemTime</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeStamp.html</anchorfile>
      <anchor>ad51cea34d7823cb400ba0d8f8cb74de1</anchor>
      <arglist>(const SYSTEMTIME &amp;systemTime, lang::Timezone timezone=lang::Timezone::Local)</arglist>
    </member>
    <member kind="function">
      <type>TimeSpan</type>
      <name>Since</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeStamp.html</anchorfile>
      <anchor>ae98249fb2ee0c3f4afa6f683426ed4ac</anchor>
      <arglist>(const TimeStamp &amp;other) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TimeLib::TRaw</type>
      <name>ticks</name>
      <anchorfile>classaworx_1_1lib_1_1time_1_1TimeStamp.html</anchorfile>
      <anchor>ad06c9723586456a8a19434ba77721325</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::strings::util::Tokenizer</name>
    <filename>classaworx_1_1lib_1_1strings_1_1util_1_1Tokenizer.html</filename>
    <member kind="variable">
      <type>Substring</type>
      <name>Actual</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1Tokenizer.html</anchorfile>
      <anchor>a2eefe9530c5f2042ddfa20e26b34328b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Substring</type>
      <name>Rest</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1Tokenizer.html</anchorfile>
      <anchor>a5c8c6045e5fe301e78496fd5e9c7bfab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String16</type>
      <name>Whitespaces</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1Tokenizer.html</anchorfile>
      <anchor>ade1a53d31b95db4ed98b03ff74a8b472</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Tokenizer</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1Tokenizer.html</anchorfile>
      <anchor>a09b5373670bea8a8e4ef7645889bad72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Tokenizer</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1Tokenizer.html</anchorfile>
      <anchor>a5af037fa6df8ba82350875a6e77ad910</anchor>
      <arglist>(const String &amp;src, char delimiter, bool skipEmptyTokens=false)</arglist>
    </member>
    <member kind="function">
      <type>Substring &amp;</type>
      <name>GetRest</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1Tokenizer.html</anchorfile>
      <anchor>a89fc72e647d6e055d270b56538b2f371</anchor>
      <arglist>(lang::Whitespaces trimming=lang::Whitespaces::Trim)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasNext</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1Tokenizer.html</anchorfile>
      <anchor>a3551d22502a58cdc93b15d14f3fb87c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API Substring &amp;</type>
      <name>Next</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1Tokenizer.html</anchorfile>
      <anchor>a7cbd3e82a9425abd4eb4675ed4a210e8</anchor>
      <arglist>(lang::Whitespaces trimming=lang::Whitespaces::Trim, char newDelim=&apos;\0&apos;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1Tokenizer.html</anchorfile>
      <anchor>ab1056339250b3aebd1666a9bb5e7fd37</anchor>
      <arglist>(const String &amp;src, char delimiter, bool skipEmptyTokens=false)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>delim</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1Tokenizer.html</anchorfile>
      <anchor>ab56c67e0ed9605b4078e2135f791c4ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>skipEmpty</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1Tokenizer.html</anchorfile>
      <anchor>a2c87d354c9c12955192a901adbe0070e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::strings::TString</name>
    <filename>classaworx_1_1lib_1_1strings_1_1TString.html</filename>
    <base>aworx::lib::strings::String</base>
    <member kind="function">
      <type>char</type>
      <name>operator[]</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>ad01560cade1022b35a54f07183bfc50e</anchor>
      <arglist>(integer op) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Terminate</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>a65a964fcf98f80b0368f4ebe33613b8b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>IndexOf</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>a7c6e1eba65efe930eedd3f64d8e70540</anchor>
      <arglist>(const TString &amp;needle, integer startIdx=0) const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>IndexOfAny</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>a8cf5e9cd4182bf3cb2eb8b427986725e</anchor>
      <arglist>(const TString &amp;needles, integer startIdx=0) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const char *</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>ab75164b28454722bdf29710c208f0736</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ToCString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>a3f9c1406b7469534fd3958468b4bf203</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API uint64_t</type>
      <name>ParseDecDigits</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>ad5e0cb13445fd1191ff81478891ec2bc</anchor>
      <arglist>(integer startIdx=0, integer *newIdx=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API int64_t</type>
      <name>ParseInt</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>ae664e83c86eed550dbbbcc2963fb5a4b</anchor>
      <arglist>(integer startIdx=0, NumberFormat *numberFormat=nullptr, integer *newIdx=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>ParseInt</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>ab41b1a462da081ae4fee839cda04a7a3</anchor>
      <arglist>(NumberFormat *numberFormat, integer *newIdx=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>ParseInt</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>a28a06eeb9f1360a0b05a6535befce22a</anchor>
      <arglist>(integer *newIdx) const</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>ParseInt</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>aa40f70946dd0e0dd6cfe16eab99641ad</anchor>
      <arglist>(integer startIdx, integer *newIdx) const</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API uint64_t</type>
      <name>ParseDec</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>aed425b325f016e985f8af6b1e75f3372</anchor>
      <arglist>(integer startIdx=0, NumberFormat *numberFormat=nullptr, integer *newIdx=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>ParseDec</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>ae9079a62a6c4cd39918639060d65a265</anchor>
      <arglist>(NumberFormat *numberFormat, integer *newIdx=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>ParseDec</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>a93b1e60ca537a6dac5999b997f5218d2</anchor>
      <arglist>(integer *newIdx) const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>ParseDec</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>a5a273a98a915a9a61fc7995c40085de2</anchor>
      <arglist>(integer startIdx, integer *newIdx) const</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API uint64_t</type>
      <name>ParseBin</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>a26002ab38b609f0f6bb72a5e9c47e4bb</anchor>
      <arglist>(integer startIdx=0, NumberFormat *numberFormat=nullptr, integer *newIdx=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>ParseBin</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>a401f93a0285af85f441632ab13dca2a6</anchor>
      <arglist>(NumberFormat *numberFormat, integer *newIdx=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>ParseBin</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>ae69fd90f441ff55fa73e34c78b128e73</anchor>
      <arglist>(integer *newIdx) const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>ParseBin</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>a83dd5d8854654a2781e1595823df6f24</anchor>
      <arglist>(integer startIdx, integer *newIdx) const</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API uint64_t</type>
      <name>ParseHex</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>a7ed604dc124da88cbb6e0362768490eb</anchor>
      <arglist>(integer startIdx=0, NumberFormat *numberFormat=nullptr, integer *newIdx=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>ParseHex</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>ae6a1ffcb52070ab0702350aeffa8eb0d</anchor>
      <arglist>(NumberFormat *numberFormat, integer *newIdx=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>ParseHex</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>ac9272a2301c548f706d207165d153bc0</anchor>
      <arglist>(integer *newIdx) const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>ParseHex</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>afa7cbc449ac1997e1b069cf3cef5140f</anchor>
      <arglist>(integer startIdx, integer *newIdx) const</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API uint64_t</type>
      <name>ParseOct</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>aea239e78c0482c3f57e432f46c799afa</anchor>
      <arglist>(integer startIdx=0, NumberFormat *numberFormat=nullptr, integer *newIdx=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>ParseOct</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>aa8f4c8085599078cf5ef3f739e19334f</anchor>
      <arglist>(NumberFormat *numberFormat, integer *newIdx=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>ParseOct</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>a434944b66df7cebd59d8ae16b41dca05</anchor>
      <arglist>(integer *newIdx) const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>ParseOct</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>a8253dc78198cc4207e93b612222f0bfb</anchor>
      <arglist>(integer startIdx, integer *newIdx) const</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API double</type>
      <name>ParseFloat</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>a6815a72ad886b0029a123f317cf205f8</anchor>
      <arglist>(integer startIdx=0, NumberFormat *numberFormat=nullptr, integer *newIdx=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ParseFloat</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>a0c6ab4765504bb864f134b6457526a7a</anchor>
      <arglist>(NumberFormat *numberFormat, integer *newIdx=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ParseFloat</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>ae2c8bcafc22b07e8b40d33606970b409</anchor>
      <arglist>(integer *newIdx) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ParseFloat</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>a3764e8f6da9a144f7e721258ea5a8152</anchor>
      <arglist>(integer startIdx, integer *newIdx) const</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>debugIsTerminated</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>ac3615a067cb671e6b0cac6dbb26c9f3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_dbgCheck</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>a7019ebc20c4e90566cc1f4235f0beec5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>TString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>ad751e8adb9aa217a042c45e1c0585285</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>aeae91b7a3d77ac5d3d4f5d29f8b49024</anchor>
      <arglist>(const TTerminatable &amp;src)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>constexpr</type>
      <name>TString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>ad96a578d58f81bda010ae0c0a06e696c</anchor>
      <arglist>(const char *buffer, integer contentLength)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>operator[]</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>ad01560cade1022b35a54f07183bfc50e</anchor>
      <arglist>(integer op) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Terminate</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>a65a964fcf98f80b0368f4ebe33613b8b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>IndexOf</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>a7c6e1eba65efe930eedd3f64d8e70540</anchor>
      <arglist>(const TString &amp;needle, integer startIdx=0) const</arglist>
    </member>
    <member kind="function">
      <type>integer</type>
      <name>IndexOfAny</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>a8cf5e9cd4182bf3cb2eb8b427986725e</anchor>
      <arglist>(const TString &amp;needles, integer startIdx=0) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const char *</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>ab75164b28454722bdf29710c208f0736</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ToCString</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>a3f9c1406b7469534fd3958468b4bf203</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API uint64_t</type>
      <name>ParseDecDigits</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>ad5e0cb13445fd1191ff81478891ec2bc</anchor>
      <arglist>(integer startIdx=0, integer *newIdx=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API int64_t</type>
      <name>ParseInt</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>ae664e83c86eed550dbbbcc2963fb5a4b</anchor>
      <arglist>(integer startIdx=0, NumberFormat *numberFormat=nullptr, integer *newIdx=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>ParseInt</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>ab41b1a462da081ae4fee839cda04a7a3</anchor>
      <arglist>(NumberFormat *numberFormat, integer *newIdx=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>ParseInt</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>a28a06eeb9f1360a0b05a6535befce22a</anchor>
      <arglist>(integer *newIdx) const</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>ParseInt</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>aa40f70946dd0e0dd6cfe16eab99641ad</anchor>
      <arglist>(integer startIdx, integer *newIdx) const</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API uint64_t</type>
      <name>ParseDec</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>aed425b325f016e985f8af6b1e75f3372</anchor>
      <arglist>(integer startIdx=0, NumberFormat *numberFormat=nullptr, integer *newIdx=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>ParseDec</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>ae9079a62a6c4cd39918639060d65a265</anchor>
      <arglist>(NumberFormat *numberFormat, integer *newIdx=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>ParseDec</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>a93b1e60ca537a6dac5999b997f5218d2</anchor>
      <arglist>(integer *newIdx) const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>ParseDec</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>a5a273a98a915a9a61fc7995c40085de2</anchor>
      <arglist>(integer startIdx, integer *newIdx) const</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API uint64_t</type>
      <name>ParseBin</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>a26002ab38b609f0f6bb72a5e9c47e4bb</anchor>
      <arglist>(integer startIdx=0, NumberFormat *numberFormat=nullptr, integer *newIdx=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>ParseBin</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>a401f93a0285af85f441632ab13dca2a6</anchor>
      <arglist>(NumberFormat *numberFormat, integer *newIdx=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>ParseBin</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>ae69fd90f441ff55fa73e34c78b128e73</anchor>
      <arglist>(integer *newIdx) const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>ParseBin</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>a83dd5d8854654a2781e1595823df6f24</anchor>
      <arglist>(integer startIdx, integer *newIdx) const</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API uint64_t</type>
      <name>ParseHex</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>a7ed604dc124da88cbb6e0362768490eb</anchor>
      <arglist>(integer startIdx=0, NumberFormat *numberFormat=nullptr, integer *newIdx=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>ParseHex</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>ae6a1ffcb52070ab0702350aeffa8eb0d</anchor>
      <arglist>(NumberFormat *numberFormat, integer *newIdx=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>ParseHex</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>ac9272a2301c548f706d207165d153bc0</anchor>
      <arglist>(integer *newIdx) const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>ParseHex</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>afa7cbc449ac1997e1b069cf3cef5140f</anchor>
      <arglist>(integer startIdx, integer *newIdx) const</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API uint64_t</type>
      <name>ParseOct</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>aea239e78c0482c3f57e432f46c799afa</anchor>
      <arglist>(integer startIdx=0, NumberFormat *numberFormat=nullptr, integer *newIdx=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>ParseOct</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>aa8f4c8085599078cf5ef3f739e19334f</anchor>
      <arglist>(NumberFormat *numberFormat, integer *newIdx=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>ParseOct</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>a434944b66df7cebd59d8ae16b41dca05</anchor>
      <arglist>(integer *newIdx) const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>ParseOct</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>a8253dc78198cc4207e93b612222f0bfb</anchor>
      <arglist>(integer startIdx, integer *newIdx) const</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API double</type>
      <name>ParseFloat</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>a6815a72ad886b0029a123f317cf205f8</anchor>
      <arglist>(integer startIdx=0, NumberFormat *numberFormat=nullptr, integer *newIdx=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ParseFloat</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>a0c6ab4765504bb864f134b6457526a7a</anchor>
      <arglist>(NumberFormat *numberFormat, integer *newIdx=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ParseFloat</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>ae2c8bcafc22b07e8b40d33606970b409</anchor>
      <arglist>(integer *newIdx) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ParseFloat</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1TString.html</anchorfile>
      <anchor>a3764e8f6da9a144f7e721258ea5a8152</anchor>
      <arglist>(integer startIdx, integer *newIdx) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::debug::TypeDemangler</name>
    <filename>classaworx_1_1lib_1_1debug_1_1TypeDemangler.html</filename>
    <member kind="function">
      <type>ALIB_API</type>
      <name>TypeDemangler</name>
      <anchorfile>classaworx_1_1lib_1_1debug_1_1TypeDemangler.html</anchorfile>
      <anchor>a50473164c76c2778cc5f57069787bdf4</anchor>
      <arglist>(const std::type_info &amp;typeInfo)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API</type>
      <name>~TypeDemangler</name>
      <anchorfile>classaworx_1_1lib_1_1debug_1_1TypeDemangler.html</anchorfile>
      <anchor>a8b47c5fe16a1240753c4e081f8881d02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API const char *</type>
      <name>Get</name>
      <anchorfile>classaworx_1_1lib_1_1debug_1_1TypeDemangler.html</anchorfile>
      <anchor>ace8e490dc4ffb9dc13699e8976441ab5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const char *</type>
      <name>name</name>
      <anchorfile>classaworx_1_1lib_1_1debug_1_1TypeDemangler.html</anchorfile>
      <anchor>a8f8f80d37794cde9472343e4487ba3eb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::config::Variable</name>
    <filename>classaworx_1_1lib_1_1config_1_1Variable.html</filename>
    <member kind="variable">
      <type>String64</type>
      <name>Category</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Variable.html</anchorfile>
      <anchor>a8c631f86070de2671d699fc5ae45e0b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AString</type>
      <name>Comments</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Variable.html</anchorfile>
      <anchor>a13a7dbf15cba4c8849fdd8044b185475</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Configuration *</type>
      <name>Config</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Variable.html</anchorfile>
      <anchor>a2c37015bcce40f74f397f29ea050f251</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AString</type>
      <name>DefaultValue</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Variable.html</anchorfile>
      <anchor>ae4b47533ee1b78ad20c12f235d7ef958</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>Delim</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Variable.html</anchorfile>
      <anchor>a68297215ac82977611f5dee2062cc910</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FormatHints</type>
      <name>FmtHints</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Variable.html</anchorfile>
      <anchor>aeeb63df55d8032d350226d6e83729418</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String16</type>
      <name>FormatAttrAlignment</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Variable.html</anchorfile>
      <anchor>a6491695587581466d3a994ae5d9a11b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String64</type>
      <name>Fullname</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Variable.html</anchorfile>
      <anchor>aa676a8229f7ae9acf266bc2baffe0206</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String64</type>
      <name>Name</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Variable.html</anchorfile>
      <anchor>a1364de9681c92bfc759622ad829b842d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Priorities</type>
      <name>Priority</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Variable.html</anchorfile>
      <anchor>a785160bb624ffbba18242691580e55c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Variable</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Variable.html</anchorfile>
      <anchor>ad57a167cb505659893c09faa703a8ec5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Variable</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Variable.html</anchorfile>
      <anchor>a2569abce56b5db67e8c6d49c8ab7265c</anchor>
      <arglist>(const VariableDecl &amp;declaration, const StringTypes &amp;... replacements)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Variable</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Variable.html</anchorfile>
      <anchor>a8435d49e024fb58dbfd30cd6a3c64e34</anchor>
      <arglist>(const Variable &amp;variable)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Variable</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Variable.html</anchorfile>
      <anchor>aff970fdd81275808e2d9196c778db88b</anchor>
      <arglist>(const String &amp;category, const String &amp;name, char delim=&apos;\0&apos;, const String &amp;comments=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Variable</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Variable.html</anchorfile>
      <anchor>a7aa92a36124059f1f04033676ea0827a</anchor>
      <arglist>(TEnum declaration)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Variable</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Variable.html</anchorfile>
      <anchor>a879cf574221b0dd77fb6070aa26bd596</anchor>
      <arglist>(TEnum declaration, const StringTypes &amp;... replacements)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API AString &amp;</type>
      <name>Add</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Variable.html</anchorfile>
      <anchor>a8eb84f19805f775852bb4708e8b8823f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>Add</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Variable.html</anchorfile>
      <anchor>a11355a2d5bccd725abcb7ac5baa06327</anchor>
      <arglist>(const TApplicable &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Variable &amp;</type>
      <name>ClearValues</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Variable.html</anchorfile>
      <anchor>aa62ba4657e53457817abd37b52564195</anchor>
      <arglist>(int startIdx=0)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API Variable &amp;</type>
      <name>Declare</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Variable.html</anchorfile>
      <anchor>af8a6d9b6a1c6e6b4a570466200c75144</anchor>
      <arglist>(const VariableDecl &amp;declaration, std::vector&lt; String &gt; &amp;replacements)</arglist>
    </member>
    <member kind="function">
      <type>Variable &amp;</type>
      <name>Declare</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Variable.html</anchorfile>
      <anchor>a0ac0c58c9e4721d306b66107dcede4fb</anchor>
      <arglist>(const VariableDecl &amp;declaration, const StringTypes &amp;... replacements)</arglist>
    </member>
    <member kind="function">
      <type>Variable &amp;</type>
      <name>Declare</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Variable.html</anchorfile>
      <anchor>a070603b694149e85910d48ad40556f7c</anchor>
      <arglist>(TEnum declaration)</arglist>
    </member>
    <member kind="function">
      <type>Variable &amp;</type>
      <name>Declare</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Variable.html</anchorfile>
      <anchor>a80660fe203f650734cc02d54877922cb</anchor>
      <arglist>(TEnum declaration, const StringTypes &amp;... replacements)</arglist>
    </member>
    <member kind="function">
      <type>Variable &amp;</type>
      <name>Declare</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Variable.html</anchorfile>
      <anchor>a577b766f7205fa9ee0ca22a663e98265</anchor>
      <arglist>(const Variable &amp;variable)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API Variable &amp;</type>
      <name>Declare</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Variable.html</anchorfile>
      <anchor>a91b8e0ef4d6460041bc4a2f1dde60a86</anchor>
      <arglist>(const String &amp;category, const String &amp;name, char delim=&apos;\0&apos;, const String &amp;comments=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API bool</type>
      <name>GetAttribute</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Variable.html</anchorfile>
      <anchor>a2a45dba8091a0abcfd266a1fcfdb6484</anchor>
      <arglist>(const String &amp;attrName, strings::Substring &amp;result, char attrDelim=&apos;=&apos;)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API double</type>
      <name>GetFloat</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Variable.html</anchorfile>
      <anchor>aa99de88aa99017031d1bbe994a53bdeb</anchor>
      <arglist>(int idx=0)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API integer</type>
      <name>GetInteger</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Variable.html</anchorfile>
      <anchor>af54dd734574ed20197996004263487a2</anchor>
      <arglist>(int idx=0)</arglist>
    </member>
    <member kind="function">
      <type>AString *</type>
      <name>GetString</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Variable.html</anchorfile>
      <anchor>a5fda2a3b3daa10d3a33f0403aea47635</anchor>
      <arglist>(int idx=0)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API bool</type>
      <name>IsTrue</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Variable.html</anchorfile>
      <anchor>a1e0d6918b216f929312012d15d9175b9</anchor>
      <arglist>(int idx=0)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>ReplaceValue</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Variable.html</anchorfile>
      <anchor>af95f406a6786d68890403a03c98c0113</anchor>
      <arglist>(int idx, Variable &amp;replVariable)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Size</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Variable.html</anchorfile>
      <anchor>a24926108b770033792d015cb86aeffb3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>qtyValues</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Variable.html</anchorfile>
      <anchor>ab7456aa10da95e6821c3f6499edb9ddd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; AString &gt;</type>
      <name>values</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Variable.html</anchorfile>
      <anchor>a082c95cffd7b5ec8f2d19f8b8ba15575</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ALIB_API void</type>
      <name>clear</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1Variable.html</anchorfile>
      <anchor>ac8bb3912a3ce86b15842e79d0b421204</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::config::VariableDecl</name>
    <filename>structaworx_1_1lib_1_1config_1_1VariableDecl.html</filename>
    <member kind="typedef">
      <type>lang::T_EnumMetaDataSpecification&lt; VariableDecl &gt;::TTuple</type>
      <name>TTuple</name>
      <anchorfile>structaworx_1_1lib_1_1config_1_1VariableDecl.html</anchorfile>
      <anchor>a4dbc8e822ad16dd44d72ca71e0c04d73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TTuple</type>
      <name>Tuple</name>
      <anchorfile>structaworx_1_1lib_1_1config_1_1VariableDecl.html</anchorfile>
      <anchor>a6721f891e3a0b8cfc548529b6f439d65</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VariableDecl</name>
      <anchorfile>structaworx_1_1lib_1_1config_1_1VariableDecl.html</anchorfile>
      <anchor>a8c813e44de75068a29eb96b7f313b45b</anchor>
      <arglist>(String category, String name, String defaultValue, char delim, String formatAttrAlignment, FormatHints formatHints, String comments)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VariableDecl</name>
      <anchorfile>structaworx_1_1lib_1_1config_1_1VariableDecl.html</anchorfile>
      <anchor>ad84a1a4b08ee5dc6312e41817416ced4</anchor>
      <arglist>(TEnum declaration)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>Category</name>
      <anchorfile>structaworx_1_1lib_1_1config_1_1VariableDecl.html</anchorfile>
      <anchor>af4520bc8f5382c61bb35b480adbdd9fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>Comments</name>
      <anchorfile>structaworx_1_1lib_1_1config_1_1VariableDecl.html</anchorfile>
      <anchor>a711293de8c40f2e1b7827a7faf4a8fe5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>DefaultValue</name>
      <anchorfile>structaworx_1_1lib_1_1config_1_1VariableDecl.html</anchorfile>
      <anchor>a1d6d414565d6fd9fbb58bd97fa1810e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>Delim</name>
      <anchorfile>structaworx_1_1lib_1_1config_1_1VariableDecl.html</anchorfile>
      <anchor>a3cfc6560bfa761ac1b174f75cfdacdbe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FormatHints</type>
      <name>FmtHints</name>
      <anchorfile>structaworx_1_1lib_1_1config_1_1VariableDecl.html</anchorfile>
      <anchor>a70538b8837232f8cdda91cffd86a930e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>FormatAttrAlignment</name>
      <anchorfile>structaworx_1_1lib_1_1config_1_1VariableDecl.html</anchorfile>
      <anchor>ab3e995d4872dd8ddfcd1dce624eb3619</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>Name</name>
      <anchorfile>structaworx_1_1lib_1_1config_1_1VariableDecl.html</anchorfile>
      <anchor>a84968a8debf74d493fe9ece3fe316942</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lox::loggers::VStudioLogger</name>
    <filename>classaworx_1_1lox_1_1loggers_1_1VStudioLogger.html</filename>
    <base>aworx::lox::core::textlogger::PlainTextLogger</base>
    <member kind="function">
      <type>ALOX_API</type>
      <name>VStudioLogger</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1VStudioLogger.html</anchorfile>
      <anchor>aeee499182934b2b2708e1647818b62b1</anchor>
      <arglist>(const String &amp;name=nullptr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALOX_API</type>
      <name>~VStudioLogger</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1VStudioLogger.html</anchorfile>
      <anchor>a761045927d1191f0c3ba585104751952</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wchar_t *</type>
      <name>wCharBuffer</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1VStudioLogger.html</anchorfile>
      <anchor>a91eee64289a4ad8305ad6f78e85090c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>wCharBufferSize</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1VStudioLogger.html</anchorfile>
      <anchor>a097dc29175f1cb3e0a307177fca6f6f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ALIB_API integer</type>
      <name>logSubstring</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1VStudioLogger.html</anchorfile>
      <anchor>afe3923223ec9c1c1b5f77e5effcaca73</anchor>
      <arglist>(const String &amp;buffer, integer start, integer length)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ALIB_API bool</type>
      <name>notifyLogOp</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1VStudioLogger.html</anchorfile>
      <anchor>a883624bfdbedf434421f38c800cc61f5</anchor>
      <arglist>(lib::lang::Phase phase)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ALOX_API void</type>
      <name>notifyMultiLineOp</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1VStudioLogger.html</anchorfile>
      <anchor>a6a9475ead1ce56edfc978160d9937d63</anchor>
      <arglist>(lib::lang::Phase)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::util::StringTree::Walker</name>
    <filename>classaworx_1_1lib_1_1util_1_1StringTree_1_1Walker.html</filename>
    <class kind="struct">aworx::lib::util::StringTree::Walker::RecursionData</class>
    <class kind="struct">aworx::lib::util::StringTree::Walker::Sorter</class>
    <member kind="function">
      <type></type>
      <name>Walker</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Walker.html</anchorfile>
      <anchor>aed3db52fc5fb26185fddd3435aeb73ac</anchor>
      <arglist>(StringTree *_stringTree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Walker</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Walker.html</anchorfile>
      <anchor>abda69cae6ab2acbb704b3123e425bd83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Depth</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Walker.html</anchorfile>
      <anchor>a72fdcb31622fdd4b1197a207a6a6685e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Cursor</type>
      <name>GetCursor</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Walker.html</anchorfile>
      <anchor>a02d96da317082d42803794d2fbfe121f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AString &amp;</type>
      <name>GetPath</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Walker.html</anchorfile>
      <anchor>acb1bd0f66888b3d9c10b573503fb9965</anchor>
      <arglist>(AString &amp;target, CurrentData targetData=CurrentData::Clear)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>GetPathToNode</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Walker.html</anchorfile>
      <anchor>ad2bf1b9cd6730d20c29d23d3ff546472</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StringTree &amp;</type>
      <name>GetStringTree</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Walker.html</anchorfile>
      <anchor>aea0054286adc014b8b284ebfc31db385</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Invalidate</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Walker.html</anchorfile>
      <anchor>ab9adfea0e765ab447b8ce7730a6cd812</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsInValid</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Walker.html</anchorfile>
      <anchor>a45a55b577ab446624b703ff4bf726926</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsValid</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Walker.html</anchorfile>
      <anchor>ac532c4b500b1a85ea22217f2c65a70ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>Name</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Walker.html</anchorfile>
      <anchor>a0e5b1128eca23e746052102f3f5da3bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Next</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Walker.html</anchorfile>
      <anchor>a3947d19ac087ef2cd68c2409920339c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>operator*</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Walker.html</anchorfile>
      <anchor>a540e5588dffde890174a282451f73fb9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PathGeneration</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Walker.html</anchorfile>
      <anchor>a64e238d38a1f356bd6cea296bce93911</anchor>
      <arglist>(Switch generatePath)</arglist>
    </member>
    <member kind="function">
      <type>StdIterator &amp;</type>
      <name>SetIterator</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Walker.html</anchorfile>
      <anchor>a99bcae7fcb22ef864d4117c7bff0aab8</anchor>
      <arglist>(StdIterator &amp;it, int _recursionDepth=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRecursionDepth</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Walker.html</anchorfile>
      <anchor>a6c20c57704dd86f356475c00baa000ca</anchor>
      <arglist>(int _recursionDepth)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStart</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Walker.html</anchorfile>
      <anchor>abca5d5e1c5d92a7ed7ec223cdf2f24f5</anchor>
      <arglist>(StringTree *pm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStart</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Walker.html</anchorfile>
      <anchor>a801bc5e67c8af473e7d82001f5f53d34</anchor>
      <arglist>(Cursor cursor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStart</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Walker.html</anchorfile>
      <anchor>a9e7e87fb564e1188d0c90ee82a0895d5</anchor>
      <arglist>(StdIterator &amp;it)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStart</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Walker.html</anchorfile>
      <anchor>a5ed3ffdb311fab7a802993e37c0b2c57</anchor>
      <arglist>(Walker &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Size</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Walker.html</anchorfile>
      <anchor>af40990b9bd3d70d30e8ce7cdda1ad56f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Skip</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Walker.html</anchorfile>
      <anchor>a6f9a70e22db597ca69797f5cc7243f6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SortByPathname</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Walker.html</anchorfile>
      <anchor>aea47d131f21de7e5ad249dbef0392650</anchor>
      <arglist>(SortOrder order=SortOrder::Ascending, Case sensitivity=Case::Ignore)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SortByPathname</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Walker.html</anchorfile>
      <anchor>a10e565569496ecb5e4388e6491bb82b5</anchor>
      <arglist>(bool(*pathSorter)(const String &amp;, const String &amp;))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SortByValue</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Walker.html</anchorfile>
      <anchor>afa9982c792ea9f2f50cf94cb961b33fb</anchor>
      <arglist>(bool(*valueSorter)(const T &amp;, const T &amp;))</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>StringTree</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Walker.html</anchorfile>
      <anchor>aa42c89c0eaa357d95820842673034eed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AString</type>
      <name>actPath</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Walker.html</anchorfile>
      <anchor>a59910a8fc21cdcafcd9e7ff1597014ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>recursionDepth</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Walker.html</anchorfile>
      <anchor>a9a1951fdc18bdd21f3de11073fc7fcfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Sorter</type>
      <name>sorter</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Walker.html</anchorfile>
      <anchor>a8e66900276295535a5228ffb2aa9230a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; RecursionData &gt;</type>
      <name>stack</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Walker.html</anchorfile>
      <anchor>a666522b478075da983dd563dc99ee2cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>stackSize</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Walker.html</anchorfile>
      <anchor>a46e5dff29239c8fa0aa9a630df41494a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>StringTree *</type>
      <name>stringTree</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Walker.html</anchorfile>
      <anchor>a836095184e69ee547f80ebf11de862d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Node *</type>
      <name>actNode</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Walker.html</anchorfile>
      <anchor>ae62f2661d9a767ee0c15664c0d0a7c72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setStart</name>
      <anchorfile>classaworx_1_1lib_1_1util_1_1StringTree_1_1Walker.html</anchorfile>
      <anchor>a9af457a291745d735711a8e2c95dbb82</anchor>
      <arglist>(typename StringTree::Node *newNode)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::strings::util::WildcardMatcher</name>
    <filename>classaworx_1_1lib_1_1strings_1_1util_1_1WildcardMatcher.html</filename>
    <member kind="function">
      <type></type>
      <name>WildcardMatcher</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1WildcardMatcher.html</anchorfile>
      <anchor>ab728dcfe9744ad0d083d314d94afce8f</anchor>
      <arglist>(const String &amp;pattern=NullString)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>Compile</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1WildcardMatcher.html</anchorfile>
      <anchor>aecd73a69f0f75834e8dabe97e83e0e72</anchor>
      <arglist>(const String &amp;pattern)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API bool</type>
      <name>Match</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1WildcardMatcher.html</anchorfile>
      <anchor>a448383bee97e82227dff03c9f52448c0</anchor>
      <arglist>(const String &amp;haystack, Case sensitivity=Case::Sensitive)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::pair&lt; int, String &gt; &gt;</type>
      <name>commands</name>
      <anchorfile>classaworx_1_1lib_1_1strings_1_1util_1_1WildcardMatcher.html</anchorfile>
      <anchor>a4261806403f33f790a35783c4ba6ae20</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lox::loggers::WindowsConsoleLogger</name>
    <filename>classaworx_1_1lox_1_1loggers_1_1WindowsConsoleLogger.html</filename>
    <base>aworx::lox::core::textlogger::TextLogger</base>
    <member kind="variable">
      <type>UINT</type>
      <name>CodePage</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1WindowsConsoleLogger.html</anchorfile>
      <anchor>ac47fdc0badba5fd9ada1680d8d2b3304</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LightColorUsage</type>
      <name>UseLightColors</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1WindowsConsoleLogger.html</anchorfile>
      <anchor>ab96a9606e7469811d93adb75f3a26ad4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ALOX_API</type>
      <name>WindowsConsoleLogger</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1WindowsConsoleLogger.html</anchorfile>
      <anchor>ababff47d22b9b979460f912912011682</anchor>
      <arglist>(const String &amp;name=nullptr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALOX_API</type>
      <name>~WindowsConsoleLogger</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1WindowsConsoleLogger.html</anchorfile>
      <anchor>a990f689b5da69d74661c6798eda75364</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>WORD</type>
      <name>originalConsoleAttributes</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1WindowsConsoleLogger.html</anchorfile>
      <anchor>a149584f1eda778dd1322190ddd5b00de</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ALOX_API void</type>
      <name>logText</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1WindowsConsoleLogger.html</anchorfile>
      <anchor>aa7e70b90717f0429abf0990e5e12ad9f</anchor>
      <arglist>(core::Domain &amp;domain, Verbosity verbosity, AString &amp;msg, core::ScopeInfo &amp;scope, int lineNumber)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ALOX_API void</type>
      <name>notifyMultiLineOp</name>
      <anchorfile>classaworx_1_1lox_1_1loggers_1_1WindowsConsoleLogger.html</anchorfile>
      <anchor>a6a9475ead1ce56edfc978160d9937d63</anchor>
      <arglist>(lib::lang::Phase)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::lang::detail::WrappedTypeInfoHasher</name>
    <filename>structaworx_1_1lib_1_1lang_1_1detail_1_1WrappedTypeInfoHasher.html</filename>
    <member kind="function">
      <type>std::size_t</type>
      <name>operator()</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1detail_1_1WrappedTypeInfoHasher.html</anchorfile>
      <anchor>a4d3e005dda3b40c9a4268b554d7f9c91</anchor>
      <arglist>(WrappedTypeInfo typeinfo) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>aworx::lib::lang::detail::WrappedTypeInfoPredEqualTo</name>
    <filename>structaworx_1_1lib_1_1lang_1_1detail_1_1WrappedTypeInfoPredEqualTo.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structaworx_1_1lib_1_1lang_1_1detail_1_1WrappedTypeInfoPredEqualTo.html</anchorfile>
      <anchor>ab04dd46e9853f47dafe599d85b2de9bf</anchor>
      <arglist>(WrappedTypeInfo lhs, WrappedTypeInfo rhs) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>aworx::lib::config::XTernalizer</name>
    <filename>classaworx_1_1lib_1_1config_1_1XTernalizer.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~XTernalizer</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1XTernalizer.html</anchorfile>
      <anchor>a9fc1e4753100036b0e6250c4bca1a090</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API void</type>
      <name>ExternalizeValue</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1XTernalizer.html</anchorfile>
      <anchor>ac028e93dccee5716835072185c65a0af</anchor>
      <arglist>(Substring &amp;src, AString &amp;dest, char delim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API void</type>
      <name>InternalizeValue</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1XTernalizer.html</anchorfile>
      <anchor>a2a51acb7abba2b88df033efbcc356f92</anchor>
      <arglist>(Substring &amp;src, AString &amp;dest)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ALIB_API void</type>
      <name>LoadFromString</name>
      <anchorfile>classaworx_1_1lib_1_1config_1_1XTernalizer.html</anchorfile>
      <anchor>adeb8b4a1df5c756294f6c354b5d185e4</anchor>
      <arglist>(Variable &amp;variable, const String &amp;src)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>aworx</name>
    <filename>namespaceaworx.html</filename>
    <namespace>aworx::lib</namespace>
    <namespace>aworx::literals</namespace>
    <namespace>aworx::lox</namespace>
    <member kind="typedef">
      <type>aworx::lib::ALib</type>
      <name>ALib</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a64f75e0bd4cad92e475ad9a92812ecf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::Alignment</type>
      <name>Alignment</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a7a2db0a65737b15857077150566e85b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lox::ALox</type>
      <name>ALox</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a4d5353279fde6a5d6e5b1c8e776abf66</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lox::ALoxReportWriter</type>
      <name>ALoxReportWriter</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ab080a8382b8714cf6776bf5918e3b894</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lox::loggers::AnsiConsoleLogger</type>
      <name>AnsiConsoleLogger</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a1ea18f3cfd0faa27d99ecc1c9532b445</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lox::loggers::AnsiLogger</type>
      <name>AnsiLogger</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>afbcb9cbc8853ce81a9d690e2a8923889</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::AString</type>
      <name>AString</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a51ace28d988aa0a7ab391f6aaec35f60</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::util::AutoSizes</type>
      <name>AutoSizes</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a05f64048544b942ed91dff1a90fd734d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::Bool</type>
      <name>Bool</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ae470e0051ffb5de1b90e9787d50476d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::boxing::Box</type>
      <name>Box</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>af923f654916f15a4287246e5bb3beabb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::boxing::ftypes::boxed_int</type>
      <name>boxed_int</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ae3275727f1c6ee612615d3c881610d61</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::boxing::ftypes::boxed_uint</type>
      <name>boxed_uint</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a7ce7b3f615ad2b8992291d1692b8691e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::boxing::BoxedAs&lt; Type &gt;</type>
      <name>BoxedAs</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a76b064b4620c8d0e669796405dce6378</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::boxing::Boxes</type>
      <name>Boxes</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a13da4402eea5d25b5fbddc19c3605e22</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::time::CalendarTime</type>
      <name>CalendarTime</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ae63e36615665781b2ebf0e40e8841578</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::Case</type>
      <name>Case</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>adcd43e032e2fb23c28fb20d22ccd2382</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::config::Config</type>
      <name>Config</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a3ac3cce0d261b57a96a1f624cb858cb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::config::Configuration</type>
      <name>Configuration</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a9b321d2f72b975b304aa678e20344e7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lox::loggers::ConsoleLogger</type>
      <name>ConsoleLogger</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>acfbbfc11d98646c37dbf27e3ede11644</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::ContainerOp</type>
      <name>ContainerOp</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>aab5bf6a8650ce22362cd2b96e2d40b10</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::Create</type>
      <name>Create</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ae64bb52191bb90603991a2bf50392ea9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::CurrentData</type>
      <name>CurrentData</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a10d457b73440d2da4073ef7e42c6aebd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::system::Directory</type>
      <name>Directory</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ae59166dff4149598acd5f636fe6760d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::Enum</type>
      <name>Enum</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a207e55188f91f9d8cff9e1a1614dafc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::EnumIterator&lt; TEnum, TEnableIf &gt;</type>
      <name>EnumIterator</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>aa5b7b2ae7667bce545f42c135526e399</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>lib::lang::EnumMetaData&lt; TEnum &gt;</type>
      <name>EnumMetaData</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a643a34f30d7710fecf5c958924471206</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>lib::lang::EnumReadWriteInfo&lt; TEnum &gt;</type>
      <name>EnumReadWriteInfo</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ad5a4650e15991a20f81d933da4ce2787</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lox::ESC</type>
      <name>ESC</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a41196e8ca29644376437095a102ad9ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::Exception</type>
      <name>Exception</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>af66f71fa3d551b47f0a968567a511770</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::Format</type>
      <name>Format</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>aed5a5fab6b4a0c81a5a231f6d0379d41</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::format::Formatter</type>
      <name>Formatter</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a8a886b94242bc07b7074667aa0a8f0dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::format::FormatterJavaStyle</type>
      <name>FormatterJavaStyle</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>af92291820cffb4092194bf724723f943</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::format::FormatterPythonStyle</type>
      <name>FormatterPythonStyle</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>aaa224c25fc78d8c161dda09c9500a3d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::format::FormatterStdImpl</type>
      <name>FormatterStdImpl</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a584aa13a9fcffa31b55501b3982f0074</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::boxing::IApply</type>
      <name>IApply</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>af231913c4b88a341cf804f9fedf38adb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::boxing::IEquals</type>
      <name>IEquals</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ad2a6bc6649fc6c466eea78e6cc2adaf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::boxing::IIsEmpty</type>
      <name>IIsEmpty</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ae6997e75801a3dcdc3a80cec77b1a62f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::boxing::IIsLess</type>
      <name>IIsLess</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a95d240a6fb229f764a5176d6ec15ec41</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::boxing::IIsNull</type>
      <name>IIsNull</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a95b27610e38c813268b4a843ef5ef173</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::boxing::IIsTrue</type>
      <name>IIsTrue</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a8eed3b07a321612dad1f80d59cafd8ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::Inclusion</type>
      <name>Inclusion</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a934720ec6a941ba8927467c410f9783c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::config::IniFile</type>
      <name>IniFile</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>aef31dd55ee6403c15d9ba93325d3333d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::config::InMemoryPlugin</type>
      <name>InMemoryPlugin</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a5acd1ac5b29f64268c6bd7dea9e3a3bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::integer</type>
      <name>integer</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a2597f1982b18ebe4ea9e55b914bc49b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::boxing::Interface</type>
      <name>Interface</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>aef105b1e431c10dcbb5691cb9814cac8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::intGap_t</type>
      <name>intGap_t</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>adea1bda61bf659bfe398c7f2f13242df</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::Library</type>
      <name>Library</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ad80f5a35cfcaa40fcf9bb8a33c5e10ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::LockMode</type>
      <name>LockMode</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>aff7243ab824f2f6d05a138c15f2733ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lox::Log</type>
      <name>Log</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a5d8a9ca518e5abc7446b6a753e2b7ae6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lox::core::Logger</type>
      <name>Logger</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a8ec4a1b5f5786befe04b9f08d5417cdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lox::LogTools</type>
      <name>LogTools</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a6055ab84a2d598896f00d8cea50e7497</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lox::Lox</type>
      <name>Lox</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>abf1258bbd9cf9772a1559f4ceb37fde4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::util::MemoryBlocks</type>
      <name>MemoryBlocks</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a11f6cf54ed2fafb1fe0aa2c283278bdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lox::loggers::MemoryLogger</type>
      <name>MemoryLogger</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>aff4e02a238ba03a98be3dd17d783f336</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::NumberFormat</type>
      <name>NumberFormat</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a4105ad142b7282bab44c0f051d36e350</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::Phase</type>
      <name>Phase</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a4c5a62df6ce3760e0672fb1f646327cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::PreallocatedString&lt; TCapacity &gt;</type>
      <name>PreallocatedString</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a2e838e65c7df891455e0466be710839f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::config::Priorities</type>
      <name>Priorities</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>aef391b8d0a94cf4a138d5f8234e6fe51</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::system::ProcessInfo</type>
      <name>ProcessInfo</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a8644368b56cf61a16e37300584a1d4e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::Propagation</type>
      <name>Propagation</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a50769d759702817f6ed82fcf71854408</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::format::PropertyFormatter&lt; TFormattable, TESCIdentifier &gt;</type>
      <name>PropertyFormatter</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ad8b065cc5a654e62af1757806ff0078b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::format::PropertyFormatters&lt; TFormattable, TOptionEnum &gt;</type>
      <name>PropertyFormatters</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>afcfb320d03e901947fb36bacc4f1a1f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::Reach</type>
      <name>Reach</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a7a83f9bd51ff561df1e199546542229f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::util::RegexMatcher</type>
      <name>RegexMatcher</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>afad591fcfec5100ba9ae2286c55500e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::ResourceString</type>
      <name>ResourceString</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a187e8487d31039acc3213da6a0b33c8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::Responsibility</type>
      <name>Responsibility</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a3671252255ccd69a9165a3cc752cb73e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::threads::Runnable</type>
      <name>Runnable</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>af259362a7fa123eef74daaf4036e02a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::Safeness</type>
      <name>Safeness</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>aa79d65dae6fee850c4a638c5bb26b1e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lox::Scope</type>
      <name>Scope</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>aef58f56e96f194bf0b5f765175f6ebd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::format::SimpleText</type>
      <name>SimpleText</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ae2181ebba476f42e5f64541c40880913</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::Singleton&lt; T &gt;</type>
      <name>Singleton</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a853db7b4d3eea2d12c2aef317b6110ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::StringLiteral&lt; TLength &gt;</type>
      <name>SLiteral</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>af631a26bf70ad6d6143973fadf779747</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::threads::SmartLock</type>
      <name>SmartLock</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>aee1cd004a3010e8ee798517d96c1ffca</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::SortOrder</type>
      <name>SortOrder</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a086789c0b56e605b79bf57d0fd53b306</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::SourceData</type>
      <name>SourceData</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>acdb8e25ed050d0001a0389e38aa5ef75</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::util::Spaces</type>
      <name>Spaces</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a9f69e16cb165fb1d0263890b165a5613</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::time::StopWatch</type>
      <name>StopWatch</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a0a33224c071d1e29e6169e93249001e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::String</type>
      <name>String</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ad13481d84c6e592a41d07c64f747c95d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::PreallocatedString&lt; 128 &gt;</type>
      <name>String128</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a2841f1443c3b2f3d6066d5774cf69dbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::PreallocatedString&lt; 16 &gt;</type>
      <name>String16</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a148a217c34a72b4360462205858b8f0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::PreallocatedString&lt; 1024 &gt;</type>
      <name>String1K</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a82395a8f3fac47787ebe8749679a2796</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::PreallocatedString&lt; 256 &gt;</type>
      <name>String256</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a152f787b6dac47dd3f94ae5ebf1ece53</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::PreallocatedString&lt; 2048 &gt;</type>
      <name>String2K</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a76f69ad445caecfbf03351c884637b09</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::PreallocatedString&lt; 32 &gt;</type>
      <name>String32</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a221752691fb92bcd592c045d6c368289</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::PreallocatedString&lt; 4096 &gt;</type>
      <name>String4K</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a772f06f37ace5e2b2eb8cafc0c859c44</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::PreallocatedString&lt; 512 &gt;</type>
      <name>String512</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>af634b7550d8a316ce3cf3fb6f9e86079</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::PreallocatedString&lt; 64 &gt;</type>
      <name>String64</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ac2fdc487456a994238ba4284b3859c41</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::PreallocatedString&lt; 8 &gt;</type>
      <name>String8</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ab35696c2e8d79567a528a4b6da788eb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::Strings</type>
      <name>Strings</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a3c0dd4e93e0c8297a10ca98eff7e4ea7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::util::StringTable&lt; TAssociatedTypes... &gt;</type>
      <name>StringTable</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a3e978518419b8c970cdfd8a30af02250</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::util::StringTree&lt; T, TKeyAllocator &gt;</type>
      <name>StringTree</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a3f529e3fce337b034a15d71babf9f109</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::Substring</type>
      <name>Substring</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>afed2e22d908094b0badbf8ac4d5f3900</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::Switch</type>
      <name>Switch</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a68e1ec4ff4ca04def6fdd7fe217a245a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::system::System</type>
      <name>System</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>aea0af9d6b00ede1a16d0af24fdaeebe0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;</type>
      <name>T_EnumIsArithmetical</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a4ef0c1ae06e0ec4aaf4fa06db3764aaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>lib::lang::T_EnumIsBitwise&lt; TEnum &gt;</type>
      <name>T_EnumIsBitwise</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>afa213b2093410bd18e8cfa3466ba7991</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>lib::lang::T_EnumMetaDataDecl&lt; TEnum &gt;</type>
      <name>T_EnumMetaDataDecl</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a3a1673dfc99d9c6ada6e55688118987f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>lib::lang::T_EnumMetaDataDeclReadWrite&lt; TEnum &gt;</type>
      <name>T_EnumMetaDataDeclReadWrite</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>af96cbbf66e47ab524a037add74068028</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lox::loggers::TextFileLogger</type>
      <name>TextFileLogger</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ae64ac3b33c7c180e92559a869977fda0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lox::core::textlogger::TextLogger</type>
      <name>TextLogger</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a8d1a5942495395f77e31bb5d451c332b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::threads::Thread</type>
      <name>Thread</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a42fe02133ffe8b203c4aa204d2114d49</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::threads::ThreadLock</type>
      <name>ThreadLock</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ad941b2cb61bade9aa2478dd063154d33</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::threads::ThreadLockNR</type>
      <name>ThreadLockNR</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>adb7e18c3a3777faf17dde8a543e30a27</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::time::Ticks</type>
      <name>Ticks</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ad270463709a4ae7e7098df40e803e458</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::time::TicksCalendarTime</type>
      <name>TicksCalendarTime</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a0607ccd659418fa7cb9922b2c4ba5f1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::time::TickSpan</type>
      <name>TickSpan</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a7b85567c52aa0abc2531be7a2a7f887f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::time::TickWatch</type>
      <name>TickWatch</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a4d4926218d664dabc231ce5cf0c19afc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::time::TimeSpan</type>
      <name>TimeSpan</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ac4d5288b8072f0241d0599ff7d61d01a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::time::TimeStamp</type>
      <name>TimeStamp</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a5ace2d97050844fa3fae54664fc60623</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::Timezone</type>
      <name>Timezone</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a1502492c46a08f4f2c114afd9bb7604c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::util::Tokenizer</type>
      <name>Tokenizer</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a2c2d5fb0afae1a62f9a9181e69db8349</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::TString</type>
      <name>TString</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>af01fde7c67b5f30027a4135222bbde31</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unordered_map&lt; lib::lang::detail::WrappedTypeInfo, T, lib::lang::detail::WrappedTypeInfoHasher, lib::lang::detail::WrappedTypeInfoPredEqualTo &gt;</type>
      <name>TypeMap</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ac6a830d17aea9f0c590128b88affdc5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::uinteger</type>
      <name>uinteger</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>af7f6fc630240316d5f04a4d5d7f331ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::uintGap_t</type>
      <name>uintGap_t</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a34d1e1a0600952dbf9f562aed36b873f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unordered_map&lt; AString, TValue, lib::strings::std_AStringHash, lib::strings::std_AStringEquals &gt;</type>
      <name>UnorderedAStringMap</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>aa218e0dc317b260e8ece593569c00295</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unordered_map&lt; AString, TValue, lib::strings::std_AStringHashIgnoreCase, lib::strings::std_AStringEqualsIgnoreCase &gt;</type>
      <name>UnorderedAStringMapIgnoreCase</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ae21149fd606be5a91866c806a776a279</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unordered_map&lt; Box, TValue, lib::boxing::std_Hash, lib::boxing::std_Equals &gt;</type>
      <name>UnorderedBoxMap</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a934e14062eb77d29860412391c841690</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unordered_map&lt; Enum, TValue, lib::lang::std_EnumHash, lib::lang::std_EnumEquals &gt;</type>
      <name>UnorderedEnumMap</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a9ea5024838e57312f729f902cfe5382e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unordered_map&lt; String, TValue, lib::strings::std_StringHash, lib::strings::std_StringEquals &gt;</type>
      <name>UnorderedStringMap</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>acfa5286c9924bb6d00f350f7bfd97b5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unordered_map&lt; String, TValue, lib::strings::std_StringHashIgnoreCase, lib::strings::std_StringEqualsIgnoreCase &gt;</type>
      <name>UnorderedStringMapIgnoreCase</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a28589e749d035b0fc469513c5f3346b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::config::Variable</type>
      <name>Variable</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ac401c755579f3ba09fd64599ada969cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::config::VariableDecl</type>
      <name>VariableDecl</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a2d25c53fd4832b8d01f5d3c574b74ec6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lox::Verbosity</type>
      <name>Verbosity</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>aa10bcb350ba5320cadb5dff6b8e2da6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lox::loggers::VStudioLogger</type>
      <name>VStudioLogger</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a747899e07def7493ae65c9569a5dc879</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::lang::Whitespaces</type>
      <name>Whitespaces</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a48b158f1a264112a9b35979d369647cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lib::strings::util::WildcardMatcher</type>
      <name>WildcardMatcher</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ae64489804030f43a3935ba1edb687453</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>aworx::lox::loggers::WindowsConsoleLogger</type>
      <name>WindowsConsoleLogger</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ad427fd161e0ad8bd4c8835c5a643cc3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr lib::strings::StringLiteral&lt; 4 &gt;</type>
      <name>DefaultWhitespaces</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a5feaaf6a8fb11e8ebbb0013ec9f27b01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr char</type>
      <name>DirectorySeparator</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>af71d56959787ac2eca9b0af4b02a7cec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr lib::strings::String</type>
      <name>EmptyString</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>a3372961a8fb9d30455267babb4e6c26c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr lib::strings::StringLiteral&lt; 2 &gt;</type>
      <name>NewLine</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>aa10e6e7d79efb2051b5e761d6980ab6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr lib::strings::String</type>
      <name>NullString</name>
      <anchorfile>namespaceaworx.html</anchorfile>
      <anchor>ab1ed6dcfbe4628dccefbdb5633b1bf01</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="namespaceaworx">CPP_AWORX_NS_SHORTCUTS</docanchor>
  </compound>
  <compound kind="namespace">
    <name>aworx::lib</name>
    <filename>namespaceaworx_1_1lib.html</filename>
    <namespace>aworx::lib::boxing</namespace>
    <namespace>aworx::lib::config</namespace>
    <namespace>aworx::lib::debug</namespace>
    <namespace>aworx::lib::detail</namespace>
    <namespace>aworx::lib::lang</namespace>
    <namespace>aworx::lib::strings</namespace>
    <namespace>aworx::lib::system</namespace>
    <namespace>aworx::lib::threads</namespace>
    <namespace>aworx::lib::time</namespace>
    <namespace>aworx::lib::util</namespace>
    <class kind="class">aworx::lib::ALib</class>
    <member kind="enumeration">
      <type></type>
      <name>Variables</name>
      <anchorfile>namespaceaworx_1_1lib.html</anchorfile>
      <anchor>a382a38852335f58a53739d455c7d67c9</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib.html" anchor="a382a38852335f58a53739d455c7d67c9a175d5afd5eed05a9553f94bbecd80a19">LOCALE</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib.html" anchor="a382a38852335f58a53739d455c7d67c9ad954142e6b2438f23548596d3051f9ea">WAIT_FOR_KEY_PRESS</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib.html" anchor="a382a38852335f58a53739d455c7d67c9a069e3d8e83ed5666e104a6a6f6dcb634">HAS_CONSOLE_WINDOW</enumvalue>
    </member>
    <member kind="variable">
      <type>ALIB_API ALib</type>
      <name>ALIB</name>
      <anchorfile>namespaceaworx_1_1lib.html</anchorfile>
      <anchor>a82d1f1a7a150abed28776bc5c8df9fa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boxing::Boxing</type>
      <name>BOXING</name>
      <anchorfile>namespaceaworx_1_1lib.html</anchorfile>
      <anchor>a80fa465a7f7929f6c478da90ea82f33f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>config::Config</type>
      <name>CONFIG</name>
      <anchorfile>namespaceaworx_1_1lib.html</anchorfile>
      <anchor>ae6be4b8444b417104c8f9696ecc0f4a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>lang::Lang</type>
      <name>LANG</name>
      <anchorfile>namespaceaworx_1_1lib.html</anchorfile>
      <anchor>a549dea7bf1e3a136dc14e77e96ac2b2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>strings::Strings</type>
      <name>STRINGS</name>
      <anchorfile>namespaceaworx_1_1lib.html</anchorfile>
      <anchor>a5be66d683ca1ea4a6aefde97d4677b00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>system::System</type>
      <name>SYSTEM</name>
      <anchorfile>namespaceaworx_1_1lib.html</anchorfile>
      <anchor>a022ea76f2112c21695e4ab0ae5dbc0de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>threads::Threads</type>
      <name>THREADS</name>
      <anchorfile>namespaceaworx_1_1lib.html</anchorfile>
      <anchor>a2e2672eedb93d516b1696f3e692e40a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>time::TimeLib</type>
      <name>TIME</name>
      <anchorfile>namespaceaworx_1_1lib.html</anchorfile>
      <anchor>a0d2c9b08b32b399ab8df65df9ad48574</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="namespaceaworx_1_1lib">alib_namespace_organization_of_code</docanchor>
  </compound>
  <compound kind="namespace">
    <name>aworx::lib::boxing</name>
    <filename>namespaceaworx_1_1lib_1_1boxing.html</filename>
    <namespace>aworx::lib::boxing::ftypes</namespace>
    <namespace>aworx::lib::boxing::thirdparty</namespace>
    <class kind="class">aworx::lib::boxing::ArrayBoxerT</class>
    <class kind="class">aworx::lib::boxing::Box</class>
    <class kind="struct">aworx::lib::boxing::BoxData</class>
    <class kind="class">aworx::lib::boxing::BoxedAs</class>
    <class kind="class">aworx::lib::boxing::Boxer</class>
    <class kind="class">aworx::lib::boxing::BoxerT</class>
    <class kind="class">aworx::lib::boxing::Boxes</class>
    <class kind="class">aworx::lib::boxing::Boxing</class>
    <class kind="class">aworx::lib::boxing::IEquals</class>
    <class kind="class">aworx::lib::boxing::IEquals_TComparable</class>
    <class kind="class">aworx::lib::boxing::IIsEmpty</class>
    <class kind="class">aworx::lib::boxing::IIsLess</class>
    <class kind="class">aworx::lib::boxing::IIsNull</class>
    <class kind="class">aworx::lib::boxing::IIsNull_false</class>
    <class kind="class">aworx::lib::boxing::IIsTrue</class>
    <class kind="class">aworx::lib::boxing::Interface</class>
    <class kind="struct">aworx::lib::boxing::std_Equals</class>
    <class kind="struct">aworx::lib::boxing::std_Hash</class>
    <class kind="struct">aworx::lib::boxing::T_Boxing</class>
    <class kind="struct">aworx::lib::boxing::T_Boxing&lt; BoxedAs&lt; TBoxed &gt; &gt;</class>
    <class kind="struct">aworx::lib::boxing::T_Boxing&lt; std::vector&lt; TElem &gt; &gt;</class>
    <member kind="typedef">
      <type>uint64_t</type>
      <name>boxvalue</name>
      <anchorfile>namespaceaworx_1_1lib_1_1boxing.html</anchorfile>
      <anchor>aa3e009a14ed9d13b3f9cfac1ac29bee5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DefaultBoxing</name>
      <anchorfile>namespaceaworx_1_1lib_1_1boxing.html</anchorfile>
      <anchor>aa505e0719cf0f7cdca5da2e34aa0081d</anchor>
      <arglist>(Box &amp;, const TBoxable &amp;)</arglist>
    </member>
    <member kind="function">
      <type>TBoxable</type>
      <name>DefaultUnboxing</name>
      <anchorfile>namespaceaworx_1_1lib_1_1boxing.html</anchorfile>
      <anchor>a28b628b92185f310ea42b146c15b9ce1</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DefineDefaultInterface</name>
      <anchorfile>namespaceaworx_1_1lib_1_1boxing.html</anchorfile>
      <anchor>a37543d2ad623b3940e735b122fe5d586</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DefineInterface</name>
      <anchorfile>namespaceaworx_1_1lib_1_1boxing.html</anchorfile>
      <anchor>aa1f769d5f1032bc1cc569f4353f9ccd8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InitQTString</name>
      <anchorfile>namespaceaworx_1_1lib_1_1boxing.html</anchorfile>
      <anchor>abb1411d8d90e41eb7a84088c30da5011</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr integer</type>
      <name>T_SetArraySize</name>
      <anchorfile>namespaceaworx_1_1lib_1_1boxing.html</anchorfile>
      <anchor>a8a046ed78c26c56f05dfe236e40c136b</anchor>
      <arglist>(integer arrayExtent)</arglist>
    </member>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_prerequisites</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_prereq_modules</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_prereq_unittests</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_prereq_reading</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_intro</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_intro_goals</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_intro_boxing</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_intro_cpp</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_intro_templated</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_basics</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_basics_tmp</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_basics_boxer</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_basics_boxdata</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_basics_dots</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_basics_nonbij</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_types</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_types_arrays</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_types_ftypes</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_types_nonunboxable</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_types_enums</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_types_boxedas</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_interfaces</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_interfaces_sample</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_interfaces_default</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_interfaces_built-in</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_interfaces_change</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_strings</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_strings_chararr</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_strings_lw_vs_hvy</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_strings_iapply</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_strings_iformat</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_strings_custom</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_variadic</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_variadic_standard</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_variadic_class_boxes</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_usage</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_usage_bootstrap</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_usage_3rdparty</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_usage_lifecycle</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_usage_performance</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_usage_dump</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1boxing">alib_namespace_boxing_summary</docanchor>
  </compound>
  <compound kind="namespace">
    <name>aworx::lib::boxing::ftypes</name>
    <filename>namespaceaworx_1_1lib_1_1boxing_1_1ftypes.html</filename>
    <class kind="class">aworx::lib::boxing::ftypes::IEquals_Tchar16_tArr</class>
    <class kind="class">aworx::lib::boxing::ftypes::IEquals_Tchar32_tArr</class>
    <class kind="class">aworx::lib::boxing::ftypes::IEquals_TcharArr</class>
    <class kind="class">aworx::lib::boxing::ftypes::IEquals_Tdouble</class>
    <class kind="class">aworx::lib::boxing::ftypes::IEquals_Twchar_tArr</class>
    <class kind="class">aworx::lib::boxing::ftypes::IIsLess_boxed_int</class>
    <class kind="class">aworx::lib::boxing::ftypes::IIsLess_boxed_uint</class>
    <class kind="class">aworx::lib::boxing::ftypes::IIsLess_double</class>
    <member kind="typedef">
      <type>int64_t</type>
      <name>boxed_int</name>
      <anchorfile>namespaceaworx_1_1lib_1_1boxing_1_1ftypes.html</anchorfile>
      <anchor>ae01feb126fdae1ecf8a72a70abb605d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint64_t</type>
      <name>boxed_uint</name>
      <anchorfile>namespaceaworx_1_1lib_1_1boxing_1_1ftypes.html</anchorfile>
      <anchor>a5fcdb87abc3548c14049e3c9b6dee7b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr integer</type>
      <name>T_SetArraySize&lt; char &gt;</name>
      <anchorfile>namespaceaworx_1_1lib_1_1boxing_1_1ftypes.html</anchorfile>
      <anchor>a8b9c3e66e650aa993d6da958de24a6f3</anchor>
      <arglist>(integer arrayExtent)</arglist>
    </member>
    <member kind="function">
      <type>constexpr integer</type>
      <name>T_SetArraySize&lt; char16_t &gt;</name>
      <anchorfile>namespaceaworx_1_1lib_1_1boxing_1_1ftypes.html</anchorfile>
      <anchor>a2543796c50bfb8cbff884d4cda621186</anchor>
      <arglist>(integer arrayExtent)</arglist>
    </member>
    <member kind="function">
      <type>constexpr integer</type>
      <name>T_SetArraySize&lt; char32_t &gt;</name>
      <anchorfile>namespaceaworx_1_1lib_1_1boxing_1_1ftypes.html</anchorfile>
      <anchor>aa72dac154ce622d955adb466fadd6eb5</anchor>
      <arglist>(integer arrayExtent)</arglist>
    </member>
    <member kind="function">
      <type>constexpr integer</type>
      <name>T_SetArraySize&lt; wchar_t &gt;</name>
      <anchorfile>namespaceaworx_1_1lib_1_1boxing_1_1ftypes.html</anchorfile>
      <anchor>a4f87803660c23b0715dd8e93724efdd4</anchor>
      <arglist>(integer arrayExtent)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>aworx::lib::boxing::thirdparty</name>
    <filename>namespaceaworx_1_1lib_1_1boxing_1_1thirdparty.html</filename>
    <namespace>aworx::lib::boxing::thirdparty::qt</namespace>
    <namespace>aworx::lib::boxing::thirdparty::std</namespace>
  </compound>
  <compound kind="namespace">
    <name>aworx::lib::boxing::thirdparty::qt</name>
    <filename>namespaceaworx_1_1lib_1_1boxing_1_1thirdparty_1_1qt.html</filename>
  </compound>
  <compound kind="namespace">
    <name>aworx::lib::boxing::thirdparty::std</name>
    <filename>namespaceaworx_1_1lib_1_1boxing_1_1thirdparty_1_1std.html</filename>
    <member kind="function">
      <type>void</type>
      <name>InitStdString</name>
      <anchorfile>namespaceaworx_1_1lib_1_1boxing_1_1thirdparty_1_1std.html</anchorfile>
      <anchor>a0084b29e1444f1d45bb9801d955ecdd3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>aworx::lib::config</name>
    <filename>namespaceaworx_1_1lib_1_1config.html</filename>
    <namespace>aworx::lib::config::detail</namespace>
    <class kind="class">aworx::lib::config::CLIArgs</class>
    <class kind="class">aworx::lib::config::Config</class>
    <class kind="class">aworx::lib::config::Configuration</class>
    <class kind="class">aworx::lib::config::ConfigurationPlugin</class>
    <class kind="class">aworx::lib::config::Environment</class>
    <class kind="class">aworx::lib::config::IniFile</class>
    <class kind="class">aworx::lib::config::InMemoryPlugin</class>
    <class kind="class">aworx::lib::config::Variable</class>
    <class kind="struct">aworx::lib::config::VariableDecl</class>
    <class kind="class">aworx::lib::config::XTernalizer</class>
    <member kind="enumeration">
      <type></type>
      <name>Exceptions</name>
      <anchorfile>namespaceaworx_1_1lib_1_1config.html</anchorfile>
      <anchor>a8d828d7f6e0c02a7815c7e1308d3b06e</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1config.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ead083aedf850e5989f336e50d1a539d44">ErrorOpeningFile</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1config.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ea4d772ffe878e53b6d4e62d6a5b488e36">ErrorWritingFile</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FormatHints</name>
      <anchorfile>namespaceaworx_1_1lib_1_1config.html</anchorfile>
      <anchor>ac55b7da10891e6be23f1dcc7a7daa286</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1config.html" anchor="ac55b7da10891e6be23f1dcc7a7daa286a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1config.html" anchor="ac55b7da10891e6be23f1dcc7a7daa286a3440172974d6140e5d1051e68730d036">MultLine</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1config.html" anchor="ac55b7da10891e6be23f1dcc7a7daa286a3308dff642c5b3a0cc5b192ba1a94958">NoDelimSpaces</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1config.html" anchor="ac55b7da10891e6be23f1dcc7a7daa286a90589c47f06eb971d548591f23c285af">Custom</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Priorities</name>
      <anchorfile>namespaceaworx_1_1lib_1_1config.html</anchorfile>
      <anchor>a4f738b6463e8c773284e5173741814dd</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1config.html" anchor="a4f738b6463e8c773284e5173741814ddab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1config.html" anchor="a4f738b6463e8c773284e5173741814ddaa439cc535cfa5d7f3f2def352e2255b0">AutoDetected</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1config.html" anchor="a4f738b6463e8c773284e5173741814ddaff1c11ab5744d2a4a07760b31e816e7f">DefaultValues</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1config.html" anchor="a4f738b6463e8c773284e5173741814ddaeb6d8ae6f20283755b339c0dc273988b">Standard</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1config.html" anchor="a4f738b6463e8c773284e5173741814dda0ba29c6a1afacf586b03a26162c72274">Environment</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1config.html" anchor="a4f738b6463e8c773284e5173741814dda91af5705f16502125e8b2187e64202c0">CLI</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1config.html" anchor="a4f738b6463e8c773284e5173741814dda663d90fa900995eda127ba7745719104">ProtectedValues</enumvalue>
    </member>
    <docanchor file="namespaceaworx_1_1lib_1_1config">cpp_alib_config_protection</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1config">cpp_alib_namespace_config_substitution</docanchor>
  </compound>
  <compound kind="namespace">
    <name>aworx::lib::config::detail</name>
    <filename>namespaceaworx_1_1lib_1_1config_1_1detail.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>nextCLIArg</name>
      <anchorfile>namespaceaworx_1_1lib_1_1config_1_1detail.html</anchorfile>
      <anchor>ad600c0b6fc48730d01c6f5c0a18ec5a1</anchor>
      <arglist>(CLIArgs &amp;cliArgs, size_t &amp;nextArgNo, const String &amp;sectionName, Variable &amp;variable)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>aworx::lib::debug</name>
    <filename>namespaceaworx_1_1lib_1_1debug.html</filename>
    <class kind="class">aworx::lib::debug::Boxing</class>
    <class kind="class">aworx::lib::debug::TypeDemangler</class>
    <member kind="variable">
      <type>void(*</type>
      <name>DbgSimpleALibMsg_Plugin</name>
      <anchorfile>namespaceaworx_1_1lib_1_1debug.html</anchorfile>
      <anchor>ab288b6405c105a6cd630619a8f35eea9</anchor>
      <arglist>)(const char *file, int line, const char *method, int type, int qtyMsgs, const char **msgs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ALib_Dbg_Report_Plugin</name>
      <anchorfile>namespaceaworx_1_1lib_1_1debug.html</anchorfile>
      <anchor>a7904348743a6e69a33cf5ab9899601b6</anchor>
      <arglist>(const char *file, int line, const char *method, int type, int qtyMsgs, const char **msgs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DbgSimpleALibMsg</name>
      <anchorfile>namespaceaworx_1_1lib_1_1debug.html</anchorfile>
      <anchor>a218b50aedc2a3b02420c4f959d623d9c</anchor>
      <arglist>(const char *file, int line, const char *method, int type, const char *msg1, const char *msg2, const char *msg3, const char *msg4)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DbgSimpleALibMsg</name>
      <anchorfile>namespaceaworx_1_1lib_1_1debug.html</anchorfile>
      <anchor>a9e4d730efcf6229da948f354446163d2</anchor>
      <arglist>(const char *file, int line, const char *method, int type, const char *msg, int intVal)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API std::vector&lt; std::pair&lt; const std::type_info *, void * &gt; &gt;</type>
      <name>GetSingletons</name>
      <anchorfile>namespaceaworx_1_1lib_1_1debug.html</anchorfile>
      <anchor>afb66ffb4ac637d163d0d829db7a408e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ALIB_API int</type>
      <name>GetSingletons</name>
      <anchorfile>namespaceaworx_1_1lib_1_1debug.html</anchorfile>
      <anchor>aedf202cf1029c957cd78a3dfc75f3cef</anchor>
      <arglist>(strings::AString &amp;target)</arglist>
    </member>
    <member kind="function">
      <type>strings::AString &amp;</type>
      <name>RemoveALibNamespaces</name>
      <anchorfile>namespaceaworx_1_1lib_1_1debug.html</anchorfile>
      <anchor>ac439d995694f77d6cb43c68cf5689783</anchor>
      <arglist>(strings::AString &amp;target, bool remove)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>aworx::lib::detail</name>
    <filename>namespaceaworx_1_1lib_1_1detail.html</filename>
    <member kind="function">
      <type>ALIB_API size_t</type>
      <name>strlen16</name>
      <anchorfile>namespaceaworx_1_1lib_1_1detail.html</anchorfile>
      <anchor>a9f7d1894a43d356842eeb93d38775583</anchor>
      <arglist>(const char16_t *s)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>strlen32</name>
      <anchorfile>namespaceaworx_1_1lib_1_1detail.html</anchorfile>
      <anchor>ab54a0e13afdd0c01ed923b47fde1b095</anchor>
      <arglist>(const char32_t *s)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>aworx::lib::lang</name>
    <filename>namespaceaworx_1_1lib_1_1lang.html</filename>
    <namespace>aworx::lib::lang::detail</namespace>
    <class kind="struct">aworx::lib::lang::Enum</class>
    <class kind="struct">aworx::lib::lang::EnumIterator</class>
    <class kind="struct">aworx::lib::lang::EnumMetaData</class>
    <class kind="struct">aworx::lib::lang::EnumReadWriteInfo</class>
    <class kind="class">aworx::lib::lang::Exception</class>
    <class kind="class">aworx::lib::lang::Lang</class>
    <class kind="class">aworx::lib::lang::Library</class>
    <class kind="class">aworx::lib::lang::Ownable</class>
    <class kind="struct">aworx::lib::lang::Owner</class>
    <class kind="class">aworx::lib::lang::Report</class>
    <class kind="class">aworx::lib::lang::ReportWriter</class>
    <class kind="class">aworx::lib::lang::ReportWriterStdIO</class>
    <class kind="class">aworx::lib::lang::ResourcedTupleLoader</class>
    <class kind="class">aworx::lib::lang::Resources</class>
    <class kind="class">aworx::lib::lang::Singleton</class>
    <class kind="struct">aworx::lib::lang::std_EnumEquals</class>
    <class kind="struct">aworx::lib::lang::std_EnumHash</class>
    <class kind="struct">aworx::lib::lang::T_EnumIsArithmetical</class>
    <class kind="struct">aworx::lib::lang::T_EnumIsBitwise</class>
    <class kind="struct">aworx::lib::lang::T_EnumIsIteratable</class>
    <class kind="struct">aworx::lib::lang::T_EnumMetaDataDecl</class>
    <class kind="struct">aworx::lib::lang::T_EnumMetaDataDeclReadWrite</class>
    <class kind="struct">aworx::lib::lang::T_EnumMetaDataPreAndPostFix</class>
    <class kind="struct">aworx::lib::lang::T_EnumMetaDataSpecification</class>
    <class kind="struct">aworx::lib::lang::T_Resourced</class>
    <member kind="typedef">
      <type>platform_specific</type>
      <name>integer</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a050df5b24462b4a6256f2ed69c6b50ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>platform_specific</type>
      <name>intGap_t</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>af9eb8b6fb1aab7d526e9419b10fd5363</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>platform_specific</type>
      <name>uinteger</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a03b8595314b87c0141d68dc0c312f30e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>platform_specific</type>
      <name>uintGap_t</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>ae89f60b8bbbc054d70fa7c5b19627b93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Alignment</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>acdfaca60ec19c0265bac2692d7982726</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="acdfaca60ec19c0265bac2692d7982726a945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="acdfaca60ec19c0265bac2692d7982726a92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="acdfaca60ec19c0265bac2692d7982726a4f1f6016fc9f3f2353c0cc7c67b292bd">Center</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Bool</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a39db6982619d623273fad8a383489309</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a39db6982619d623273fad8a383489309af8320b26d30ab433c5a54546d21f414c">False</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a39db6982619d623273fad8a383489309af827cf462f62848df37c5e1e94a4da74">True</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Case</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>ab9aab17a5e54a8bae6915bc24db13a17</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="ab9aab17a5e54a8bae6915bc24db13a17a8f21fcdc233ba4078679ca628453d06b">Sensitive</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="ab9aab17a5e54a8bae6915bc24db13a17afd038fc7f319e48f3115d92bf5bdbef9">Ignore</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ContainerOp</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>af6d9cc1e6686eca6e60d57d959cf57fb</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="af6d9cc1e6686eca6e60d57d959cf57fbaa458be0f08b7e4ff3c0f633c100176c0">Insert</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="af6d9cc1e6686eca6e60d57d959cf57fba1063e38cb53d94d386f21227fcd84717">Remove</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="af6d9cc1e6686eca6e60d57d959cf57fbac55582518cba2c464f29f5bae1c68def">Get</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="af6d9cc1e6686eca6e60d57d959cf57fba1d5c1a7fde77e84c993d6fea61f88c2a">GetCreate</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="af6d9cc1e6686eca6e60d57d959cf57fba686e697538050e4664636337cc3b834f">Create</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Create</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a55781bd0c78c4e5d47ce433f4eeeee85</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a55781bd0c78c4e5d47ce433f4eeeee85a6e7b34fa59e1bd229b207892956dc41c">Never</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a55781bd0c78c4e5d47ce433f4eeeee85a44c32ea9ad0b836b68c25fdb717fa4b7">IfNotExistent</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CurrentData</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a9345007d67faa05253932092d54d10d4</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a9345007d67faa05253932092d54d10d4a02bce93bff905887ad2233110bf9c49e">Keep</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a9345007d67faa05253932092d54d10d4adc30bc0c7914db5918da4263fce93ad2">Clear</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Exceptions</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a8d828d7f6e0c02a7815c7e1308d3b06e</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ea7946215ab743bd9d347d313643ca72dd">ErrorWritingReport</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Inclusion</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a217539925b78b2eed40ae7817d5bee52</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a217539925b78b2eed40ae7817d5bee52af4d72a64acd8929c0cc9ed96a7a336cc">Include</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a217539925b78b2eed40ae7817d5bee52a843f2812f595e7ec7c5036e89fde02d6">Exclude</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LockMode</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a00fc859257c8f09ff9198dde28121961</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a00fc859257c8f09ff9198dde28121961a556c3dd912453ae5cb3095cd5054e6f4">Recursive</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a00fc859257c8f09ff9198dde28121961a67b491789a29d0c717a2b4ebe369a936">SingleLocks</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Phase</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>ae1c5184dc404edf057ed537bcfddef84</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="ae1c5184dc404edf057ed537bcfddef84a1a06729125544cab7cee73195fc044f0">Begin</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="ae1c5184dc404edf057ed537bcfddef84a87557f11575c0ad78e4e28abedc13b6e">End</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Propagation</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>aeae0c2d4659a32ef54bd221d1a3da4e6</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="aeae0c2d4659a32ef54bd221d1a3da4e6a3f9823fc8c5bf8d5efbb0ad3be5f16c9">Omit</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="aeae0c2d4659a32ef54bd221d1a3da4e6aa9857b4deb35c57d5753f94fa00a028e">ToDescendants</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Reach</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a9537c0a8df05f0a728b6e2a89c7f3a1b</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a9537c0a8df05f0a728b6e2a89c7f3a1ba4cc6684df7b4a92b1dec6fce3264fac8">Global</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a9537c0a8df05f0a728b6e2a89c7f3a1ba509820290d57f333403f490dde7316f4">Local</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Responsibility</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>ab5305b978950ba3946cf79a4bccbf7af</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="ab5305b978950ba3946cf79a4bccbf7afa2540530a938da82bfe62957f4aff599b">KeepWithSender</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="ab5305b978950ba3946cf79a4bccbf7afa6950810f0d2bba97a6f710c7b965b84e">Transfer</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Safeness</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a8c800527afe0a8a6c71ae4cceda6bf9d</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a8c800527afe0a8a6c71ae4cceda6bf9dac6eea0560cd6f377e78dff2c85cc9122">Safe</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a8c800527afe0a8a6c71ae4cceda6bf9dad3d57868b6ff9839eff631d2cc8acbce">Unsafe</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SortOrder</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>ad9be72f666a31b4318bbc8e8a16a9472</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="ad9be72f666a31b4318bbc8e8a16a9472acf3fb1ff52ea1eed3347ac5401ee7f0c">Ascending</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="ad9be72f666a31b4318bbc8e8a16a9472ae3cf5ac19407b1a62c6fccaff675a53b">Descending</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SourceData</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>ab0acd6daf9443d8b997f1035cfe08dd8</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="ab0acd6daf9443d8b997f1035cfe08dd8a5fb63579fc981698f97d55bfecb213ea">Copy</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="ab0acd6daf9443d8b997f1035cfe08dd8a6bc362dbf494c61ea117fe3c71ca48a5">Move</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Switch</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a9f3c28a2cb05bdcc618b542e49bfda3f</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a9f3c28a2cb05bdcc618b542e49bfda3fad15305d7a4e34e02489c74a5ef542f36">Off</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a9f3c28a2cb05bdcc618b542e49bfda3fa521c36a31c2762741cf0f8890cbe05e3">On</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Timezone</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a9b1d8f31e178e17a8fef3a9e94bc4b2c</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a9b1d8f31e178e17a8fef3a9e94bc4b2ca509820290d57f333403f490dde7316f4">Local</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="a9b1d8f31e178e17a8fef3a9e94bc4b2ca9234324ddf6b4176b57d803a925b7961">UTC</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Whitespaces</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>ad4a46f9fb632511f6be7c53e05f330f7</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="ad4a46f9fb632511f6be7c53e05f330f7a1fc5884251ca9f20a4fd5f79a458f94f">Trim</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1lang.html" anchor="ad4a46f9fb632511f6be7c53e05f330f7a02bce93bff905887ad2233110bf9c49e">Keep</enumvalue>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>DeleteSingletons</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a20cbd716cfc046a49f72978689279f29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsBitwise&lt; TEnum &gt;::value, bool &gt;::type</type>
      <name>EnumContains</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a2fd18b7e35e747c3e86275c57311cb1b</anchor>
      <arglist>(TEnum tested, TEnum testFor) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::underlying_type&lt; TEnum &gt;::type</type>
      <name>EnumValue</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a84494f1a492417b7b96bb8dfcd9c4c02</anchor>
      <arglist>(TEnum element) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsBitwise&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator &amp;</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>ac5ecab83cce9a39585a8db8fdf597ee7</anchor>
      <arglist>(TEnum lhs, TEnum rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsBitwise&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator &amp;=</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a09304aaeeffaac2fb8693a970692a534</anchor>
      <arglist>(TEnum &amp;lhs, TEnum rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator%</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>ad1cf70cfe5f4471794b397e3473ea31a</anchor>
      <arglist>(TEnum lhs, typename std::underlying_type&lt; TEnum &gt;::type rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator%=</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a3776e6341f16463e8154e3e4bb49d90e</anchor>
      <arglist>(TEnum &amp;lhs, typename std::underlying_type&lt; TEnum &gt;::type rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator*</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a22529a96c90fd221db0757ff6f1da0c6</anchor>
      <arglist>(TEnum lhs, typename std::underlying_type&lt; TEnum &gt;::type rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator*=</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a2ae717c60deb187f11b600578ed2fb76</anchor>
      <arglist>(TEnum &amp;lhs, typename std::underlying_type&lt; TEnum &gt;::type rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr TEnum</type>
      <name>operator+</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a6b687109ec6e967dab9485ea66e65851</anchor>
      <arglist>(TEnum element, int addend) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator+</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a9b25f4952e506a7a23659009e64d3787</anchor>
      <arglist>(TEnum lhs, TEnum rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator+</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a5d68573ef09952c2ad3e8eeceb32e7a9</anchor>
      <arglist>(TEnum lhs, typename std::underlying_type&lt; TEnum &gt;::type rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsBitwise&lt; TEnum &gt;::value &amp;&amp;!aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator+</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>ae17ed463cef631626f78bbae105cf0d8</anchor>
      <arglist>(TEnum lhs, TEnum rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator+</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a37f9804e48d2483958929e636a69b1e8</anchor>
      <arglist>(TEnum arg) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator++</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a23993ba9ff498cc51bdf924c73d73553</anchor>
      <arglist>(TEnum &amp;arg) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_CPP14_CONSTEXPR std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator++</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a00d3d05518cdf54a93bfdbec7e452162</anchor>
      <arglist>(TEnum &amp;arg, int) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator+=</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>ac3ce792ab1cdcb6a782c8d32e041f718</anchor>
      <arglist>(TEnum &amp;lhs, TEnum rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsBitwise&lt; TEnum &gt;::value &amp;&amp;!aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator+=</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a2b3f38a3a56cd3f23c18e8137e884d6d</anchor>
      <arglist>(TEnum &amp;lhs, TEnum rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator+=</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a6c72c2a642aa360bb45eb7496417263b</anchor>
      <arglist>(TEnum &amp;lhs, typename std::underlying_type&lt; TEnum &gt;::type rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr TEnum</type>
      <name>operator-</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>afd89e3596c9591d366884c3e9fe07455</anchor>
      <arglist>(TEnum element, int subtrahend) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsBitwise&lt; TEnum &gt;::value &amp;&amp;!aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator-</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a9d5d93e359fc2b82bda8b7b5d49a0855</anchor>
      <arglist>(TEnum lhs, TEnum rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator-</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a36dbf1c0dea06c0523493060c2be305c</anchor>
      <arglist>(TEnum lhs, TEnum rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator-</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a6dace49d871148630290dcd0ff019970</anchor>
      <arglist>(TEnum lhs, typename std::underlying_type&lt; TEnum &gt;::type rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator-</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>ade362ac2fa5c55771e240054557ff6fc</anchor>
      <arglist>(TEnum arg) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator--</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>ad133733b416d9c0a357677d733d75efb</anchor>
      <arglist>(TEnum &amp;arg) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>ALIB_CPP14_CONSTEXPR std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator--</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a216e8964bc009c056929ebfef61d7c3a</anchor>
      <arglist>(TEnum &amp;arg, int) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsBitwise&lt; TEnum &gt;::value &amp;&amp;!aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator-=</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>ab959cc47883bb9d44a072bc0a5abf2a3</anchor>
      <arglist>(TEnum &amp;lhs, TEnum rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator-=</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a751225eb2bd89d126ba103c5373e79fc</anchor>
      <arglist>(TEnum &amp;lhs, TEnum rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator-=</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>ab36b6421e55a78b3bec5c2777484385e</anchor>
      <arglist>(TEnum &amp;lhs, typename std::underlying_type&lt; TEnum &gt;::type rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator/</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a0baa9d54bb09dfb051a2bedf202abbef</anchor>
      <arglist>(TEnum lhs, typename std::underlying_type&lt; TEnum &gt;::type rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator/=</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a04830557731433e477bece1bb6bca6d6</anchor>
      <arglist>(TEnum &amp;lhs, typename std::underlying_type&lt; TEnum &gt;::type rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, bool &gt;::type</type>
      <name>operator&lt;</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a194fdac61dda4e48112f0011b6363868</anchor>
      <arglist>(TEnum lhs, TEnum rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, bool &gt;::type</type>
      <name>operator&lt;</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a15a08108c9e8b46e7866f982e27a66c4</anchor>
      <arglist>(TEnum lhs, typename std::underlying_type&lt; TEnum &gt;::type rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a0333be044acb1d4c23f3e23af128567e</anchor>
      <arglist>(TEnum lhs, typename std::underlying_type&lt; TEnum &gt;::type rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a0c81b8d1ba93ed9685b51f16f8154aec</anchor>
      <arglist>(TEnum &amp;lhs, typename std::underlying_type&lt; TEnum &gt;::type rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, bool &gt;::type</type>
      <name>operator&lt;=</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a68786356e3bb630988f5b49668225e0d</anchor>
      <arglist>(TEnum lhs, TEnum rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, bool &gt;::type</type>
      <name>operator&lt;=</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>aeb64d82dc01fdb606a6d640446681dd9</anchor>
      <arglist>(TEnum lhs, typename std::underlying_type&lt; TEnum &gt;::type rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, bool &gt;::type</type>
      <name>operator&gt;</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a7cb24e92e506e634cf3d1e786e10e9f3</anchor>
      <arglist>(TEnum lhs, TEnum rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, bool &gt;::type</type>
      <name>operator&gt;</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>af70de84a9014a8dacd466468bf3af35d</anchor>
      <arglist>(TEnum lhs, typename std::underlying_type&lt; TEnum &gt;::type rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, bool &gt;::type</type>
      <name>operator&gt;=</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a6b9bc2e7fba44ada6045f8ce66bb5e64</anchor>
      <arglist>(TEnum lhs, TEnum rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, bool &gt;::type</type>
      <name>operator&gt;=</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a177206ad92f6fbc7ab655263bb5071c6</anchor>
      <arglist>(TEnum lhs, typename std::underlying_type&lt; TEnum &gt;::type rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>ab15f1bc9ddf65ef4fc971f6f648cc77a</anchor>
      <arglist>(TEnum lhs, typename std::underlying_type&lt; TEnum &gt;::type rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsArithmetical&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a7f9445a8612f2cd0d6ef2a8c594fc158</anchor>
      <arglist>(TEnum &amp;lhs, typename std::underlying_type&lt; TEnum &gt;::type rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsBitwise&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator^</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a5b389332b4d0d5ed1f7118f173685d0e</anchor>
      <arglist>(TEnum lhs, TEnum rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsBitwise&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator^=</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>ae596498f62f2978ab6cdcb97d61cfc83</anchor>
      <arglist>(TEnum &amp;lhs, TEnum rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsBitwise&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator|</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>afce7a398d6d214cd36c3a28a2d868519</anchor>
      <arglist>(TEnum lhs, TEnum rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsBitwise&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator|=</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>a17407b3624b5cc4be4476378d4193082</anchor>
      <arglist>(TEnum &amp;lhs, TEnum rhs) noexcept(true)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::enable_if&lt; aworx::lib::lang::T_EnumIsBitwise&lt; TEnum &gt;::value, TEnum &gt;::type</type>
      <name>operator~</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang.html</anchorfile>
      <anchor>ab0d1471f39a2064b7495ed403c43e247</anchor>
      <arglist>(TEnum op) noexcept(true)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>aworx::lib::lang::detail</name>
    <filename>namespaceaworx_1_1lib_1_1lang_1_1detail.html</filename>
    <class kind="struct">aworx::lib::lang::detail::WrappedTypeInfoHasher</class>
    <class kind="struct">aworx::lib::lang::detail::WrappedTypeInfoPredEqualTo</class>
    <member kind="typedef">
      <type>std::reference_wrapper&lt; const std::type_info &gt;</type>
      <name>WrappedTypeInfo</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang_1_1detail.html</anchorfile>
      <anchor>ae6fadb29df248d69ddb96925f43f126d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ALIB_API void</type>
      <name>loadStandardEnumTable</name>
      <anchorfile>namespaceaworx_1_1lib_1_1lang_1_1detail.html</anchorfile>
      <anchor>ad4971472d2421efa667733f9a6194e77</anchor>
      <arglist>(int tupleType, void *table, aworx::Library &amp;library, const aworx::String &amp;name)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>aworx::lib::strings</name>
    <filename>namespaceaworx_1_1lib_1_1strings.html</filename>
    <namespace>aworx::lib::strings::applyto</namespace>
    <namespace>aworx::lib::strings::boxing</namespace>
    <namespace>aworx::lib::strings::format</namespace>
    <namespace>aworx::lib::strings::thirdparty</namespace>
    <namespace>aworx::lib::strings::util</namespace>
    <class kind="class">aworx::lib::strings::AString</class>
    <class kind="class">aworx::lib::strings::CString</class>
    <class kind="class">aworx::lib::strings::Format</class>
    <class kind="class">aworx::lib::strings::NumberFormat</class>
    <class kind="class">aworx::lib::strings::PreallocatedString</class>
    <class kind="struct">aworx::lib::strings::ResourceString</class>
    <class kind="struct">aworx::lib::strings::std_AStringEquals</class>
    <class kind="struct">aworx::lib::strings::std_AStringEqualsIgnoreCase</class>
    <class kind="struct">aworx::lib::strings::std_AStringHash</class>
    <class kind="struct">aworx::lib::strings::std_AStringHashIgnoreCase</class>
    <class kind="struct">aworx::lib::strings::std_StringEquals</class>
    <class kind="struct">aworx::lib::strings::std_StringEqualsIgnoreCase</class>
    <class kind="struct">aworx::lib::strings::std_StringHash</class>
    <class kind="struct">aworx::lib::strings::std_StringHashIgnoreCase</class>
    <class kind="class">aworx::lib::strings::String</class>
    <class kind="class">aworx::lib::strings::StringLiteral</class>
    <class kind="class">aworx::lib::strings::Strings</class>
    <class kind="class">aworx::lib::strings::Substring</class>
    <class kind="struct">aworx::lib::strings::T_Apply</class>
    <class kind="struct">aworx::lib::strings::T_Apply&lt; typename format::PropertyFormatterMapApplicable&lt; TFormattable, TOptionEnum &gt; &gt;</class>
    <class kind="struct">aworx::lib::strings::T_IsTerminatable</class>
    <class kind="struct">aworx::lib::strings::T_IsTerminatable&lt; AString &gt;</class>
    <class kind="struct">aworx::lib::strings::T_IsTerminatable&lt; PreallocatedString&lt; TCapacity &gt; &gt;</class>
    <class kind="struct">aworx::lib::strings::T_String</class>
    <class kind="struct">aworx::lib::strings::T_String&lt; char * &gt;</class>
    <class kind="struct">aworx::lib::strings::T_String&lt; char const * &gt;</class>
    <class kind="struct">aworx::lib::strings::T_StringLiteral</class>
    <class kind="struct">aworx::lib::strings::T_StringLiteral&lt; char[TCapacity]&gt;</class>
    <class kind="struct">aworx::lib::strings::T_StringLiteral&lt; StringLiteral&lt; TLength &gt; &gt;</class>
    <class kind="class">aworx::lib::strings::TString</class>
    <docanchor file="namespaceaworx_1_1lib_1_1strings">alib_namespace_strings_nullable</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1strings">alib_namespace_strings_class_overview_astring_construction</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1strings" title="Introduction">alib_namespace_strings_intro</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1strings" title="Classes overview">alib_namespace_strings_class_overview</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1strings" title="Class String">alib_namespace_strings_class_overview_as</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1strings" title="Class TString">alib_namespace_strings_class_overview_asterminatable</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1strings" title="Class AString">alib_namespace_strings_class_overview_astring</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1strings" title="Class PreallocatedString">alib_namespace_strings_class_overview_asprealoc</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1strings" title="Class Substring">alib_namespace_strings_class_overview_substring</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1strings" title="Class StringLiteral">alib_namespace_strings_class_overview_sliteral</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1strings" title="&apos;Non-Checking&apos; Methods of ALib String Classes">alib_namespace_strings_nonchecking</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1strings" title="Formatting Strings">alib_namespace_strings_format</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1strings" title="Compatibility with External Libraries">alib_namespace_strings_compat</docanchor>
    <docanchor file="namespaceaworx_1_1lib_1_1strings" title="Debugging ALib String Classes">alib_namespace_strings_debugging</docanchor>
  </compound>
  <compound kind="namespace">
    <name>aworx::lib::strings::applyto</name>
    <filename>namespaceaworx_1_1lib_1_1strings_1_1applyto.html</filename>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; bool &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; char * &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; char16_t * &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; char32_t * &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; double &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; Enum &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; float &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; Format &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; Format::Bin &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; Format::Escape &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; Format::Field &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; Format::Hex &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; Format::Oct &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; Format::Tab &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; int16_t &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; int32_t &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; int64_t &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; int8_t &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; intGap_t &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; lib::boxing::Box &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; std::type_info &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; TEnum &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; TEnumBitwise &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; uint16_t &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; uint32_t &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; uint64_t &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; uint8_t &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; uintGap_t &gt;</class>
    <class kind="struct">aworx::lib::strings::applyto::T_Apply&lt; wchar_t * &gt;</class>
  </compound>
  <compound kind="namespace">
    <name>aworx::lib::strings::boxing</name>
    <filename>namespaceaworx_1_1lib_1_1strings_1_1boxing.html</filename>
    <class kind="class">aworx::lib::strings::boxing::IApply</class>
    <class kind="class">aworx::lib::strings::boxing::IApply_BoxedAs_TApplicable</class>
    <class kind="class">aworx::lib::strings::boxing::IApply_TApplicable</class>
    <class kind="class">aworx::lib::strings::boxing::IApply_Tchar16_tArr</class>
    <class kind="class">aworx::lib::strings::boxing::IApply_Tchar32_tArr</class>
    <class kind="class">aworx::lib::strings::boxing::IApply_TcharArr</class>
    <class kind="class">aworx::lib::strings::boxing::IApply_Twchar_tArr</class>
    <class kind="class">aworx::lib::strings::boxing::IFormat</class>
    <class kind="class">aworx::lib::strings::boxing::IIsLess_Tchar_arr</class>
    <class kind="struct">aworx::lib::strings::boxing::T_Boxing&lt; aworx::lib::strings::PreallocatedString&lt; TCapacity &gt; &gt;</class>
    <class kind="struct">aworx::lib::strings::boxing::T_Boxing&lt; strings::StringLiteral&lt; TLength &gt; &gt;</class>
  </compound>
  <compound kind="namespace">
    <name>aworx::lib::strings::format</name>
    <filename>namespaceaworx_1_1lib_1_1strings_1_1format.html</filename>
    <class kind="class">aworx::lib::strings::format::Formatter</class>
    <class kind="class">aworx::lib::strings::format::FormatterJavaStyle</class>
    <class kind="class">aworx::lib::strings::format::FormatterPythonStyle</class>
    <class kind="class">aworx::lib::strings::format::FormatterStdImpl</class>
    <class kind="class">aworx::lib::strings::format::PropertyFormatter</class>
    <class kind="struct">aworx::lib::strings::format::PropertyFormatterMapApplicable</class>
    <class kind="class">aworx::lib::strings::format::PropertyFormatters</class>
    <class kind="class">aworx::lib::strings::format::SimpleText</class>
    <member kind="enumeration">
      <type></type>
      <name>Exceptions</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1format.html</anchorfile>
      <anchor>a8d828d7f6e0c02a7815c7e1308d3b06e</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06eab824c25395097a4c6a0e237f1860659f">ArgumentIndexIs0</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ea7b135f4c4134973b2eefbfc667e32611">ArgumentIndexOutOfBounds</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06eac2ef290af573d8cac404101f3eb6b55e">IncompatibleTypeCode</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ea85c72968156b2c02305ea84f0a9f14a3">MissingClosingBracket</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ea0c7f531702f8c4d33fd170bc6d0dd2df">MissingPrecisionValuePS</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ea9d68f4d833814dfe68974a74cf66578a">DuplicateTypeCode</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ead1f81b50cf7c8eb763d702dc0edb57d6">UnknownTypeCode</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ea12dc7dca6b11b10b8a658bc99b7625f8">ExclamationMarkExpected</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ea0164833a898a5790de42aade4d373081">UnknownConversionPS</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06eaa3eb3a5830a7295947fbdf143a2237cd">PrecisionSpecificationWithInteger</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ea0710ec768756e2fab83f109012019306">MissingReplacementStrings</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06eac50d0f4ef6dacc8ca0e40b2c8ad9f7c5">NegativeValuesInBracketsNotSupported</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06eaf2419a1cbc8a6d6c0f1463b390fc7a96">MissingPrecisionValueJS</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ea53c689fcc979361719a8195a20c2804a">HexadecimalFloatFormatNotSupported</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ea3dcc7cd93078f53d385af9b09c6cac6e">NoAlternateFormOfConversion</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06eadc4e10195e77f50a66630c9a79ce141f">NoPrecisionWithConversion</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ea24dc076590908b20eea21271933dcc9d">UnknownDateTimeConversionSuffix</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06eae63f35d2f06aef36a6ddd066a54c1441">UnknownConversionJS</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ea8f0d58f2db3173f82663f74b4152f063">UnknownPropertyInFormatString</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06eae082ea173080fc0f48162c5097d28b66">ErrorInResultingFormatString</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ea6bf4e666277316a0cbc6c64ab72b7928">MissingConfigurationVariable</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ea6bf564f445f8d968d3b847353c88f575">UnknownMarker</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1strings_1_1format.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06eab577f072ad031d6dba588841dc68872f">EndmarkerWithoutStart</enumvalue>
    </member>
  </compound>
  <compound kind="namespace">
    <name>aworx::lib::strings::thirdparty</name>
    <filename>namespaceaworx_1_1lib_1_1strings_1_1thirdparty.html</filename>
    <namespace>aworx::lib::strings::thirdparty::alox</namespace>
    <namespace>aworx::lib::strings::thirdparty::qt</namespace>
    <namespace>aworx::lib::strings::thirdparty::std</namespace>
  </compound>
  <compound kind="namespace">
    <name>aworx::lib::strings::thirdparty::alox</name>
    <filename>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1alox.html</filename>
    <class kind="struct">aworx::lib::strings::thirdparty::alox::T_Apply&lt; lox::core::Logger &gt;</class>
  </compound>
  <compound kind="namespace">
    <name>aworx::lib::strings::thirdparty::qt</name>
    <filename>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1qt.html</filename>
    <class kind="struct">aworx::lib::strings::thirdparty::qt::T_Apply&lt; QByteArray &gt;</class>
    <class kind="struct">aworx::lib::strings::thirdparty::qt::T_Apply&lt; QChar &gt;</class>
    <class kind="struct">aworx::lib::strings::thirdparty::qt::T_Apply&lt; QString &gt;</class>
    <class kind="struct">aworx::lib::strings::thirdparty::qt::T_Apply&lt; QVector&lt; uint &gt; &gt;</class>
    <class kind="struct">aworx::lib::strings::thirdparty::qt::T_String&lt; QByteArray &gt;</class>
    <class kind="struct">aworx::lib::strings::thirdparty::qt::T_String&lt; QLatin1String &gt;</class>
    <member kind="function">
      <type>QString &amp;</type>
      <name>ToQString</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1qt.html</anchorfile>
      <anchor>a883339efff1e4df28fc0eb60616c1a60</anchor>
      <arglist>(const String &amp;as, QString &amp;target, integer regionStart, integer regionLength=CString::MaxLen, lang::CurrentData targetData=lang::CurrentData::Clear)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>ToQString</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1qt.html</anchorfile>
      <anchor>a54b6094a3ee0fec23494090e4c88fe17</anchor>
      <arglist>(const String &amp;as, integer regionStart, integer regionLength=CString::MaxLen)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>ToQString</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1qt.html</anchorfile>
      <anchor>a4595248eca789097831f7ed447676505</anchor>
      <arglist>(const String &amp;as)</arglist>
    </member>
    <member kind="function">
      <type>QString &amp;</type>
      <name>ToQString</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1qt.html</anchorfile>
      <anchor>a9ccc80cd8870d752be0a0a05e47aa1cf</anchor>
      <arglist>(const String &amp;as, QString &amp;target, lang::CurrentData targetData=lang::CurrentData::Clear)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>aworx::lib::strings::thirdparty::std</name>
    <filename>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1std.html</filename>
    <class kind="class">aworx::lib::strings::thirdparty::std::ReadLineFromIStream</class>
    <class kind="struct">aworx::lib::strings::thirdparty::std::T_Apply&lt; std::u16string &gt;</class>
    <class kind="struct">aworx::lib::strings::thirdparty::std::T_Apply&lt; std::u32string &gt;</class>
    <class kind="struct">aworx::lib::strings::thirdparty::std::T_Apply&lt; std::vector&lt; char16_t &gt; &gt;</class>
    <class kind="struct">aworx::lib::strings::thirdparty::std::T_Apply&lt; std::vector&lt; char32_t &gt; &gt;</class>
    <class kind="struct">aworx::lib::strings::thirdparty::std::T_Apply&lt; std::vector&lt; wchar_t &gt; &gt;</class>
    <class kind="struct">aworx::lib::strings::thirdparty::std::T_Apply&lt; std::wstring &gt;</class>
    <class kind="struct">aworx::lib::strings::thirdparty::std::T_Apply&lt; thirdparty::std::ReadLineFromIStream &gt;</class>
    <class kind="struct">aworx::lib::strings::thirdparty::std::T_String&lt; std::string &gt;</class>
    <class kind="struct">aworx::lib::strings::thirdparty::std::T_String&lt; std::vector&lt; char &gt; &gt;</class>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1std.html</anchorfile>
      <anchor>a87fbb8b7085a135eb378c01ad642ca62</anchor>
      <arglist>(std::ostream &amp;stream, const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream *</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1std.html</anchorfile>
      <anchor>a711970990a045b7ee4c78c43968db751</anchor>
      <arglist>(std::ostream *stream, const String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1std.html</anchorfile>
      <anchor>a7a8be392083299363a46570e0b11d422</anchor>
      <arglist>(std::ostream &amp;stream, const TApplicable &amp;applicable)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream *</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1std.html</anchorfile>
      <anchor>ad9692972d4d2aac14983aca97a761311</anchor>
      <arglist>(std::ostream *stream, const TApplicable &amp;applicable)</arglist>
    </member>
    <member kind="function">
      <type>std::istream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1std.html</anchorfile>
      <anchor>a9651871e7daa6d9fc7cf18c22b11daa4</anchor>
      <arglist>(std::istream &amp;stream, AString &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>std::istream *</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1std.html</anchorfile>
      <anchor>a36c110c0bad310bc926dd4ba78bbb719</anchor>
      <arglist>(std::istream *stream, AString &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>std::string &amp;</type>
      <name>ToStdString</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1std.html</anchorfile>
      <anchor>a6a37f6748b43c7e24e2e203c8aaab743</anchor>
      <arglist>(const String &amp;src, std::string &amp;target, integer regionStart, integer regionLength=CString::MaxLen, lang::CurrentData targetData=lang::CurrentData::Clear)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ToStdString</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1std.html</anchorfile>
      <anchor>a2b956a880e23a42e5d82f3dcdc9d2291</anchor>
      <arglist>(const String &amp;src, integer regionStart, integer regionLength=CString::MaxLen)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ToStdString</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1std.html</anchorfile>
      <anchor>a018c67f6c1944d5152b682853b40984c</anchor>
      <arglist>(const String &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>std::string &amp;</type>
      <name>ToStdString</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1std.html</anchorfile>
      <anchor>ac781da93eaa9048f371f87be40ff7ac6</anchor>
      <arglist>(const String &amp;as, std::string &amp;target, lang::CurrentData targetData=lang::CurrentData::Clear)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; char &gt; &amp;</type>
      <name>ToStdVector</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1std.html</anchorfile>
      <anchor>a0181616105e504600b35e0e356927a96</anchor>
      <arglist>(const String &amp;src, std::vector&lt; char &gt; &amp;target, integer regionStart, integer regionLength=CString::MaxLen, lang::CurrentData targetData=lang::CurrentData::Clear)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; char &gt;</type>
      <name>ToStdVector</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1std.html</anchorfile>
      <anchor>a411b4ca112d2ff50ca612f83367430fd</anchor>
      <arglist>(const String &amp;src, integer regionStart, integer regionLength=CString::MaxLen)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; char &gt;</type>
      <name>ToStdVector</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1std.html</anchorfile>
      <anchor>a59a9d0a34f4cb974f46885790649fd84</anchor>
      <arglist>(const String &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; char &gt; &amp;</type>
      <name>ToStdVector</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1thirdparty_1_1std.html</anchorfile>
      <anchor>a411f0b04841847a3e326260d70c72f48</anchor>
      <arglist>(const String &amp;src, std::vector&lt; char &gt; &amp;target, lang::CurrentData targetData=lang::CurrentData::Clear)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>aworx::lib::strings::util</name>
    <filename>namespaceaworx_1_1lib_1_1strings_1_1util.html</filename>
    <class kind="class">aworx::lib::strings::util::AutoSizes</class>
    <class kind="class">aworx::lib::strings::util::RegexMatcher</class>
    <class kind="class">aworx::lib::strings::util::Spaces</class>
    <class kind="class">aworx::lib::strings::util::StringTable</class>
    <class kind="class">aworx::lib::strings::util::Tokenizer</class>
    <class kind="class">aworx::lib::strings::util::WildcardMatcher</class>
    <member kind="function">
      <type>std::tuple&lt; T_TupleTypes... &gt; const  *</type>
      <name>FindStringInTupleVector</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1util.html</anchorfile>
      <anchor>a6a099c1324d20ad8751ca4e2f0fb5e36</anchor>
      <arglist>(const std::vector&lt; std::tuple&lt; T_TupleTypes... &gt;&gt; &amp;haystack, const String &amp;needle)</arglist>
    </member>
    <member kind="function">
      <type>std::tuple&lt; T_TupleTypes... &gt; const  *</type>
      <name>FindStringStartInTupleVector</name>
      <anchorfile>namespaceaworx_1_1lib_1_1strings_1_1util.html</anchorfile>
      <anchor>a52fca63b4787aa77d8a3ebafc567c4fa</anchor>
      <arglist>(const std::vector&lt; std::tuple&lt; T_TupleTypes... &gt;&gt; &amp;haystack, const String &amp;needle)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>aworx::lib::system</name>
    <filename>namespaceaworx_1_1lib_1_1system.html</filename>
    <class kind="class">aworx::lib::system::Directory</class>
    <class kind="class">aworx::lib::system::ProcessInfo</class>
    <class kind="class">aworx::lib::system::System</class>
    <member kind="enumeration">
      <type></type>
      <name>Exceptions</name>
      <anchorfile>namespaceaworx_1_1lib_1_1system.html</anchorfile>
      <anchor>a8d828d7f6e0c02a7815c7e1308d3b06e</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06eae0aa021e21dddbd6d8cecec71e9cf564">OK</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ea902b0d55fddef6f8d651fe1035b7d4bd">Error</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06eaea1776502570f06ddc0569c079cb9ee2">FileExists</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="a8d828d7f6e0c02a7815c7e1308d3b06ea5d0744802b24f44a161d350c25d76c7b">InvalidPath</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SystemErrors</name>
      <anchorfile>namespaceaworx_1_1lib_1_1system.html</anchorfile>
      <anchor>ac5e2a99610cedf5e55a4c97dba96bdff</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffae0aa021e21dddbd6d8cecec71e9cf564">OK</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa144cdbbe16ee31d52ba589d21df5a3b1">eperm</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa651fad99b40e827d58cdda0da4222bca">enoent</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa492d011a404eb9c5ac1190f8377662b0">esrch</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa45e9c70571d7de42ebaf26d7e58eeb0f">eintr</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa6a76c3e6f07462642ad175aa4b5043f9">eio</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa835f4221d04ed46514e4135dec17f2fd">enxio</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffab97da35a8541a71c5e1c55889c5cf3ea">e2Big</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa987201bd25717c8f04337d5b266dcb87">enoexec</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffaee434be093f39e75d31436d60aae077d">ebadf</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffab0b408b2d3a730224511eac6025cbb2b">echild</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffaaf9621315249abf16f1b6a4c9c55723b">eagain</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffaf030523857507f49aef7298e6bb28eb1">enomem</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa4b3018e9aae150fb48165bb6d703cea9">eacces</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffaa13a776763fcbe732ddd9fe7ad367994">efault</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffac3b8b3bd1b370b9f8af89c1f8096e4ef">ebusy</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa2762fb93c26068508d953b547b2b8b37">eexist</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa2b29e27615fc0b95ea8e3f703a614260">exdev</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa4730e22320f57db9887f45244ed2d4ef">enodev</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa666e7a56f93f80288edd2a9b5f7e22b5">enotdir</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa32a9e84c0daf2fea937b130be09f33e1">eisdir</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffab6881e6ad5351063e8dd0b41f0996fcd">enfile</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa2295a2e5145002d6d3aed06c8e851f70">emfile</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa8747ad866e3a6fc1786cdba9a72e10be">enotty</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffac5708577193308e721bb90c2b55e0acc">efbig</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffad18561a76d166454e4e38120e15f1fda">enospc</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa9d8518f56ff41aaca687cf2d02b30a15">espipe</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa4ea4b6e51a47215d9edb09097a9606da">erofs</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa790cec6c5eb92e199b3195c7debd1cb5">emlink</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffadeb12ada0a6c119cf8af78bb405ab2c3">epipe</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa217303e52413d95657c2ef519d5791db">edom</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffab4f8c19387e79c8501e55ec99a9a5fb0">edeadlk</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa1fb576a8ae932909526cffc8a805fd72">enametoolong</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffad4de2ab7e2063e016221633d314f4f61">enolck</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa1dc4ecf9174aa512cc8ff7f8875d7158">enosys</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa3fa04047ab83ac9cd3daba5c87aa3586">enotempty</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa4988be8c790d29e329bb2f7c2ecc7ff7">einval</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa4c17818f7e8fcc3d3cea44bc3c91e364">erange</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa071dd90ed61cf76b3026540192abf23b">eilseq</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffaedbaa1730caa5eea1df7ae946824cf27">struncate</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa8e8c1ece7b69f4974e87cd4decd8e2b0">eaddrinuse</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa5a0f5972f5bc4823d6ad1874015f06b1">eaddrnotavail</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa37aef84352292e809051ba4a51fbe7a7">eafnosupport</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa66078e177bd6c68722c5af3bf290c52e">ealready</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa6f949c91f18ae846f9ae4b08e521f2e2">ebadmsg</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa5f398386414528e56810b9f43570daee">ecanceled</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffad8020b7703a26f07b112d5a118186783">econnaborted</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa49aae993a5704a913e8b7bad322cc0c8">econnrefused</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa6f03152d2fe0514169b63193b8a21f4a">econnreset</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa9fa835f396769ec4709a11d650b81c89">edestaddrreq</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa621eb182b9c15d8f87eb9fcad47008dc">ehostunreach</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffadc62d8fc489bccf054b5bd219f68bf78">eidrm</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffae433715bb19f085af59c8c0adc192829">einprogress</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffaf6132b5977f9844d1418bfdc299c07fd">eisconn</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffaad2a3bc401b4954a35aacc4e36bcbdf0">eloop</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa2ea08a32063dbafda965dc6eb8ae1dad">emsgsize</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffad0d9b865c330f1976ce2b44706599d4e">enetdown</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffab3dc9ad0b96d1e21379ffd4c9248421b">enetreset</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa1805b948db8bad5120c958ec33b92d6d">enetunreach</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa793be526100175d963e06389a69bc42a">enobufs</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa2e5a0a6880831b17434010f6fd9c8980">enodata</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa67b51279e0577435e4e02627a9a68221">enolink</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffac68d8bef2e6de3f9ec8e3d6be56a335f">enomsg</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa674810b90f448a5127229e3f539708bb">enoprotoopt</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa0ed1967c62d713085532d79de1128b9b">enosr</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa840425b303806c47ee2d3def756e46e7">enostr</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa16cc8bc98dfa535c17b19dfca7c78294">enotconn</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa93a963911f72bceb1ed26d6d37db8cff">enotrecoverable</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa36ab7d4fc77cc4dd987e9442bcfc8f68">enotsock</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa07e2e03577b3a09134f56b4194378a2a">enotsup</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa0382d90df770146a15c6ba1b83e8c917">eopnotsupp</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa03172e9d1cc2c7b5fd98dcd3eaca97cb">eother</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa365ebcd39800f4957b513033efbee772">eoverflow</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa45dc36effb04b496df5242d651da5c81">eownerdead</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffab6d35f0f6710e069ae9b6aaf7d218a6f">eproto</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa0b0c45cf902d84caaf7fb6b35ddb34bb">eprotonosupport</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa638feab09007bea4e9b56c3e50a44a91">eprototype</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa4c16e8900ba303fe23d4cc417cab19ed">etime</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffabac9b3bb23cc7990ef5f1438e150112f">etimedout</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa143017ee04d375680dad9f8efbe350c9">etxtbsy</enumvalue>
      <enumvalue file="namespaceaworx_1_1lib_1_1system.html" anchor="ac5e2a99610cedf5e55a4c97dba96bdffa718680b066bd7f5bbf6725952fbd2cd8">ewouldblock</enumvalue>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetEnvironmentVariable</name>
      <anchorfile>namespaceaworx_1_1lib_1_1system.html</anchorfile>
      <anchor>a907b528cc336c47a89373475e0b41aa6</anchor>
      <arglist>(const TString &amp;name, AString &amp;target, CurrentData targetData, Case sensitivity)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>aworx::lib::threads</name>
    <filename>namespaceaworx_1_1lib_1_1threads.html</filename>
    <class kind="class">aworx::lib::threads::Runnable</class>
    <class kind="class">aworx::lib::threads::SmartLock</class>
    <class kind="class">aworx::lib::threads::Thread</class>
    <class kind="class">aworx::lib::threads::ThreadLock</class>
    <class kind="class">aworx::lib::threads::ThreadLockNR</class>
    <class kind="class">aworx::lib::threads::Threads</class>
    <member kind="variable" static="yes">
      <type>static constexpr int</type>
      <name>NullThreadId</name>
      <anchorfile>namespaceaworx_1_1lib_1_1threads.html</anchorfile>
      <anchor>ab74d46f09db54cfc6e3c0d55baca5bfc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>aworx::lib::time</name>
    <filename>namespaceaworx_1_1lib_1_1time.html</filename>
    <class kind="class">aworx::lib::time::CalendarTime</class>
    <class kind="class">aworx::lib::time::IFormat_TimeStamp</class>
    <class kind="class">aworx::lib::time::IFormat_TTicks</class>
    <class kind="class">aworx::lib::time::StopWatch</class>
    <class kind="class">aworx::lib::time::Ticks</class>
    <class kind="class">aworx::lib::time::TicksCalendarTime</class>
    <class kind="class">aworx::lib::time::TickSpan</class>
    <class kind="class">aworx::lib::time::TickWatch</class>
    <class kind="class">aworx::lib::time::TimeLib</class>
    <class kind="class">aworx::lib::time::TimeSpan</class>
    <class kind="class">aworx::lib::time::TimeStamp</class>
  </compound>
  <compound kind="namespace">
    <name>aworx::lib::util</name>
    <filename>namespaceaworx_1_1lib_1_1util.html</filename>
    <class kind="class">aworx::lib::util::MemoryBlocks</class>
    <class kind="class">aworx::lib::util::PluginContainer</class>
    <class kind="class">aworx::lib::util::StringTree</class>
    <class kind="struct">aworx::lib::util::StringTreeConstKeyAllocator</class>
    <class kind="struct">aworx::lib::util::StringTreeDefaultKeyAllocator</class>
    <member kind="function">
      <type>StringTree&lt; T &gt;::StdIterator</type>
      <name>begin</name>
      <anchorfile>namespaceaworx_1_1lib_1_1util.html</anchorfile>
      <anchor>af73184a6ae2b740fe9730cca5b9ff634</anchor>
      <arglist>(StringTree&lt; T &gt; &amp;stringTree)</arglist>
    </member>
    <member kind="function">
      <type>StringTree&lt; T &gt;::StdIterator</type>
      <name>begin</name>
      <anchorfile>namespaceaworx_1_1lib_1_1util.html</anchorfile>
      <anchor>a1ba874bdd6acd22b07df2bcdbf728b73</anchor>
      <arglist>(typename StringTree&lt; T &gt;::Cursor &amp;cursor)</arglist>
    </member>
    <member kind="function">
      <type>StringTree&lt; T &gt;::StdIterator</type>
      <name>end</name>
      <anchorfile>namespaceaworx_1_1lib_1_1util.html</anchorfile>
      <anchor>ab0061f76ea18a421f8c29e3abfeb3c15</anchor>
      <arglist>(StringTree&lt; T &gt; &amp;stringTree)</arglist>
    </member>
    <member kind="function">
      <type>StringTree&lt; T &gt;::StdIterator</type>
      <name>end</name>
      <anchorfile>namespaceaworx_1_1lib_1_1util.html</anchorfile>
      <anchor>acb2592125edad411aac356fa3fdf5dfb</anchor>
      <arglist>(typename StringTree&lt; T &gt;::Cursor &amp;cursor)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>aworx::literals</name>
    <filename>namespaceaworx_1_1literals.html</filename>
    <member kind="function">
      <type>constexpr aworx::lib::lang::integer</type>
      <name>operator&quot;&quot; _integer</name>
      <anchorfile>namespaceaworx_1_1literals.html</anchorfile>
      <anchor>a4f8aca3025f70df27df088c7fc5b0ee7</anchor>
      <arglist>(unsigned long long int value)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>aworx::lox</name>
    <filename>namespaceaworx_1_1lox.html</filename>
    <namespace>aworx::lox::core</namespace>
    <namespace>aworx::lox::loggers</namespace>
    <class kind="class">aworx::lox::ALox</class>
    <class kind="class">aworx::lox::ALoxReportWriter</class>
    <class kind="class">aworx::lox::ESC</class>
    <class kind="class">aworx::lox::Log</class>
    <class kind="class">aworx::lox::LogTools</class>
    <class kind="class">aworx::lox::Lox</class>
    <class kind="class">aworx::lox::PrefixLogable</class>
    <member kind="enumeration">
      <type></type>
      <name>Scope</name>
      <anchorfile>namespaceaworx_1_1lox.html</anchorfile>
      <anchor>aaecc53892786f2fa11e682f633af84c6</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="aaecc53892786f2fa11e682f633af84c6a4cc6684df7b4a92b1dec6fce3264fac8">Global</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="aaecc53892786f2fa11e682f633af84c6a1ee3f312b05c55202500569aadfc8d9b">ThreadOuter</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="aaecc53892786f2fa11e682f633af84c6a1351017ac6423911223bc19a8cb7c653">Filename</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="aaecc53892786f2fa11e682f633af84c6a4c3880bb027f159e801041b1021e88e8">Method</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="aaecc53892786f2fa11e682f633af84c6ae46b159c990fae9e712309bdb4d7b7c4">ThreadInner</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="aaecc53892786f2fa11e682f633af84c6aac70412e939d72a9234cdebb1af5867b">Path</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Variables</name>
      <anchorfile>namespaceaworx_1_1lox.html</anchorfile>
      <anchor>a382a38852335f58a53739d455c7d67c9</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="a382a38852335f58a53739d455c7d67c9adb0b90067892b7258dc8c3b55e4c2569">NO_IDE_LOGGER</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="a382a38852335f58a53739d455c7d67c9a3906ee006af77b8fa8262283f9caf7e4">CONSOLE_TYPE</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="a382a38852335f58a53739d455c7d67c9a47a219833a4b3a09240896c88b2b1969">VERBOSITY</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="a382a38852335f58a53739d455c7d67c9a835487a189e71ba8b5d94d178b94794f">SPTR_GLOBAL</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="a382a38852335f58a53739d455c7d67c9ac29fb515e3e56db64a1427d969dcabcb">SPTR_LOX</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="a382a38852335f58a53739d455c7d67c9a4b520f6a3150be16e39dcb542fab214d">DOMAIN_SUBSTITUTION</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="a382a38852335f58a53739d455c7d67c9ac8dd1a6634966abd5efb5d86d4db378f">PREFIXES</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="a382a38852335f58a53739d455c7d67c9a6971f54df65eca4fb3bbdad4f22f5c66">DUMP_STATE_ON_EXIT</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="a382a38852335f58a53739d455c7d67c9ae6b539e0553a3c71491c32b5b2c729a9">AUTO_SIZES</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="a382a38852335f58a53739d455c7d67c9a47c8929b6152d540597c758853ff95a2">FORMAT</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="a382a38852335f58a53739d455c7d67c9a7e225271444009a790a617c6a27106bd">FORMAT_DATE_TIME</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="a382a38852335f58a53739d455c7d67c9a7f191f01c0a19a76dc041e1f7a558035">FORMAT_MULTILINE</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="a382a38852335f58a53739d455c7d67c9a0f1becc977b12c17805459b8aa2ba30f">FORMAT_TIME_DIFF</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="a382a38852335f58a53739d455c7d67c9a042746fb996d023babbdc562c85193c8">MAX_ELAPSED_TIME</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="a382a38852335f58a53739d455c7d67c9a5d83625ab3ab5703580d30a5567722a9">REPLACEMENTS</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="a382a38852335f58a53739d455c7d67c9a1406d36082094d9896893e2c0241dbfc">CONSOLE_LIGHT_COLORS</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="a382a38852335f58a53739d455c7d67c9a58044b3a1c5af7cd5cd60e5d6b8d0220">CODEPAGE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Verbosity</name>
      <anchorfile>namespaceaworx_1_1lox.html</anchorfile>
      <anchor>abf3be10d03894afb391f3a2935e3b313</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="abf3be10d03894afb391f3a2935e3b313ad4a9fa383ab700c5bdd6f31cf7df0faf">Verbose</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="abf3be10d03894afb391f3a2935e3b313a4059b0251f66a18cb56f544728796875">Info</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="abf3be10d03894afb391f3a2935e3b313a0eaadb4fcb48a0a0ed7bc9868be9fbaa">Warning</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="abf3be10d03894afb391f3a2935e3b313a902b0d55fddef6f8d651fe1035b7d4bd">Error</enumvalue>
      <enumvalue file="namespaceaworx_1_1lox.html" anchor="abf3be10d03894afb391f3a2935e3b313ad15305d7a4e34e02489c74a5ef542f36">Off</enumvalue>
    </member>
    <member kind="variable">
      <type>ALox</type>
      <name>ALOX</name>
      <anchorfile>namespaceaworx_1_1lox.html</anchorfile>
      <anchor>a29a365204e34e80d57694cfaae9df933</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>aworx::lox::core</name>
    <filename>namespaceaworx_1_1lox_1_1core.html</filename>
    <namespace>aworx::lox::core::textlogger</namespace>
    <class kind="class">aworx::lox::core::Domain</class>
    <class kind="class">aworx::lox::core::Logger</class>
    <class kind="class">aworx::lox::core::ScopeDump</class>
    <class kind="class">aworx::lox::core::ScopeInfo</class>
    <class kind="class">aworx::lox::core::ScopeStore</class>
    <class kind="class">aworx::lox::core::ScopeStoreType</class>
  </compound>
  <compound kind="namespace">
    <name>aworx::lox::core::textlogger</name>
    <filename>namespaceaworx_1_1lox_1_1core_1_1textlogger.html</filename>
    <class kind="class">aworx::lox::core::textlogger::MetaInfo</class>
    <class kind="class">aworx::lox::core::textlogger::ObjectConverter</class>
    <class kind="class">aworx::lox::core::textlogger::PlainTextLogger</class>
    <class kind="class">aworx::lox::core::textlogger::StandardConverter</class>
    <class kind="class">aworx::lox::core::textlogger::TextLogger</class>
  </compound>
  <compound kind="namespace">
    <name>aworx::lox::loggers</name>
    <filename>namespaceaworx_1_1lox_1_1loggers.html</filename>
    <class kind="class">aworx::lox::loggers::AnsiConsoleLogger</class>
    <class kind="class">aworx::lox::loggers::AnsiLogger</class>
    <class kind="class">aworx::lox::loggers::ConsoleLogger</class>
    <class kind="class">aworx::lox::loggers::MemoryLogger</class>
    <class kind="class">aworx::lox::loggers::TextFileLogger</class>
    <class kind="class">aworx::lox::loggers::VStudioLogger</class>
    <class kind="class">aworx::lox::loggers::WindowsConsoleLogger</class>
  </compound>
  <compound kind="group">
    <name>GrpALibCompilerSymbols</name>
    <title>ALib Compilation Symbols</title>
    <filename>group__GrpALibCompilerSymbols.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_API_IS_DLL</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>ga370030903f61fada5d63e9285ec12dac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_API_NO_DLL</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>ga82f838e82dbcdd33416faa80718d1711</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_AVOID_ANALYZER_WARNINGS_OFF</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>ga749e93d24d210c48e3b9b31a09727b82</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_AVOID_ANALYZER_WARNINGS_ON</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>gacaa316e613cf0f7bc021130c1b4e2f33</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_DEBUG_OFF</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>ga141eac004cc6915d6217ddd591b46b4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_DEBUG_ON</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>ga3afdbe5a480e0328d115f7b6fb17f5f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_DEBUG_STRINGS_OFF</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>gaffe4a144b888498c743d7b81d983d84b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_DEBUG_STRINGS_ON</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>ga2992625b88f70b1e01564be4e7eba2fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_FEAT_BOOST_REGEX_OFF</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>ga2e4b6bba7fbec56ff653f82e295be7da</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_FEAT_BOOST_REGEX_ON</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>ga314fe4b29310c2beb77ac4b0665249d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_FEAT_BOXING_FTYPES_OFF</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>gaac13faf1a75cc977147511eca3c354cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_FEAT_BOXING_FTYPES_ON</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>ga8f3d4ca2c8644c0152c16185e2c7db97</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_FEAT_BOXING_STD_VECTOR_OFF</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>ga61f9e13ca92fd465552273e26d7f1356</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_FEAT_BOXING_STD_VECTOR_ON</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>ga0a7efa0a62be4be6c896712d25d5bf84</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_FEAT_SINGLETON_MAPPED_OFF</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>gadd3d837a0c45194bd9d43af25c348e46</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_FEAT_SINGLETON_MAPPED_ON</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>ga854258c7143e2ab67fbd0e5abb7850dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_FEAT_THREADS_OFF</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>gac4bd86743dc96603b414fa7e517fdb9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_FEAT_THREADS_ON</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>ga1bed5257f25120726eb658164c482957</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_GDB_PP_FIND_POINTER_TYPES</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>ga4d6c9065c842cc86747c91c4cfecb198</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_GDB_PP_SUPPRESS_CHILDREN</name>
      <anchorfile>group__GrpALibCompilerSymbols.html</anchorfile>
      <anchor>gad770b011902df1af831a878eeb5ab2a6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>GrpALibCodeSelectorSymbols</name>
    <title>ALib Symbols To Select Code Fragments</title>
    <filename>group__GrpALibCodeSelectorSymbols.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_AVOID_ANALYZER_WARNINGS</name>
      <anchorfile>group__GrpALibCodeSelectorSymbols.html</anchorfile>
      <anchor>ga22453f45d36d0fa8790b74a270f027c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_DEBUG</name>
      <anchorfile>group__GrpALibCodeSelectorSymbols.html</anchorfile>
      <anchor>gac56d0d10d022f28ce6bacdc612b4a743</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_DEBUG_STRINGS</name>
      <anchorfile>group__GrpALibCodeSelectorSymbols.html</anchorfile>
      <anchor>gae0e4a87e11482df5ecd72f6a2a648f05</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_FEAT_BOOST_REGEX</name>
      <anchorfile>group__GrpALibCodeSelectorSymbols.html</anchorfile>
      <anchor>gae623ee56752a70f1e804c83db3919f15</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_FEAT_BOXING_FTYPES</name>
      <anchorfile>group__GrpALibCodeSelectorSymbols.html</anchorfile>
      <anchor>ga129dbb7714d49378dc9990ea96f01173</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_FEAT_BOXING_STD_VECTOR</name>
      <anchorfile>group__GrpALibCodeSelectorSymbols.html</anchorfile>
      <anchor>gab059dd8e204bd3f6d3d26286565bad47</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_FEAT_SINGLETON_MAPPED</name>
      <anchorfile>group__GrpALibCodeSelectorSymbols.html</anchorfile>
      <anchor>ga52f1ecb3310c948fcca7e0f9b706a495</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_FEAT_THREADS</name>
      <anchorfile>group__GrpALibCodeSelectorSymbols.html</anchorfile>
      <anchor>ga1b908cb4e15b716440551455e0a5f138</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_MODULE_STRINGS</name>
      <anchorfile>group__GrpALibCodeSelectorSymbols.html</anchorfile>
      <anchor>gaeb1ebdc8090c1bb6d3de7845f6b06e66</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_MODULE_BOXING</name>
      <anchorfile>group__GrpALibCodeSelectorSymbols.html</anchorfile>
      <anchor>ga687c54046eb8c2da084ad5850f3564bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_MODULE_CONFIGURATION</name>
      <anchorfile>group__GrpALibCodeSelectorSymbols.html</anchorfile>
      <anchor>gaf3a7c2b8c87bf604cc18de626d2c3d1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_MODULE_SYSTEM</name>
      <anchorfile>group__GrpALibCodeSelectorSymbols.html</anchorfile>
      <anchor>gabef85c7ee6f037d21186b117f700df07</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_MODULE_ALL</name>
      <anchorfile>group__GrpALibCodeSelectorSymbols.html</anchorfile>
      <anchor>gaa177515d128ddf5d8cc4649313e1abe0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>GrpALibMacros</name>
    <title>ALib Macros</title>
    <filename>group__GrpALibMacros.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_VERSION</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga46e5b5269a15bdcf84fb574fb130ee28</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_REVISION</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga3b991aab7d2cf4ec1e78508e5ca8c285</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_COMPILATION_FLAGS</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gaac71b6511690f5af0abf5213b0434111</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_STRINGIFY</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga3f61373916523c0c97327c83b2d6132e</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_CONCAT</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gaf5375d121ff32a60c641c7e3a4b7810e</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_IDENTIFIER</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gaeee83bac121e3fd5d1b452269a5853f3</anchor>
      <arglist>(prefix)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_COMMA</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gaf0f36a56c88d4138438b7897c787c59f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_COMMA_DBG</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga6730e9dcdca129649f6040b3f7144d3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_API</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga74fe706f3101d8e1e21555f772da2849</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_DBG</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga5f6b7763c5f5722d7f178c04540aba9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_REL_DBG</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga8f4eaa134959341e3f98a86c53c73281</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_NO_RETURN</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga635f795f6036977415c87d82d385489a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_SIZEOF_WCHAR_T</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga5a044189d5dbf0a9a16c757c61b30122</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_CPP14</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga07a1e2cab1fda254aa6463595223e523</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_CPP14_CONSTEXPR</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga90927aab45cbfd0e0bd84649d45ec929</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_CPP17</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gab1ee9c1033dc145502da25e970a5954b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_SRCPOS</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga78aabff444ee51f21cdfa81d81a00e64</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_SRCPOS_REL_EMPTY</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga3d922ed3a0447cf1b3fd6d23fe41527e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_SRCPOS_REL_NULLED</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga171353a218bb2e8e9af924c98968b116</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_TMP_SHOW_TYPE_IN_DEBUGGER</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga474671002d5264f4e1851ddb541d848b</anchor>
      <arglist>(type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARNINGS_RESTORE</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga65685ca0f9ee1c3af3bdc8f0df4d431d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARNINGS_ALLOW_TEMPLATE_META_PROGRAMMING</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gad64afad18f0a403ccfc7703caf03a047</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARNINGS_UNINITIALIZED_OFF</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga25e88e49df3bbf7266e602b7abf62b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARNINGS_MACRO_NOT_USED_OFF</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gae1f79630f149afe2900be8ddc95be90b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARNINGS_OVERLOAD_VIRTUAL_OFF</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gae0b01789678bd95eb30cf96f7806c084</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARNINGS_ALLOW_SPARSE_ENUM_SWITCH</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga990f89d9997c78748ad4859b52810212</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_WARNINGS_ALLOW_BITWISE_SWITCH</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga47068005503397453b64e89db03bd3e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_FALLTHROUGH</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga1518475780abb680e932a6c564e05fd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OWN</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga428418e97842561b5fa5118c120954a9</anchor>
      <arglist>(ownable)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOCK_HERE</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga551a71d481fdae3cb10d7a61632bc068</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOCK_HERE_WITH</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gae04a994c8182611e544702fea0d2f7c4</anchor>
      <arglist>(lock)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_LANG_RESOURCED</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gac419003997599df2be29a9eada120d98</anchor>
      <arglist>(TResourced, ResourceLibrary, NameString)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_LANG_EXCEPTIONS</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga1fc9d72399e5c3d3fe003f3e8070aa6d</anchor>
      <arglist>(TEnum, ResourceLibrary, ResourceName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_CONFIG_VARIABLES</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gab913c2220611acf6eaa570acc1ddcf5c</anchor>
      <arglist>(TEnum, ResourceLibrary, ResourceName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_LANG_ENUM_META_DATA</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gaa125ece6dbb0d4b39e25fba2c478c6d1</anchor>
      <arglist>(TEnum,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_LANG_ENUM_META_DATA_RESOURCE_LOADER</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga16d4f8ecf681d773b1e93f64144cc02a</anchor>
      <arglist>(TEnum)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_LANG_ENUM_NAMED</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga6915abca60042daca351cff2906671ae</anchor>
      <arglist>(TEnum)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_LANG_ENUM_PARSABLE</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga2a32829c21bae9e8a3440ec519b37a1d</anchor>
      <arglist>(TEnum)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_LANG_ENUM_READ_WRITE</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gacb8b467ea60e139999a47b8383d80be6</anchor>
      <arglist>(TEnum, NameIdx, MinParseLengthIdx)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_LANG_ENUM_PRE_AND_POSTFIX</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga5772bb0d91faffa47aa8bc8f6568c774</anchor>
      <arglist>(TEnum, PrefixString, PostfixString)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_LANG_ENUM_IS_ARITHMETICAL</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga43482d58d760408fa43d2ba7b8c845bb</anchor>
      <arglist>(TEnum)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_LANG_ENUM_IS_BITWISE</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga351cc6b784bc731b56e2d721ad1b094d</anchor>
      <arglist>(TEnum)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_LANG_ENUM_IS_ITERATABLE</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga89d74128f653f1aaf15a9889b37460ab</anchor>
      <arglist>(TEnum, StopElement)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_LANG_ENUM_IS_ITERATABLE_BEGIN_END</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga2a3bf668cc9a30831855929ab14e0e3c</anchor>
      <arglist>(TEnum, StartElement, StopElement)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_ENUM_SPECIFICATION_DECL</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga838811e215bfbe7fddeb0f4647f485e5</anchor>
      <arglist>(TSpecific,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_ENUM_SPECIFICATION_IMPL</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga2c2be690911478df26b308858bbe5d60</anchor>
      <arglist>(TSpecific)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_ENUM_SPECIFICATION</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gae61bf9a7967225079ccc6ae1c56e38e6</anchor>
      <arglist>(TSpecific, TEnum, ResourceLibrary, ResourceName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_STRINGS_SPECIALIZE_T_APPLY</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga1b2f72f053f6e29e2b722e0956807293</anchor>
      <arglist>(TYPE)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_STRINGS_SPECIALIZE_T_APPLY_DEF</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gaeb2f83fa2fd9baa7e142dbb2f16ce749</anchor>
      <arglist>(TYPE, IMPL)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_STRINGS_SPECIALIZE_T_APPLY_INLINE</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga8e39fdbc5aa1f25100582fb82e86bdda</anchor>
      <arglist>(TYPE, IMPL)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_BOXING_SPECIALIZE</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga8c3e36e52f60303e7639ae48b146f0d6</anchor>
      <arglist>(TSrc, TTarget, isArray, isUnboxable)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_BOXING_SPECIALIZE_CB</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gab85931d9bdbae09c0b79ad32105f95da</anchor>
      <arglist>(TSrc, TTarget, isArray, isUnboxable)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_BOXING_SPECIALIZE_CUB</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga431032b07152f19cf630689c0726df8c</anchor>
      <arglist>(TSrc, TTarget, isArray, isUnboxable)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_BOXING_SPECIALIZE_CB_CUB</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>ga27d2168a54be432345fb17c4d3a5f614</anchor>
      <arglist>(TSrc, TTarget, isArray, isUnboxable)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_BOXING_DEFINE_IEQUALS_FOR_COMPARABLE_TYPE</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gade46b3b2a5b16c7b6bcf26937bd26186</anchor>
      <arglist>(TComparable)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_BOXING_DEFINE_IAPPLY_FOR_APPLICABLE_TYPE</name>
      <anchorfile>group__GrpALibMacros.html</anchorfile>
      <anchor>gafe870d103ad063d0ad15942df79d75ff</anchor>
      <arglist>(TApplicable)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>GrpALoxMacrosLowLevel</name>
    <title>ALox Low level Macros</title>
    <filename>group__GrpALoxMacrosLowLevel.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>ALOX_API</name>
      <anchorfile>group__GrpALoxMacrosLowLevel.html</anchorfile>
      <anchor>ga2cde43a12bd2be40baa4896e409d642c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALOX_COMPILATION_FLAGS</name>
      <anchorfile>group__GrpALoxMacrosLowLevel.html</anchorfile>
      <anchor>ga358351aade1160917800df0f7b25a525</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_ACQUIRE</name>
      <anchorfile>group__GrpALoxMacrosLowLevel.html</anchorfile>
      <anchor>ga105a9f44250c23d6bb37df63aa9d9cbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_CI</name>
      <anchorfile>group__GrpALoxMacrosLowLevel.html</anchorfile>
      <anchor>gab22206221434dc470889fa39d451c5fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_LOX</name>
      <anchorfile>group__GrpALoxMacrosLowLevel.html</anchorfile>
      <anchor>ga71f7449b6ad8bbd0ba22f897d7338a22</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_RELEASE</name>
      <anchorfile>group__GrpALoxMacrosLowLevel.html</anchorfile>
      <anchor>ga0d5795316ecfccc7b40b43c01bf62b0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOX_ACQUIRE</name>
      <anchorfile>group__GrpALoxMacrosLowLevel.html</anchorfile>
      <anchor>ga9ac629621d8152810e41e19931c990a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOX_CI</name>
      <anchorfile>group__GrpALoxMacrosLowLevel.html</anchorfile>
      <anchor>ga94ca091e7e2c3556c74473ff0615b587</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOX_LOX</name>
      <anchorfile>group__GrpALoxMacrosLowLevel.html</anchorfile>
      <anchor>ga1f170b96d3ead37b7f530134e64bf121</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOX_RELEASE</name>
      <anchorfile>group__GrpALoxMacrosLowLevel.html</anchorfile>
      <anchor>ga2ef98e816bdf36da37bb9bddbdfd635f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>GrpMacrosDebugLog</name>
    <title>ALox Macros For Debug Logging</title>
    <filename>group__GrpMacrosDebugLog.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>Log_AddDebugLogger</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>gaa891e8485ea970f574971c6afd851218</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_Assert</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>ga2797c2e9f997606c3c786fa68720ac71</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_ClearSourcePathTrimRules</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>gaff8f037b778ce73b40e0c7a0506a8718</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_Entry</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>ga9ac05a63013c784625c66685ad51aff3</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_Error</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>ga8d8e6df0e755763bd471751235199baf</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_Exception</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>gaa94d27b5585a0b0cd1e9daadec9e745d</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_GetLogger</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>ga07ed02a33090774d44b0a9eba642f362</anchor>
      <arglist>(identifier, name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_If</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>ga7a1af9531448e3c6da1027b193e3b01b</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_Info</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>gaed4877ef3a04a6eb1ec1d4fba8305d75</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_LogState</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>ga014d8b959e78330074b7aedad3ff747b</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_MapThreadName</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>gad01526d3f277fab96faf18695d25cb7e</anchor>
      <arglist>(threadName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_Once</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>ga68c8af8941a64be4f6e075ab31c6c05b</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_Prune</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>ga7dbb7427d18d49e2dd87d5f2d2036e0b</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_RemoveDebugLogger</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>gac5d4bbea354fbabbebb7703995c3399d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_RemoveLogger</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>ga4a08a7a5c5e794a34d7d05f4d35689e4</anchor>
      <arglist>(logger)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_RemoveThreadDomain</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>gafc93873c04ed08e842109543d142fb60</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_Retrieve</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>ga233db1e86b0cf457b550f74b58d69926</anchor>
      <arglist>(data,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_SetDomain</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>gac4a4311460b712126253fce7304ac6f4</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_SetDomainSubstitutionRule</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>ga619af6c6682bc920e038b0fe006c49be</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_SetPrefix</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>ga4186c23d7999be11f0e5017d254a306c</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_SetSourcePathTrimRule</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>gac96dec2672c7ae4e722cae3b12eaf3fd</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_SetStartTime</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>ga14bcc9217818e50b7fe5028398f11e8d</anchor>
      <arglist>(time, loggerName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_SetVerbosity</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>gad5444af82c2a3640a1c456940b8c3b8f</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_Store</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>ga9c1ca580a86c5c6a0653146b0bb9cb38</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_Verbose</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>ga975fbf7e95ed6506992f9714627202d0</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Log_Warning</name>
      <anchorfile>group__GrpMacrosDebugLog.html</anchorfile>
      <anchor>gaa9822f0eda4cc7e9c3f3e99d6238f2aa</anchor>
      <arglist>(...)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>GrpMacrosReleaseLog</name>
    <title>ALox Macros For Release Logging</title>
    <filename>group__GrpMacrosReleaseLog.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>Lox_Assert</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga4d9961312aab181a28b21724c3809184</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_ClearSourcePathTrimRules</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga1689da460f8040489689b3f45cf1e6b2</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_Entry</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga3ee12da39c3574baf4fb03f7f323c886</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_Error</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga5fa12e4bc99fd2ebed4fe90729f54a03</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_Exception</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga2317941daa2d98c636a10cda8d5d7f04</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_GetLogger</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga8536e68dcdee27e1d3463687d42ee6ed</anchor>
      <arglist>(identifier, name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_If</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga31e9c5302ccb2af7285d9e17a46aac2b</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_Info</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga28233c29442a3ae8996d32b5078537d9</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_LogState</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga6a3836bfb9783687112adc22e265631d</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_MapThreadName</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga089dc860d3f28c5cf30b661f2877462a</anchor>
      <arglist>(threadName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_Once</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga03e5f8a0b134f709f130a4f93b2f8ab2</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_Prune</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga04158d8131eba14e98f93e433b6325d2</anchor>
      <arglist>(releaseLogCode)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_RemoveLogger</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga321e65d2004cef126220b042fc95e03b</anchor>
      <arglist>(logger)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_RemoveThreadDomain</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga5af8171356c0b231483221d0b3e534c1</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_Retrieve</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga21ac85d6bd6b297b92b707b6362f52df</anchor>
      <arglist>(data,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_SetDomain</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga7e1bc971e6cd3b071fbc928a7d46fae9</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_SetDomainSubstitutionRule</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>gab66ecad871e42c6779e9f2bb62921be3</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_SetPrefix</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga0f4d320a3b393e1e6eba353f567dec4d</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_SetSourcePathTrimRule</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga26b42492cafe7bc093cd810facddeb6b</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_SetStartTime</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga2c91f19bc972dbacc137e8c4c88ee25c</anchor>
      <arglist>(time, loggerName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_SetVerbosity</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>ga58d12e520c215bfc22c8da42777d567b</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_Store</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>gaa8e5c76201f2ac838ef643377641f2a6</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_Verbose</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>gacbfc03392b8a4f79d0bcb46bc2825d31</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Lox_Warning</name>
      <anchorfile>group__GrpMacrosReleaseLog.html</anchorfile>
      <anchor>gaf2a9706a6b6c48b69cc10ae1d65d9379</anchor>
      <arglist>(...)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>GrpALoxCompilerSymbols</name>
    <title>ALox Compilation Symbols</title>
    <filename>group__GrpALoxCompilerSymbols.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>ALOX_API_IS_DLL</name>
      <anchorfile>group__GrpALoxCompilerSymbols.html</anchorfile>
      <anchor>ga04a0f11ecdfec97d0ceecf328b8f181f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALOX_API_NO_DLL</name>
      <anchorfile>group__GrpALoxCompilerSymbols.html</anchorfile>
      <anchor>ga07db8b62be0212c2e0468127fb18798d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALOX_DBG_LOG_CI_OFF</name>
      <anchorfile>group__GrpALoxCompilerSymbols.html</anchorfile>
      <anchor>gabf2ce25e392b218c30b6b0af8280ddf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALOX_DBG_LOG_CI_ON</name>
      <anchorfile>group__GrpALoxCompilerSymbols.html</anchorfile>
      <anchor>ga9920512a7b2c48a248b5cfb1643c7cac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALOX_DBG_LOG_OFF</name>
      <anchorfile>group__GrpALoxCompilerSymbols.html</anchorfile>
      <anchor>gaf2de46ee4b30ee640266f7ac5de25bb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALOX_DBG_LOG_ON</name>
      <anchorfile>group__GrpALoxCompilerSymbols.html</anchorfile>
      <anchor>ga1d6b17b1dc814c44f312baf8d6f56688</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALOX_REL_LOG_CI_OFF</name>
      <anchorfile>group__GrpALoxCompilerSymbols.html</anchorfile>
      <anchor>ga9723e112c2b491520922d1fdfef60504</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALOX_REL_LOG_CI_ON</name>
      <anchorfile>group__GrpALoxCompilerSymbols.html</anchorfile>
      <anchor>ga85c683ba401d4c9216c96a9a17a9e9a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALOX_REL_LOG_OFF</name>
      <anchorfile>group__GrpALoxCompilerSymbols.html</anchorfile>
      <anchor>gae77944a12e0a9b9bc2657cb7298d70f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALOX_REL_LOG_ON</name>
      <anchorfile>group__GrpALoxCompilerSymbols.html</anchorfile>
      <anchor>ga56671e8b3fa44f19acb0d9c4c4403682</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>GrpALoxCodeSelectorSymbols</name>
    <title>ALox Symbols to Select Code Fragments</title>
    <filename>group__GrpALoxCodeSelectorSymbols.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>ALOX_DBG_LOG</name>
      <anchorfile>group__GrpALoxCodeSelectorSymbols.html</anchorfile>
      <anchor>ga2c6ba32fb7e34be7cee2100578b84a6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALOX_DBG_LOG_CI</name>
      <anchorfile>group__GrpALoxCodeSelectorSymbols.html</anchorfile>
      <anchor>ga392381bb9caea53c133ce68c32cee4e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALOX_REL_LOG</name>
      <anchorfile>group__GrpALoxCodeSelectorSymbols.html</anchorfile>
      <anchor>ga4d0c70512b17f1dd4fa3556f79dd2689</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALOX_REL_LOG_CI</name>
      <anchorfile>group__GrpALoxCodeSelectorSymbols.html</anchorfile>
      <anchor>ga4b0e38e300ec824146da5e868f2c6290</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>GrpALibStringsMacros</name>
    <title>GrpALibStringsMacros</title>
    <filename>group__GrpALibStringsMacros.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_STRING_CONSTRUCTOR_FIX</name>
      <anchorfile>group__GrpALibStringsMacros.html</anchorfile>
      <anchor>ga58ee5d0225baf5d3ad3d3592cb6a7a4e</anchor>
      <arglist>(TYPE)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_STRING_DBG_CHK</name>
      <anchorfile>group__GrpALibStringsMacros.html</anchorfile>
      <anchor>gae7492253da37c76b118d446494f1f632</anchor>
      <arglist>(instance)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIB_STRING_DBG_UNTERMINATE</name>
      <anchorfile>group__GrpALibStringsMacros.html</anchorfile>
      <anchor>gacf96023d903e78f3b5d784a799041667</anchor>
      <arglist>(astring, offset)</arglist>
    </member>
  </compound>
  <compound kind="page">
    <name>alox_cpp_mainpage</name>
    <title>C++ Reference</title>
    <filename>alox_cpp_mainpage</filename>
  </compound>
  <compound kind="page">
    <name>alox_cpp_prepro</name>
    <title>ALox and the C++ Preprocessor</title>
    <filename>alox_cpp_prepro</filename>
    <docanchor file="alox_cpp_prepro" title="2. Introduction">alox_cpp_prepro_intro</docanchor>
    <docanchor file="alox_cpp_prepro" title="2.1. Structure of ALox Preprocessor Usage">alox_cpp_prepro_intro1</docanchor>
    <docanchor file="alox_cpp_prepro" title="1.2. Preprocessor symbols introduced by ALib">alox_cpp_prepro_intro2</docanchor>
    <docanchor file="alox_cpp_prepro" title="3. Compilation Symbols">alox_cpp_prepro_compsymbols</docanchor>
    <docanchor file="alox_cpp_prepro" title="4. Code Selection Symbols">alox_cpp_prepro_code_selection_symbols</docanchor>
    <docanchor file="alox_cpp_prepro" title="5. C++ Macros">alox_cpp_prepro_macros</docanchor>
    <docanchor file="alox_cpp_prepro" title="5.1. ALib Macros">alox_cpp_prepro_44</docanchor>
    <docanchor file="alox_cpp_prepro" title="5.2. ALox Logging Macros">alox_cpp_prepro_42</docanchor>
    <docanchor file="alox_cpp_prepro" title="5.3. ALox Low Level Macros">alox_cpp_prepro_43</docanchor>
  </compound>
  <compound kind="page">
    <name>alox_cpp_setup</name>
    <title>IDE Setup for ALox for C++</title>
    <filename>alox_cpp_setup</filename>
    <docanchor file="alox_cpp_setup" title="1. Introduction">alox_cpp_setupcppsetup_1</docanchor>
    <docanchor file="alox_cpp_setup" title="2. Basics">alox_cpp_setupcppsetup_aloxfolder</docanchor>
    <docanchor file="alox_cpp_setup" title="3. Using ALox with CMake">alox_cpp_setupcppsetup_cmake</docanchor>
    <docanchor file="alox_cpp_setup" title="3.1 CMake Files and Targets">alox_cpp_setupcppsetup_cmake_intro</docanchor>
    <docanchor file="alox_cpp_setup" title="3.2 Building The Sample Project">alox_cpp_setupcppsetup_cmake_sample</docanchor>
    <docanchor file="alox_cpp_setup" title="3.3 Compiling The Unit Tests">alox_cpp_setupcppsetup_cmake_unittests</docanchor>
    <docanchor file="alox_cpp_setup" title="3.4 Using Cotire To Speed-Up Builds">alox_cpp_setupcppsetup_cmake_cotire</docanchor>
    <docanchor file="alox_cpp_setup" title="3.5 Further Notes On CMake">alox_cpp_setupcppsetup_cmake_notes</docanchor>
    <docanchor file="alox_cpp_setup" title="4. Using ALox with Different IDEs">alox_cpp_setupcppsetup_ides</docanchor>
    <docanchor file="alox_cpp_setup" title="4.1. QT Creator">alox_cpp_setupcppsetup_qtcreator</docanchor>
    <docanchor file="alox_cpp_setup" title="4.1.1 Using QT Creator with QMake">alox_cpp_setupcppsetup_qtcreator_qm</docanchor>
    <docanchor file="alox_cpp_setup" title="4.1.2 Using QT Creator with CMake">alox_cpp_setupcppsetup_qtcreator_cm</docanchor>
    <docanchor file="alox_cpp_setup" title="4.2. Using ALox with Visual Studio">alox_cpp_setupcppsetup_vstudio</docanchor>
    <docanchor file="alox_cpp_setup" title="4.3 Using ALox with JetBrains CLion">alox_cpp_setupcppsetup_clion</docanchor>
  </compound>
  <compound kind="page">
    <name>alox_cpp_tutorial</name>
    <title>ALox for C++ Tutorial</title>
    <filename>alox_cpp_tutorial</filename>
    <docanchor file="alox_cpp_tutorial" title="1. Hello ALox">alox_tutcpp_hello_alox</docanchor>
    <docanchor file="alox_cpp_tutorial" title="2. Class Lox and ALox C++ Macros">alox_tutcpp_adding_ALox</docanchor>
    <docanchor file="alox_cpp_tutorial" title="3. Create a tutorial project or equip your current project with ALox">alox_tutcpp_createproject</docanchor>
    <docanchor file="alox_cpp_tutorial" title="4. Class Logger">alox_tutcpp_logger</docanchor>
    <docanchor file="alox_cpp_tutorial" title="5. Run the Application">alox_tutcpp_run</docanchor>
    <docanchor file="alox_cpp_tutorial" title="5.1. Run your application within your IDE">alox_tutcpp_run_ide</docanchor>
    <docanchor file="alox_cpp_tutorial" title="5.2. Build a release version">alox_tutcpp_run_release</docanchor>
    <docanchor file="alox_cpp_tutorial" title="6. Controlling the &apos;Verbosity&apos;">alox_tutcpp_verbosity</docanchor>
    <docanchor file="alox_cpp_tutorial" title="7. Log Domains">alox_tutcpp_logdomains</docanchor>
    <docanchor file="alox_cpp_tutorial" title="8. Hierarchical Log Domains">alox_tutcpp_logdomains_hierarchical</docanchor>
    <docanchor file="alox_cpp_tutorial" title="9. Scope Domains">alox_tutcpp_scope_domains</docanchor>
    <docanchor file="alox_cpp_tutorial" title="10. Formatting">alox_tutcpp_formatting</docanchor>
    <docanchor file="alox_cpp_tutorial" title="11. Conditional logging">alox_tutcpp_conditional</docanchor>
    <docanchor file="alox_cpp_tutorial" title="12. Prefixes">alox_tutcpp_Log_Prefix</docanchor>
    <docanchor file="alox_cpp_tutorial" title="13. LogTools: Log Complex Data">alox_tutcpp_logtools</docanchor>
    <docanchor file="alox_cpp_tutorial" title="14. Name Your Threads">alox_tutcpp_threadnames</docanchor>
    <docanchor file="alox_cpp_tutorial" title="15. ALox Log Data">alox_tutcpp_logdata</docanchor>
    <docanchor file="alox_cpp_tutorial" title="16. ALox Configuration Information and Internal Log Messages">alox_tutcpp_config</docanchor>
    <docanchor file="alox_cpp_tutorial" title="Further Reading">alox_tutcpp_end</docanchor>
  </compound>
</tagfile>
